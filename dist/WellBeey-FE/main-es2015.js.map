{"version":3,"sources":["./$_lazy_route_resource lazy namespace object","./src/app/app.component.html","./src/app/components/booking-enter-time/booking-enter-time.component.html","./src/app/components/booking-enter/booking-enter.component.html","./src/app/components/chat-section/chat-section.component.html","./src/app/components/common-body/common-body.component.html","./src/app/components/contact-page/contact-page.component.html","./src/app/components/doctor-finance/doctor-finance.component.html","./src/app/components/doctor-profile/doctor-profile.component.html","./src/app/components/doctor-schedule/doctor-schedule.component.html","./src/app/components/doctor-side-booking-list/doctor-side-booking-list.component.html","./src/app/components/doctor-side-booking/doctor-side-booking.component.html","./src/app/components/faqs/faqs.component.html","./src/app/components/footer/footer.component.html","./src/app/components/header/header.component.html","./src/app/components/landing-page/landing-page.component.html","./src/app/components/modal/modal.component.html","./src/app/components/page-title/page-title.component.html","./src/app/components/patient-booking-list/patient-booking-list.component.html","./src/app/components/patient-profile/patient-profile.component.html","./src/app/components/payment-success/payment-success.component.html","./src/app/components/prescription-list/prescription-list.component.html","./src/app/components/prescription/prescription.component.html","./src/app/components/professional-card/professional-card.component.html","./src/app/components/search-professionals-main/search-professionals-main.component.html","./src/app/components/search-professionals/search-professionals.component.html","./src/app/components/signup/sign-up.component.html","./src/app/components/transition-page/transition-page.component.html","./node_modules/tslib/tslib.es6.js","./src/app/app-routing.module.ts","./src/app/app.component.css","./src/app/app.component.ts","./src/app/app.module.ts","./src/app/app.service.ts","./src/app/components/booking-enter-time/booking-enter-time.component.css","./src/app/components/booking-enter-time/booking-enter-time.component.ts","./src/app/components/booking-enter/booking-enter.component.css","./src/app/components/booking-enter/booking-enter.component.ts","./src/app/components/chat-section/chat-section.component.css","./src/app/components/chat-section/chat-section.component.ts","./src/app/components/common-body/common-body.component.css","./src/app/components/common-body/common-body.component.ts","./src/app/components/contact-page/contact-page.component.css","./src/app/components/contact-page/contact-page.component.ts","./src/app/components/doctor-finance/doctor-finance.component.css","./src/app/components/doctor-finance/doctor-finance.component.ts","./src/app/components/doctor-profile/doctor-profile.component.css","./src/app/components/doctor-profile/doctor-profile.component.ts","./src/app/components/doctor-schedule/doctor-schedule.component.css","./src/app/components/doctor-schedule/doctor-schedule.component.ts","./src/app/components/doctor-side-booking-list/doctor-side-booking-list.component.css","./src/app/components/doctor-side-booking-list/doctor-side-booking-list.component.ts","./src/app/components/doctor-side-booking/doctor-side-booking.component.css","./src/app/components/doctor-side-booking/doctor-side-booking.component.ts","./src/app/components/faqs/faqs.component.css","./src/app/components/faqs/faqs.component.ts","./src/app/components/footer/footer.component.css","./src/app/components/footer/footer.component.ts","./src/app/components/header/header.component.css","./src/app/components/header/header.component.ts","./src/app/components/landing-page/landing-page.component.css","./src/app/components/landing-page/landing-page.component.ts","./src/app/components/modal/modal.component.css","./src/app/components/modal/modal.component.ts","./src/app/components/page-title/page-title.component.css","./src/app/components/page-title/page-title.component.ts","./src/app/components/patient-booking-list/patient-booking-list.component.css","./src/app/components/patient-booking-list/patient-booking-list.component.ts","./src/app/components/patient-profile/patient-profile.component.css","./src/app/components/patient-profile/patient-profile.component.ts","./src/app/components/payment-success/payment-success.component.css","./src/app/components/payment-success/payment-success.component.ts","./src/app/components/prescription-list/prescription-list.component.css","./src/app/components/prescription-list/prescription-list.component.ts","./src/app/components/prescription/prescription.component.css","./src/app/components/prescription/prescription.component.ts","./src/app/components/professional-card/professional-card.component.css","./src/app/components/professional-card/professional-card.component.ts","./src/app/components/search-professionals-main/search-professionals-main.component.css","./src/app/components/search-professionals-main/search-professionals-main.component.ts","./src/app/components/search-professionals/search-professionals.component.css","./src/app/components/search-professionals/search-professionals.component.ts","./src/app/components/signup/sign-up.component.css","./src/app/components/signup/sign-up.component.ts","./src/app/components/transition-page/transition-page.component.css","./src/app/components/transition-page/transition-page.component.ts","./src/app/models/auth-model.ts","./src/app/models/request-options.ts","./src/app/models/user-data.ts","./src/app/services/data-handler.service.ts","./src/app/services/data-loader.service.ts","./src/app/services/data-store.service.ts","./src/app/utils/Constants.ts","./src/environments/environment.ts","./src/main.ts"],"names":[],"mappings":"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","file":"main-es2015.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","export default \"<div class=\\\"app-header-div\\\">\\r\\n    <app-header></app-header>\\r\\n</div>\\r\\n<div class=\\\"app-body-div\\\">\\r\\n<!--    <app-common-body></app-common-body>-->\\r\\n    <router-outlet (activate)=\\\"onActivate($event)\\\" ></router-outlet>\\r\\n</div>\\r\\n<app-footer></app-footer>\\r\\n\"","export default \"<div class=\\\"mat-card-style\\\" align=\\\"center\\\">\\r\\n    <ng-container *ngIf=\\\"!summaryShown && !showRedirectionMessage\\\">\\r\\n\\r\\n        <h4>Select Your Convenient Date and Time</h4>\\r\\n        <mat-form-field  style=\\\"width: 240px\\\" >\\r\\n            <mat-label>Date</mat-label>\\r\\n            <mat-select [(value)]=\\\"selectedDate\\\">\\r\\n                <ng-container *ngFor=\\\"let day of days\\\">\\r\\n                    <mat-option *ngIf=\\\"day.available\\\" value=\\\"{{day.date}}\\\">{{day.date}} - {{day.day}}</mat-option>\\r\\n                </ng-container>\\r\\n            </mat-select>\\r\\n        </mat-form-field>\\r\\n        <ng-container *ngIf=\\\"selectedDate !== undefined && selectedDate !== null\\\">\\r\\n            <mat-form-field  style=\\\"width: 240px\\\" >\\r\\n                <mat-label>Time</mat-label>\\r\\n                <mat-select [(value)]=\\\"selectedAppointmentId\\\">\\r\\n                    <ng-container *ngFor=\\\"let timeSlot of getTimeSlots(selectedDate)\\\">\\r\\n                        <mat-option value=\\\"{{timeSlot.appointmentId}}\\\">{{timeSlot.displayAppointmentTime | date:'shortTime'}}</mat-option>\\r\\n                    </ng-container>\\r\\n                </mat-select>\\r\\n            </mat-form-field>\\r\\n        </ng-container>\\r\\n        <button [disabled]=\\\"!selectedDate || !selectedAppointmentId\\\" mat-raised-button color=\\\"primary\\\" style=\\\"width: 240px\\\" (click)=\\\"continueClicked(true)\\\">Continue</button>\\r\\n        <br>\\r\\n        <br>\\r\\n\\r\\n        <button mat-raised-button color=\\\"secondary\\\" style=\\\"width: 240px\\\"  (click)=\\\"goToSearchProfessionals()\\\">Back</button>\\r\\n\\r\\n        <br>\\r\\n        <br>\\r\\n<!--        <button *ngIf=\\\"!isScheduleVisible\\\" mat-raised-button color=\\\"secondary\\\" style=\\\"width: 220px\\\" (click)=\\\"scheduleVisibilityToggle(true)\\\" >Show Available Times</button>-->\\r\\n<!--        <button *ngIf=\\\"isScheduleVisible\\\" mat-raised-button color=\\\"secondary\\\" style=\\\"width: 220px\\\" (click)=\\\"scheduleVisibilityToggle(false)\\\" >Hide Available Times</button>-->\\r\\n<!--        <br>-->\\r\\n<!--        <br>-->\\r\\n<!--        <ng-container *ngIf=\\\"isScheduleVisible\\\" >-->\\r\\n<!--            <p>Available Times:</p>-->\\r\\n<!--            <mat-accordion>-->\\r\\n<!--                <div *ngFor=\\\"let schedule of doctorSchedule.schedule;\\\">-->\\r\\n<!--                    <mat-expansion-panel style=\\\"width: 320px\\\">-->\\r\\n<!--                        <mat-expansion-panel-header>-->\\r\\n<!--                            <mat-panel-title>{{schedule.title}}</mat-panel-title>-->\\r\\n<!--                        </mat-expansion-panel-header>-->\\r\\n<!--                        <p>Time Slot 1: <b>{{schedule.slot1}}</b></p>-->\\r\\n<!--                        <p>Time Slot 2: <b>{{schedule.slot2}}</b></p>-->\\r\\n<!--                        <p>Time Slot 3: <b>{{schedule.slot3}}</b></p>-->\\r\\n<!--                    </mat-expansion-panel>-->\\r\\n<!--                    <br>-->\\r\\n<!--                </div>-->\\r\\n<!--            </mat-accordion>-->\\r\\n<!--        </ng-container>-->\\r\\n\\r\\n    </ng-container>\\r\\n    <ng-container *ngIf=\\\"summaryShown && !showRedirectionMessage\\\">\\r\\n        <div style=\\\"width: 240px\\\">\\r\\n            <p>** You are about to book a consultation with <b>{{doctor.name}}</b> on <b>{{selectedDate}}</b>. Wait for the Skype call from him/her at around <b>{{getDisplaySelectedTime(selectedAppointmentId)}}</b><br><br>\\r\\n                Make sure your Skype call notifications are switched on.<br><br>\\r\\n            (Note that the time might change due to different reasons)</p>\\r\\n        </div>\\r\\n        <button (click)=\\\"navigateToPaymentOrLogIn()\\\" mat-raised-button color=\\\"primary\\\" style=\\\"width: 240px\\\">Continue</button>\\r\\n        <br>\\r\\n        <br>\\r\\n\\r\\n        <button mat-raised-button color=\\\"secondary\\\" style=\\\"width: 240px\\\"  (click)=\\\"continueClicked(false)\\\">Back</button>\\r\\n    </ng-container>\\r\\n    <ng-container *ngIf=\\\"showRedirectionMessage\\\">\\r\\n        <app-transition-page\\r\\n                [modalType]=\\\"transitionType\\\"\\r\\n                (clickEmitter)=\\\"clickFromTransitionPage($event)\\\"\\r\\n        ></app-transition-page>\\r\\n    </ng-container>\\r\\n    <br>\\r\\n    <br>\\r\\n</div>\\r\\n\"","export default \"<div class=\\\"mat-card-style\\\">\\r\\n    <div *ngIf=\\\"doctor\\\">\\r\\n        <div style=\\\"width: 320px; height: auto;\\\">\\r\\n            <table>\\r\\n                <tr>\\r\\n                    <th style=\\\"width: 115px; height: 115px; align-content: center\\\">\\r\\n                        <img src=\\\"./assets/img/doctor2.jpg\\\" width=\\\"115px\\\" height=\\\"115px\\\">\\r\\n                    </th>\\r\\n                    <th>\\r\\n                    </th>\\r\\n                    <th>\\r\\n                        <table>\\r\\n                            <tr>\\r\\n                                <th style=\\\"font-size: medium; text-align: left\\\">\\r\\n                                    {{doctor.name | uppercase}}\\r\\n                                </th>\\r\\n                            </tr>\\r\\n                            <tr>\\r\\n                                <td style=\\\"font-size: x-small; text-align: left\\\">\\r\\n                                    {{doctor.bio}}\\r\\n                                </td>\\r\\n                            </tr>\\r\\n                            <tr>\\r\\n                                <mat-divider style=\\\"left: inherit; width: 180px\\\"></mat-divider>\\r\\n                            </tr>\\r\\n                            <tr>\\r\\n                            </tr>\\r\\n                            <tr>\\r\\n                            </tr>\\r\\n                            <tr>\\r\\n                            </tr>\\r\\n                            <tr>\\r\\n                                <td style=\\\"font-size: small; text-align: left\\\">\\r\\n                                    Specializations:\\r\\n                                </td>\\r\\n                            </tr>\\r\\n                            <tr>\\r\\n                            </tr>\\r\\n                            <div *ngFor=\\\"let speciality of doctor.specialities\\\">\\r\\n                                <tr>\\r\\n                                    <td style=\\\"font-size: x-small; text-align: left\\\">\\r\\n                                        {{speciality}}\\r\\n                                    </td>\\r\\n                                </tr>\\r\\n                            </div>\\r\\n                            <tr>\\r\\n                                <mat-divider style=\\\"left: inherit; width: 180px\\\"></mat-divider>\\r\\n                            </tr>\\r\\n                            <tr>\\r\\n                            </tr>\\r\\n                            <tr>\\r\\n                            </tr>\\r\\n                            <tr>\\r\\n                            </tr>\\r\\n                            <tr>\\r\\n                                <td style=\\\"font-size: small; text-align: left\\\">\\r\\n                                    Charge per consultation:\\r\\n                                </td>\\r\\n                            </tr>\\r\\n                            <tr>\\r\\n                            </tr>\\r\\n                            <tr>\\r\\n                                <td style=\\\"font-size: x-small; text-align: left\\\">\\r\\n                                    {{doctor.consultationPrice}}\\r\\n                                </td>\\r\\n                            </tr>\\r\\n                            <tr>\\r\\n                        </table>\\r\\n                    </th>\\r\\n                </tr>\\r\\n            </table>\\r\\n        </div>\\r\\n        <br>\\r\\n    </div>\\r\\n\\r\\n    <div>\\r\\n        <br>\\r\\n\\r\\n        <span>Total amount: </span><span>{{doctor.consultationPrice}}</span>\\r\\n        <br>\\r\\n        <br>\\r\\n<!--        <h5>{{doctor.consultationPrice}}</h5>-->\\r\\n    </div>\\r\\n    <button mat-raised-button color=\\\"primary\\\" style=\\\"width: 320px\\\">Continue to payment</button>\\r\\n    <br>\\r\\n    <br>\\r\\n    <button (click)=\\\"goBack()\\\" style=\\\"width: 320px\\\" mat-raised-button color=\\\"secondary\\\">Back</button>\\r\\n</div>\\r\\n\"","export default \"<div *ngFor=\\\"let message of messageThread\\\">\\r\\n    <div *ngIf=\\\"message.sender === 'doctor'\\\" style=\\\"align: right\\\">\\r\\n        <p style=\\\"font-style: italic; font-size: small; text-align:right; color: cornflowerblue\\\" role=\\\"listitem\\\">You: {{message.message}}</p>\\r\\n    </div>\\r\\n    <div *ngIf=\\\"message.sender === 'patient'\\\" >\\r\\n        <p style=\\\"font-style: italic; font-size: small; text-align:left; color: slategray\\\" role=\\\"listitem\\\">{{patientName}}: {{message.message}}</p>\\r\\n    </div>\\r\\n</div>\\r\\n\"","export default \"<div class=\\\"mat-card-style\\\">\\r\\n\\r\\n<!--    common-->\\r\\n    <div *ngIf=\\\"flow===1\\\">\\r\\n        <app-landing-page\\r\\n        >\\r\\n        </app-landing-page>\\r\\n    </div>\\r\\n    <div *ngIf=\\\"flow===2\\\">\\r\\n        <app-signup\\r\\n        ></app-signup>\\r\\n    </div>\\r\\n<!--    patient-->\\r\\n    <div  *ngIf=\\\"flow===3\\\">\\r\\n        <app-search-professionals-main></app-search-professionals-main>\\r\\n    </div>\\r\\n    <div *ngIf=\\\"flow===14\\\">\\r\\n        <app-booking-enter-time></app-booking-enter-time>\\r\\n    </div>\\r\\n    <div *ngIf=\\\"flow===13\\\">\\r\\n        <app-booking-enter></app-booking-enter>\\r\\n    </div>\\r\\n    <div *ngIf=\\\"flow===15\\\">\\r\\n        <app-payment-success></app-payment-success>\\r\\n    </div>\\r\\n    <div *ngIf=\\\"flow===17\\\">\\r\\n        <app-patient-profile></app-patient-profile>\\r\\n    </div>\\r\\n    <div *ngIf=\\\"flow===18\\\">\\r\\n        <app-patient-booking-list></app-patient-booking-list>\\r\\n    </div>\\r\\n\\r\\n\\r\\n<!--    doctor-->\\r\\n\\r\\n    <div *ngIf=\\\"flow===4\\\">\\r\\n        <app-doctor-profile></app-doctor-profile>\\r\\n    </div>\\r\\n    <div *ngIf=\\\"flow===6\\\">\\r\\n        <app-doctor-schedule\\r\\n        ></app-doctor-schedule>\\r\\n    </div>\\r\\n\\r\\n    <div  *ngIf=\\\"flow===7\\\">\\r\\n        <app-doctor-side-booking-list></app-doctor-side-booking-list>\\r\\n    </div>\\r\\n    <div *ngIf=\\\"flow===8\\\">\\r\\n        <app-doctor-side-booking></app-doctor-side-booking>\\r\\n    </div>\\r\\n    <div *ngIf=\\\"flow===12\\\">\\r\\n        <app-prescription></app-prescription>\\r\\n    </div>\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n    <div *ngIf=\\\"flow===10\\\">\\r\\n        <app-contact-page></app-contact-page>\\r\\n    </div>\\r\\n\\r\\n    <div *ngIf=\\\"flow===11\\\">\\r\\n        <app-faqs></app-faqs>\\r\\n    </div>\\r\\n    <div *ngIf=\\\"flow===9\\\">\\r\\n        <app-search-professionals></app-search-professionals>\\r\\n    </div>\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n</div>\\r\\n\"","export default \"<div class=\\\"mat-card-style\\\">\\r\\n    <p style=\\\"font-size: medium\\\">Phone number: {{phoneNumber}}</p><br>\\r\\n    <p style=\\\"font-size: medium\\\">Email: {{email}}</p><br>\\r\\n    <p style=\\\"font-size: medium\\\">Facebook: {{facebook}}</p>\\r\\n</div>\\r\\n\"","export default \"<div class=\\\"mat-card-style\\\">\\r\\n\\r\\n    <mat-form-field  style=\\\"width: 240px\\\" class=\\\"example-full-width\\\">\\r\\n        <mat-label>Price Per Consultation:</mat-label>\\r\\n        <input matInput placeholder=\\\"\\\" value=\\\"1500\\\">\\r\\n    </mat-form-field>\\r\\n\\r\\n    <br>\\r\\n    <br>\\r\\n    <button style=\\\"width: 320px\\\" mat-raised-button color=\\\"primary\\\">Save</button>\\r\\n    <br>\\r\\n    <br>\\r\\n</div>\\r\\n\"","export default \"<div class=\\\"mat-card-style\\\">\\r\\n\\r\\n    <ng-container *ngIf=\\\"editable\\\">\\r\\n        <mat-form-field style=\\\"width: 240px\\\" class=\\\"example-full-width\\\">\\r\\n            <mat-label>Title</mat-label>\\r\\n            <mat-select required [(value)]=\\\"userData.title\\\">\\r\\n                <ng-container *ngFor=\\\"let title of titles\\\" >\\r\\n                    <mat-option value=\\\"{{title.value}}\\\">\\r\\n                        {{title.value}}\\r\\n                    </mat-option>\\r\\n                </ng-container>\\r\\n            </mat-select>\\r\\n        </mat-form-field>\\r\\n\\r\\n        <mat-form-field style=\\\"width: 240px\\\" class=\\\"example-full-width\\\">\\r\\n            <mat-label>First Name: {{userData.firstName}}</mat-label>\\r\\n            <input required matInput placeholder=\\\"\\\" [(ngModel)]=\\\"userData.firstName\\\">\\r\\n        </mat-form-field>\\r\\n\\r\\n        <mat-form-field style=\\\"width: 240px\\\" class=\\\"example-full-width\\\">\\r\\n            <mat-label>Last Name: {{userData.lastName}}</mat-label>\\r\\n            <input required matInput placeholder=\\\"\\\" [(ngModel)]=\\\"userData.lastName\\\">\\r\\n        </mat-form-field>\\r\\n\\r\\n        <mat-form-field style=\\\"width: 240px\\\" class=\\\"example-full-width\\\">\\r\\n            <mat-label>Professional Level</mat-label>\\r\\n            <mat-select required [(value)]=\\\"userData.professionalType\\\">\\r\\n                <ng-container *ngFor=\\\"let professionalType of doctorTypes\\\" >\\r\\n                    <mat-option value=\\\"{{professionalType.value}}\\\">\\r\\n                        {{professionalType.value}}\\r\\n                    </mat-option>\\r\\n                </ng-container>\\r\\n            </mat-select>\\r\\n        </mat-form-field>\\r\\n\\r\\n        <mat-form-field  style=\\\"width: 240px\\\" class=\\\"example-full-width\\\">\\r\\n            <mat-label>Registration Number (SLMC):</mat-label>\\r\\n            <input matInput placeholder=\\\"\\\"  [(ngModel)]=\\\"userData.regNo\\\">\\r\\n        </mat-form-field>\\r\\n\\r\\n        <mat-form-field  style=\\\"width: 240px\\\" class=\\\"example-full-width\\\">\\r\\n            <mat-label>Qualifications / Description:</mat-label>\\r\\n            <textarea required matInput placeholder=\\\"\\\" [(ngModel)]=\\\"userData.qualifications\\\"></textarea>\\r\\n        </mat-form-field>\\r\\n\\r\\n        <mat-form-field *ngIf=\\\"isConsultant(userData.professionalType)\\\" style=\\\"width: 240px\\\" class=\\\"example-full-width\\\">\\r\\n            <mat-label>Specialization #1</mat-label>\\r\\n            <mat-select matNativeControl [(value)]=\\\"userData.specialityA\\\">\\r\\n                <ng-container *ngFor=\\\"let specialization of specializations\\\" >\\r\\n                    <mat-option value=\\\"{{specialization}}\\\">\\r\\n                        {{specialization}}\\r\\n                    </mat-option>\\r\\n                </ng-container>\\r\\n            </mat-select>\\r\\n        </mat-form-field>\\r\\n        <mat-form-field *ngIf=\\\"isConsultant(userData.professionalType)\\\" style=\\\"width: 240px\\\" class=\\\"example-full-width\\\">\\r\\n            <mat-label>Specialization #2 (Optional)</mat-label>\\r\\n            <mat-select matNativeControl [(value)]=\\\"userData.specialityB\\\">\\r\\n                <ng-container *ngFor=\\\"let specialization of specializations\\\" >\\r\\n                    <mat-option value=\\\"{{specialization.value}}\\\">\\r\\n                        {{specialization.value}}\\r\\n                    </mat-option>\\r\\n                </ng-container>\\r\\n            </mat-select>\\r\\n        </mat-form-field>\\r\\n        <mat-form-field *ngIf=\\\"isConsultant(userData.professionalType)\\\" style=\\\"width: 240px\\\" class=\\\"example-full-width\\\">\\r\\n            <mat-label>Specialization #3 (Optional)</mat-label>\\r\\n            <mat-select matNativeControl [(value)]=\\\"userData.specialityC\\\">\\r\\n                <ng-container *ngFor=\\\"let specialization of specializations\\\" >\\r\\n                    <mat-option value=\\\"{{specialization.value}}\\\">\\r\\n                        {{specialization.value}}\\r\\n                    </mat-option>\\r\\n                </ng-container>\\r\\n            </mat-select>\\r\\n        </mat-form-field>\\r\\n\\r\\n        <mat-form-field  style=\\\"width: 240px\\\" class=\\\"example-full-width\\\">\\r\\n            <mat-label>WhatsApp Number:</mat-label>\\r\\n            <input required matInput placeholder=\\\"\\\" [(ngModel)]=\\\"userData.whatsAppNumber\\\">\\r\\n        </mat-form-field>\\r\\n        <br>\\r\\n        <mat-form-field  style=\\\"width: 240px\\\" class=\\\"example-full-width\\\">\\r\\n            <mat-label>Contact Number:</mat-label>\\r\\n            <input required matInput placeholder=\\\"\\\" [(ngModel)]=\\\"userData.contactNumber\\\">\\r\\n        </mat-form-field>\\r\\n        <br>\\r\\n        <mat-form-field  style=\\\"width: 240px\\\" class=\\\"example-full-width\\\">\\r\\n            <mat-label>Price per consultation ({{userData.priceCurrency}}):</mat-label>\\r\\n            <input required matInput placeholder=\\\"\\\" [(ngModel)]=\\\"userData.priceForAppointment\\\">\\r\\n        </mat-form-field>\\r\\n        <br>\\r\\n        <mat-label style=\\\"font-size: small\\\">Upload Profile Picture:</mat-label>\\r\\n        <br>\\r\\n        <input #imageInput\\r\\n               type=\\\"file\\\"\\r\\n               accept=\\\"image/*\\\"\\r\\n               (change)=\\\"uploadImage(imageInput)\\\">\\r\\n        <br>\\r\\n        <br>\\r\\n        <button style=\\\"width: 240px\\\" mat-raised-button color=\\\"primary\\\" (click)=\\\"saveData()\\\">Save</button>\\r\\n        <br>\\r\\n        <br>\\r\\n        <button style=\\\"width: 240px\\\" mat-raised-button color=\\\"secondary\\\" (click)=\\\"toggleEditable(false)\\\">Back</button>\\r\\n        <br>\\r\\n    </ng-container>\\r\\n\\r\\n    <ng-container *ngIf=\\\"!editable\\\">\\r\\n        <ng-container *ngIf=\\\"!userData?.availableForAppointment\\\">\\r\\n            <p>\\r\\n                <ngb-alert [dismissible]=\\\"false\\\">\\r\\n                    <strong>Note!</strong> You have not completed your Profile and Schedule yet. You will not be listed under searches until you complete your Schedule and Profile.\\r\\n                </ngb-alert>\\r\\n            </p>\\r\\n        </ng-container>\\r\\n\\r\\n        <button [disabled]=\\\"!userData?.availableForAppointment\\\" (click)=\\\"goToMyAppointments()\\\" style=\\\"width: 320px\\\" mat-raised-button color=\\\"primary\\\">My Bookings</button>\\r\\n        <br>\\r\\n        <br>\\r\\n        <button [disabled]=\\\"!userData?.availableForAppointment && checkForMandatoryFieldsToActivateProfile(userData)\\\" [color]=\\\"userData?.availableForAppointment? null: 'warn'\\\" style=\\\"width: 320px\\\" mat-raised-button (click)=\\\"toggleEditable(true)\\\">Edit Profile</button>\\r\\n        <br>\\r\\n        <br>\\r\\n        <button [disabled]=\\\"!userData?.availableForAppointment && !checkForMandatoryFieldsToActivateProfile(userData)\\\" [color]=\\\"userData?.availableForAppointment? null:'warn'\\\" (click)=\\\"editSchedule()\\\" style=\\\"width: 320px\\\" mat-raised-button>Edit Schedule</button>\\r\\n        <br>\\r\\n        <br>\\r\\n        <button disabled style=\\\"width: 320px\\\" mat-stroked-button>My Finances</button>\\r\\n        <br>\\r\\n        <br>\\r\\n\\r\\n        <br>\\r\\n        <ng-container  *ngIf=\\\"userData?.availableForAppointment\\\">\\r\\n            <p>What the patients see:</p>\\r\\n            <app-professional-card\\r\\n            [professional]=\\\"userData\\\"\\r\\n            ></app-professional-card>\\r\\n        </ng-container>\\r\\n    </ng-container>\\r\\n</div>\\r\\n\\r\\n<!--<h1>file upload</h1>\\r\\n<input type=\\\"file\\\" multiple (change)=\\\"onFileSelected($event)\\\">\\r\\n<button type=\\\"buton\\\" (click)=\\\"onUpload()\\\">Upload</button>-->\\r\\n\"","export default \"<div class=\\\"mat-card-style\\\">\\r\\n    <mat-form-field style=\\\"width: 240px\\\"  appearance=\\\"legacy\\\">\\r\\n        <mat-label>Average Time For Consultation (minutes):</mat-label>\\r\\n        <input required matInput #input7 [(ngModel)]='doctorScheduleData.averageTimeForAppointment'>\\r\\n    </mat-form-field>\\r\\n    <br>\\r\\n    <br>\\r\\n\\r\\n    <p>Weekly Schedule for consultations:</p>\\r\\n    <mat-accordion>\\r\\n        <div *ngFor=\\\"let schedule of doctorScheduleData.fixedDoctorDates;\\\">\\r\\n<!--            <mat-expansion-panel [disabled]=\\\"!(schedule.workingTimePeriods && schedule.workingTimePeriods.length > 0)\\\" style=\\\"width: 320px\\\">-->\\r\\n            <mat-expansion-panel style=\\\"width: 320px\\\">\\r\\n                <mat-expansion-panel-header>\\r\\n                    <mat-panel-title style=\\\"font-family: 'Arial Black'\\\"><b>{{schedule.title}}</b></mat-panel-title>\\r\\n                </mat-expansion-panel-header>\\r\\n                <mat-divider></mat-divider>\\r\\n                <br>\\r\\n                <ng-container *ngFor=\\\"let workingTimePeriod of schedule.workingTimePeriods; let i = index\\\">\\r\\n                    <p align=\\\"left\\\"><b>\\r\\n                        <mat-checkbox\\r\\n                                (change)=\\\"workingTimePeriod.isActive = !workingTimePeriod.isActive\\\"\\r\\n                                [checked]=\\\"workingTimePeriod && workingTimePeriod.isActive\\\"><span style=\\\"font-family: 'Arial Black'\\\">{{schedule.title}} Slot #{{i+1}}</span>\\r\\n                        </mat-checkbox>\\r\\n                    </b></p>\\r\\n                    <ng-container *ngIf=\\\"workingTimePeriod.isActive\\\">\\r\\n                        <mat-label>From:</mat-label>\\r\\n                        <ngb-timepicker [(ngModel)]=\\\"workingTimePeriod.startTimeSelected\\\" [meridian]=\\\"meridian\\\"></ngb-timepicker>\\r\\n                        <mat-label>To:</mat-label>\\r\\n                        <ngb-timepicker [(ngModel)]=\\\"workingTimePeriod.endTimeSelected\\\" [meridian]=\\\"meridian\\\"></ngb-timepicker>\\r\\n                        <ng-container *ngIf=\\\"schedule.workingTimePeriods.length > i+1\\\"><mat-divider></mat-divider></ng-container>\\r\\n                        <br>\\r\\n                    </ng-container>\\r\\n                </ng-container>\\r\\n            </mat-expansion-panel>\\r\\n            <br>\\r\\n        </div>\\r\\n    </mat-accordion>\\r\\n\\r\\n    <br>\\r\\n    <ng-container *ngIf=\\\"!changeRequestSent\\\">\\r\\n        <p style=\\\"font-size: small; color: crimson\\\">** Once you send the change request, changes will be activated only after 7 days because already available bookings will be affected by these changes.<br><br>\\r\\n        ** You will not be able to send another change request till 7 days.</p>\\r\\n    </ng-container>\\r\\n    <ng-container *ngIf=\\\"changeRequestSent\\\">\\r\\n        <p style=\\\"font-size: small; color: crimson\\\">** You can not save above details temporarily. You have made a change request already and it takes 7 days before you can send another change request.\\r\\n            Contact us for more clarifications.</p>\\r\\n    </ng-container>\\r\\n    <button *ngIf=\\\"!isConfirmationActive\\\" (click)=\\\"userConsent()\\\"  [disabled]=\\\"changeRequestSent\\\" style=\\\"width: 320px\\\" mat-raised-button color=\\\"primary\\\">Send Request to Change Details</button>\\r\\n    <br>\\r\\n    <br>\\r\\n    <button *ngIf=\\\"!isConfirmationActive\\\" (click)=\\\"goToProfessionalDashboard()\\\" style=\\\"width: 320px\\\" mat-raised-button color=\\\"secondary\\\">Back</button>\\r\\n    <p *ngIf=\\\"isConfirmationActive\\\" align=\\\"center\\\">Are you sure?</p>\\r\\n    <button *ngIf=\\\"isConfirmationActive\\\" (click)=\\\"save()\\\" style=\\\"width: 150px\\\" mat-raised-button color=\\\"primary\\\">Send Request</button>\\r\\n    <span>&nbsp;&nbsp;<button *ngIf=\\\"isConfirmationActive\\\" (click)=\\\"cancel()\\\" style=\\\"width: 150px\\\" mat-raised-button color=\\\"secondary\\\">Cancel</button></span>\\r\\n</div>\\r\\n\"","export default \"<div class=\\\"mat-card-style\\\">\\r\\n\\r\\n\\r\\n    <ng-container *ngIf=\\\"bookingSlotListVisible\\\">\\r\\n        <p style=\\\"font-size: x-large\\\">List of Time Slots:</p>\\r\\n        <button (click)=\\\"selectSlot(bookingListSlot1)\\\" style=\\\"width: 320px\\\" mat-raised-button>{{bookingListSlot1.startTime}} - {{bookingListSlot1.endTime}}</button>\\r\\n        <br>\\r\\n        <br>\\r\\n        <button (click)=\\\"selectSlot(bookingListSlot2)\\\" style=\\\"width: 320px\\\" mat-raised-button>{{bookingListSlot2.startTime}} - {{bookingListSlot2.endTime}}</button>\\r\\n        <br>\\r\\n        <br>\\r\\n        <button (click)=\\\"selectSlot(bookingListSlot3)\\\" style=\\\"width: 320px\\\" mat-raised-button>{{bookingListSlot3.startTime}} - {{bookingListSlot3.endTime}} (4 New)</button>\\r\\n    </ng-container>\\r\\n\\r\\n    <ng-container *ngIf=\\\"!bookingSlotListVisible && selectedSlot\\\">\\r\\n        <button\\r\\n                (click)=\\\"\\r\\n                bookingSlotListVisible = !bookingSlotListVisible;\\r\\n                PAGINATION_START = 0;\\r\\n                PAGINATION_END = this.RESULTS_PER_PAGE;\\\"\\r\\n                style=\\\"width: 300px\\\"\\r\\n                mat-raised-button\\r\\n                color=\\\"secondary\\\"\\r\\n        >Back</button>\\r\\n        <br>\\r\\n        <br>\\r\\n        <p style=\\\"font-size: x-large\\\">Appointments:</p>\\r\\n\\r\\n        <div *ngFor=\\\"let booking of selectedSlot?.bookings; let i=index\\\">\\r\\n            <ng-container *ngIf=\\\"i >= PAGINATION_START && i < PAGINATION_END\\\">\\r\\n                <mat-card [ngClass]=\\\"isOverTheAppointmentCard(booking?.bookingId) ? 'shadow' : ''\\\" (mouseenter)=\\\"onMouseEnter(booking?.bookingId)\\\" (mouseleave)=\\\"onMouseLeave()\\\"\\r\\n                        (click)=\\\"selectBooking(booking.id)\\\" style=\\\"width: 300px; height: 60px;\\\" [ngStyle]=\\\"{background: getColor(booking.bookingStatus)}\\\">\\r\\n                    <table>\\r\\n                        <tr>\\r\\n                            <td style=\\\"font-size: large\\\" [ngClass]=\\\"booking.bookingStatus === 'BOOKING_COMPLETED' ? 'strikethrough':'null'\\\">{{booking.patientName}}</td>\\r\\n                        </tr>\\r\\n                        <tr>\\r\\n                            <td style=\\\"font-size: x-small\\\">Booking ID: {{booking.bookingId}}</td>\\r\\n                        </tr>\\r\\n                    </table>\\r\\n                </mat-card>\\r\\n                <br>\\r\\n            </ng-container>\\r\\n        </div>\\r\\n        <mat-paginator [length]=\\\"selectedSlot?.bookings.length\\\"\\r\\n                       [pageSize]=\\\"RESULTS_PER_PAGE\\\"\\r\\n                       (page)=\\\"goToPage($event)\\\"\\r\\n        >\\r\\n        </mat-paginator>\\r\\n\\r\\n    </ng-container>\\r\\n\\r\\n    <br>\\r\\n\\r\\n</div>\\r\\n\"","export default \"<div class=\\\"mat-card-style\\\">\\r\\n    <h1 style=\\\"font-size: x-large\\\"># {{booking.id}}</h1>\\r\\n<!--    <mat-panel-title style=\\\"font-family: 'Arial Black'; size: A3\\\"><b># {{booking.id}}</b></mat-panel-title>-->\\r\\n\\r\\n    <br>\\r\\n    <p style=\\\"font-size: small\\\">WhatApp: <b>{{patient.whatsAppNumber}}</b></p>\\r\\n\\r\\n    <p style=\\\"font-size: small\\\">Booking Status: {{booking.status}}</p>\\r\\n\\r\\n    <ng-container *ngIf=\\\"!isPatientDetailsShown\\\">\\r\\n        <button (click)=\\\"isPatientDetailsShown = !isPatientDetailsShown\\\" style=\\\"width: 180px\\\" color=\\\"primary\\\" mat-flat-button>Show Patient Details</button>    <br>\\r\\n    </ng-container>\\r\\n    <ng-container *ngIf=\\\"isPatientDetailsShown\\\">\\r\\n        <button (click)=\\\"isPatientDetailsShown = !isPatientDetailsShown\\\" style=\\\"width: 180px\\\" color=\\\"primary\\\" mat-flat-button>Hide Patient Details</button>    <br>\\r\\n    </ng-container>\\r\\n    <br>\\r\\n    <ng-container *ngIf=\\\"isPatientDetailsShown\\\">\\r\\n        <p style=\\\"font-size: small\\\">Booking Number: {{patient.patientName}}</p>\\r\\n        <p style=\\\"font-size: small\\\">Patient Ref. No: {{patient.patientId}}</p>\\r\\n        <p style=\\\"font-size: small\\\">Contact number: {{patient.contactNumber}}</p>\\r\\n        <p style=\\\"font-size: small\\\">Email: {{patient.email}}</p>\\r\\n        <p style=\\\"font-size: small\\\">Birthday: {{patient.birthday}}</p>\\r\\n        <p style=\\\"font-size: small\\\">Age: {{patient.age}}</p>\\r\\n        <p style=\\\"font-size: small\\\">Known Allergies: {{patient.knownAllergies}}</p>\\r\\n    </ng-container>\\r\\n    <mat-divider></mat-divider>\\r\\n    <br>\\r\\n\\r\\n    <ng-container  *ngIf=\\\"!inProgress\\\" >\\r\\n    <button [disabled]=\\\"booking.status === 'BOOKING_CANCELLED'\\\"  style=\\\"width: 320px\\\" color=\\\"primary\\\" (click)=\\\"inProgress = !inProgress\\\" mat-flat-button>Start Consultation</button>\\r\\n<!--    <button [disabled]=\\\"booking.status !== 'BOOKING_NOT_STARTED'\\\" style=\\\"width: 320px\\\" color=\\\"primary\\\" mat-flat-button>Start Consultation</button>    <br>-->\\r\\n    </ng-container>\\r\\n    <ng-container *ngIf=\\\"inProgress\\\">\\r\\n\\r\\n    <button [disabled]=\\\"booking.status === 'BOOKING_CANCELLED'\\\" (click)=\\\"inProgress = !inProgress\\\" color=\\\"warn\\\" style=\\\"width: 320px\\\" mat-stroked-button>\\r\\n        End Consultation</button>\\r\\n<!--    <button [disabled]=\\\"booking.status === 'BOOKING_NOT_STARTED' || booking.status === 'BOOKING_CANCELLED'\\\" style=\\\"width: 320px\\\" mat-stroked-button>End Consultation</button>-->\\r\\n    </ng-container>\\r\\n    <br>\\r\\n    <br>\\r\\n\\r\\n    <button style=\\\"width: 320px\\\" color=\\\"accent\\\" mat-flat-button>Prescriptions</button>\\r\\n    <br>\\r\\n    <br>\\r\\n\\r\\n    <br>\\r\\n    <p style=\\\"font-size: large;\\\">Conversation:</p>\\r\\n    <mat-divider></mat-divider>\\r\\n\\r\\n    <br>\\r\\n\\r\\n    <div *ngFor=\\\"let message of booking.messageThread\\\">\\r\\n        <div *ngIf=\\\"message.sender === 'doctor'\\\" style=\\\"align: right\\\">\\r\\n            <p style=\\\"font-style: italic; font-size: small; text-align:right; color: cornflowerblue\\\" role=\\\"listitem\\\">You: {{message.message}}</p>\\r\\n        </div>\\r\\n        <div *ngIf=\\\"message.sender === 'patient'\\\" >\\r\\n            <p style=\\\"font-style: italic; font-size: small; text-align:left; color: slategray\\\" role=\\\"listitem\\\">{{patient.patientName}}: {{message.message}}</p>\\r\\n        </div>\\r\\n    </div>\\r\\n\\r\\n    <mat-divider></mat-divider>\\r\\n\\r\\n    <br>\\r\\n    <button *ngIf=\\\"!isConfirmationActive\\\" [disabled]=\\\"booking.status === 'BOOKING_CANCELLED'\\\" (click)=\\\"userConsent()\\\" style=\\\"width: 320px\\\" mat-flat-button color=\\\"warn\\\" >Cancel Booking</button>\\r\\n\\r\\n    <p *ngIf=\\\"isConfirmationActive\\\" align=\\\"center\\\">Are you sure?</p>\\r\\n    <button *ngIf=\\\"isConfirmationActive\\\" (click)=\\\"cancel()\\\" style=\\\"width: 150px\\\" mat-raised-button  color=\\\"warn\\\">Cancel Booking</button>\\r\\n    <span>&nbsp;&nbsp;<button *ngIf=\\\"isConfirmationActive\\\" (click)=\\\"dismiss()\\\" style=\\\"width: 150px\\\" mat-raised-button color=\\\"secondary\\\">Dismiss</button></span>\\r\\n</div>\\r\\n\"","export default \"<div class=\\\"mat-card-style\\\">\\r\\n\\r\\n    <p style=\\\"font-size: x-large\\\">Frequently Asked Questions:</p>\\r\\n\\r\\n    <div *ngFor=\\\"let faq of faqs\\\">\\r\\n        <mat-expansion-panel>\\r\\n            <mat-expansion-panel-header>\\r\\n                <p style=\\\"font-size: small\\\"><b>\\r\\n                        {{faq.q}}\\r\\n                </b></p>\\r\\n            </mat-expansion-panel-header>\\r\\n            <p style=\\\"font-size: small\\\">\\r\\n                Answer: {{faq.a}}\\r\\n            </p>\\r\\n        </mat-expansion-panel>\\r\\n        <br>\\r\\n    </div>\\r\\n</div>\\r\\n\"","export default \"<div class=\\\"app-footer\\\">\\r\\n    <div align=\\\"center\\\">\\r\\n        <span style=\\\"padding-right: 25px\\\">About Us</span>\\r\\n        <span>|</span>\\r\\n        <span style=\\\"padding-left: 25px; padding-right: 25px\\\">Terms & Conditions</span>\\r\\n        <span>|</span>\\r\\n        <span style=\\\"padding-left: 25px; padding-right: 25px\\\">FAQs</span>\\r\\n        <span>|</span>\\r\\n        <span style=\\\"padding-left: 25px;\\\">Contact Us</span>\\r\\n        <br>\\r\\n        <br>\\r\\n        <img src=\\\"./assets/img/payments low footer.png\\\" width=\\\"250px\\\">\\r\\n        <p style=\\\"font-size: small;\\\">Copyright © {{currentYear}} Ez Med. All Rights Reserved</p>\\r\\n        <br>\\r\\n    </div>\\r\\n</div>\\r\\n\"","export default \"\\r\\n<div class=\\\"mat-card-style\\\">\\r\\n    <table>\\r\\n        <tr>\\r\\n            <th style=\\\"width: 250px; padding-bottom: 20px\\\" align=\\\"left\\\">\\r\\n                <img src=\\\"./assets/img/ez_med_logo.png\\\" width=\\\"100\\\" (click)=\\\"goToHomePage()\\\">\\r\\n            </th>\\r\\n            <th style=\\\"width: 100px;\\\" >\\r\\n                <div *ngIf=\\\"!(loggedInUser && firstName)\\\" align=\\\"center\\\">\\r\\n                    <img (click)=\\\"logoClick()\\\" src=\\\"./assets/img/login.png\\\" width=\\\"70px\\\"/>\\r\\n                </div>\\r\\n                <div *ngIf=\\\"loggedInUser && firstName\\\" align=\\\"center\\\">\\r\\n                    <img (click)=\\\"logoClick()\\\" src=\\\"./assets/img/profile_blue1.png\\\" width=\\\"60px\\\"/>\\r\\n                    <p style=\\\"align-content: center; padding-top: 5px; font-size: small\\\">{{firstName}}</p>\\r\\n                </div>\\r\\n            </th>\\r\\n        </tr>\\r\\n    </table>\\r\\n</div>\\r\\n<mat-divider></mat-divider>\\r\\n\"","export default \"<div align=\\\"center\\\" class=\\\"mat-card-style\\\">\\r\\n    <p style=\\\"font-size: medium; line-height:1.6; padding-bottom: 60px;  padding-right: 30px;  padding-left: 30px;\\\">\\r\\n        Ez Med is the <b>FIRST</b> and the <b>ONLY</b>  platform in Sri Lanka that allows you to book an appointment with your doctor online and get your consultation done via video / audio call.\\r\\n    </p>\\r\\n    <img src=\\\"/assets/img/search-doctor.png\\\" width=\\\"100px\\\">\\r\\n    <p style=\\\"font-size: medium; padding-bottom: 40px;\\\">\\r\\n        1. Search for a Doctor\\r\\n    </p>\\r\\n    <img src=\\\"./assets/img/booking.png\\\" width=\\\"100px\\\">\\r\\n\\r\\n    <p style=\\\"font-size: medium; padding-bottom: 40px;\\\">\\r\\n        2. Schedule the appointment\\r\\n    </p>\\r\\n    <img src=\\\"./assets/img/video-chat.png\\\" width=\\\"100px\\\">\\r\\n\\r\\n    <p style=\\\"font-size: medium;\\\">\\r\\n        3. Wait for the doctor's call\\r\\n\\r\\n<!--        <a href=\\\"https://support.skype.com/en/faq/FA11098/how-do-i-get-started-with-skype\\\" style=\\\"color: dodgerblue\\\">Help me set up Skype</a>-->\\r\\n<!--        <br>-->\\r\\n<!--        <a href=\\\"https://www.businessinsider.com/what-is-my-skype-id\\\" style=\\\"color: dodgerblue\\\">What is my Skype ID?</a>-->\\r\\n<!--        <br>-->\\r\\n    </p>\\r\\n    <p style=\\\"font-size: small; padding-bottom: 40px; max-width: 300px\\\">\\r\\n        Once your booking is up, doctor (/professional) will contact you. After several attempts to contact you,\\r\\n        your booking will be automatically cancelled and you will be refunded (cancellation charges apply*).<br>\\r\\n    </p>\\r\\n\\r\\n    <button (click)=\\\"goToSearchPage()\\\" style=\\\"width: 250px; height: 60px\\\" mat-raised-button color=\\\"primary\\\"><b>Make an Appointment</b></button>\\r\\n    <br>\\r\\n\\r\\n<!--    <br>-->\\r\\n<!--    <button style=\\\"width: 180px\\\" mat-raised-button color=\\\"link\\\">I'm a Doctor</button>-->\\r\\n<!--    <br>-->\\r\\n</div>\\r\\n\"","export default \"<div align=\\\"center\\\">\\r\\n    <ng-container *ngIf=\\\"modalType === 'LOADING'\\\">\\r\\n        <mat-spinner></mat-spinner>\\r\\n        <br>\\r\\n        <h5>Loading...</h5>\\r\\n    </ng-container>\\r\\n</div>\\r\\n\"","export default \"<h3 align=\\\"center\\\" style=\\\"color: #b4b2b2\\\">{{title}}</h3><br>\\r\\n<mat-divider></mat-divider>\\r\\n<br>\\r\\n\"","export default \"<div class=\\\"mat-card-style\\\">\\r\\n    <ng-container *ngIf=\\\"!selectedBookingId\\\">\\r\\n\\r\\n        <app-page-title [title]=\\\"title\\\"></app-page-title>\\r\\n\\r\\n<!--        <mat-radio-group aria-label=\\\"Select an option\\\">-->\\r\\n<!--            <mat-radio-button value=\\\"all\\\">All</mat-radio-button>-->\\r\\n<!--            <mat-radio-button value=\\\"new\\\">New</mat-radio-button>-->\\r\\n<!--        </mat-radio-group>-->\\r\\n<!--        <br>-->\\r\\n        <button (click)=\\\"goToUserDashboard()\\\" style=\\\"width: 300px\\\" mat-raised-button color=\\\"secondary\\\">Back</button>\\r\\n         <br>\\r\\n         <br>\\r\\n        <button style=\\\"width: 300px\\\" (click)=\\\"newBooking()\\\" mat-raised-button color=\\\"primary\\\">+ Add New Booking</button>\\r\\n        <br>\\r\\n        <br>\\r\\n        <p style=\\\"font-size: large;\\\">Bookings:</p>\\r\\n<!--        <mat-divider></mat-divider>-->\\r\\n        <div *ngFor=\\\"let booking of bookings; let i=index\\\">\\r\\n            <ng-container *ngIf=\\\"i >= PAGINATION_START && i < PAGINATION_END\\\">\\r\\n                <mat-card (click)=\\\"selectBooking(booking.bookingId)\\\" style=\\\"width: 300px; height: 90px;\\\" [ngStyle]=\\\"{background: getColor(booking.bookingStatus)}\\\">\\r\\n                    <table>\\r\\n                        <tr>\\r\\n                            <td style=\\\"font-size: large\\\" [ngClass]=\\\"booking.bookingStatus === 'BOOKING_COMPLETED' ? 'strikethrough':'null'\\\">{{booking.doctorName}}</td>\\r\\n                        </tr>\\r\\n                        <tr>\\r\\n                            <td style=\\\"font-size: small\\\">Date: {{booking.date}}</td>\\r\\n                        </tr>\\r\\n                        <tr>\\r\\n                            <td style=\\\"font-size: x-small\\\">Booking ID: {{booking.bookingId}}</td>\\r\\n                        </tr>\\r\\n                    </table>\\r\\n                </mat-card>\\r\\n                <br>\\r\\n            </ng-container>\\r\\n        </div>\\r\\n        <mat-paginator [length]=\\\"bookings.length\\\"\\r\\n                       [pageSize]=\\\"RESULTS_PER_PAGE\\\"\\r\\n                       (page)=\\\"goToPage($event)\\\"\\r\\n        >\\r\\n        </mat-paginator>\\r\\n\\r\\n    </ng-container>\\r\\n\\r\\n    <ng-container *ngIf=\\\"selectedBookingId && !isPrescriptionsVisible\\\">\\r\\n        <app-page-title [title]=\\\"titleBooking\\\"></app-page-title>\\r\\n\\r\\n        <h1 style=\\\"font-size: x-large\\\">{{booking.doctorName}}</h1>\\r\\n\\r\\n        <p style=\\\"font-size: small\\\">Professional ID: {{booking.doctorId}}</p>\\r\\n        <p style=\\\"font-size: small\\\">Booking Number: {{booking.bookingId}}</p>\\r\\n\\r\\n        <p style=\\\"font-size: small\\\">Booking Status: {{booking.bookingStatus}}</p>\\r\\n        <mat-divider></mat-divider>\\r\\n\\r\\n<!--        <button (click)=\\\"showPrescriptions(booking.bookingId, true)\\\" style=\\\"width: 320px\\\" color=\\\"accent\\\" mat-flat-button>Prescriptions</button>-->\\r\\n\\r\\n        <br>\\r\\n        <p style=\\\"font-size: large;\\\">Conversation:</p>\\r\\n\\r\\n        <app-chat-section\\r\\n            [messageThread]=\\\"booking.messageThread\\\"\\r\\n            [patientName]=\\\"booking.patientName\\\"\\r\\n        >\\r\\n        </app-chat-section>\\r\\n\\r\\n\\r\\n        <mat-divider></mat-divider>\\r\\n\\r\\n        <br>\\r\\n        <br>\\r\\n        <button *ngIf=\\\"!isConfirmationActive\\\" (click)=\\\"isConfirmationActive = !isConfirmationActive\\\"  [disabled]=\\\"changeRequestSent\\\" style=\\\"width: 320px\\\" mat-raised-button color=\\\"warn\\\">Cancel Booking</button>\\r\\n        <p *ngIf=\\\"isConfirmationActive\\\" align=\\\"center\\\">If you cancel this booking, you will not be able to reactivate this booking again. Are you sure?</p>\\r\\n        <button *ngIf=\\\"isConfirmationActive\\\" (click)=\\\"save()\\\" style=\\\"width: 150px\\\" mat-raised-button color=\\\"warn\\\">Yes</button>\\r\\n        <span>&nbsp;&nbsp;<button *ngIf=\\\"isConfirmationActive\\\" (click)=\\\"cancel()\\\" style=\\\"width: 150px\\\" mat-raised-button color=\\\"secondary\\\">No, Go back</button></span>\\r\\n        <br *ngIf=\\\"isConfirmationActive\\\" >\\r\\n        <br>\\r\\n        <button *ngIf=\\\"!isConfirmationActive\\\" (click)=\\\"selectedBookingId = null\\\" style=\\\"width: 320px\\\" mat-raised-button color=\\\"secondary\\\">Back</button>\\r\\n    </ng-container>\\r\\n    <ng-container *ngIf=\\\"isPrescriptionsVisible && !selectedPrescription\\\">\\r\\n        <div *ngFor=\\\"let prescription of prescriptionList; index as index\\\">\\r\\n            <ng-container>\\r\\n                <mat-card (click)=\\\"selectPrescription(prescription.prescription)\\\" style=\\\"width: 240px; height: 40px;\\\">\\r\\n                    <table>\\r\\n                        <tr>\\r\\n                            <td style=\\\"font-size: small\\\">{{index}}</td>\\r\\n                        </tr>\\r\\n                    </table>\\r\\n                </mat-card>\\r\\n                <br>\\r\\n            </ng-container>\\r\\n        </div>\\r\\n        <br>\\r\\n        <button (click)=\\\"showPrescriptions(null, false)\\\" style=\\\"width: 240px\\\" color=\\\"primary\\\" mat-flat-button>Back</button>\\r\\n    </ng-container>\\r\\n    <ng-container  *ngIf=\\\"isPrescriptionsVisible && selectedPrescription\\\">\\r\\n        <p style=\\\"font-size: small\\\">Date: {{currentDate | date:'yyyy-MM-dd'}}</p>\\r\\n        <p style=\\\"font-size: small\\\">Name: <b>{{booking.patientName}}</b></p>\\r\\n        <p style=\\\"font-size: small\\\">Age: {{booking.patientAge}} yrs</p>\\r\\n        <mat-divider></mat-divider>\\r\\n        <mat-divider></mat-divider>\\r\\n        <div>\\r\\n            <p style=\\\"font-size: small; text-align: center\\\"><b><u>PRESCRIPTION</u></b></p>\\r\\n\\r\\n            <br>\\r\\n            <li  style=\\\"padding-bottom: 10px; font-size: small\\\" *ngFor=\\\"let item of items\\\">{{item}}</li>\\r\\n\\r\\n            <table>\\r\\n                <br>\\r\\n                <tr>\\r\\n                    <th style=\\\"font-size: medium; text-align: left\\\">\\r\\n                        {{doctor.name}}\\r\\n                    </th>\\r\\n                </tr>\\r\\n                <tr>\\r\\n                    <td style=\\\"font-size: x-small; text-align: left\\\">\\r\\n                        {{doctor.bio}}\\r\\n                    </td>\\r\\n                </tr>\\r\\n            </table>\\r\\n            <p style=\\\"font-size: x-small\\\">** No signature required. This is a electronically generated document that could only be edited by the prescriber **</p>\\r\\n\\r\\n            <mat-divider></mat-divider>\\r\\n            <mat-divider></mat-divider>\\r\\n            <br>\\r\\n            <button (click)=\\\"selectPrescription(null)\\\" style=\\\"width: 320px\\\" color=\\\"primary\\\" mat-flat-button>Back</button>\\r\\n\\r\\n        </div>\\r\\n    </ng-container>\\r\\n</div>\\r\\n\"","export default \"<div class=\\\"mat-card-style\\\">\\r\\n\\r\\n    <app-page-title [title]=\\\"title\\\"></app-page-title>\\r\\n    <h5 *ngIf=\\\"!editable\\\">Name: {{patient.title}} {{patient.name}}</h5>\\r\\n    <h6 *ngIf=\\\"!editable\\\">Age: {{patient.age}}</h6>\\r\\n    <br>\\r\\n\\r\\n    <ng-container *ngIf=\\\"editable\\\">\\r\\n        <mat-form-field style=\\\"width: 240px\\\" class=\\\"example-full-width\\\">\\r\\n            <mat-label>Title</mat-label>\\r\\n            <mat-select [(value)]=\\\"patient.title\\\">\\r\\n                <ng-container *ngFor=\\\"let title of titles\\\" >\\r\\n                    <mat-option value=\\\"{{title.value}}\\\">\\r\\n                        {{title.value}}\\r\\n                    </mat-option>\\r\\n                </ng-container>\\r\\n            </mat-select>\\r\\n        </mat-form-field>\\r\\n\\r\\n        <mat-form-field style=\\\"width: 240px\\\" class=\\\"example-full-width\\\">\\r\\n            <mat-label>Name: {{patient.name}}</mat-label>\\r\\n            <input matInput placeholder=\\\"\\\" [value]=\\\"patient.name\\\">\\r\\n        </mat-form-field>\\r\\n\\r\\n        <mat-form-field  style=\\\"width: 240px\\\" class=\\\"example-full-width\\\">\\r\\n            <mat-label>Birthday:</mat-label>\\r\\n            <input matInput placeholder=\\\"\\\"  value=\\\"{{patient.birthday}}\\\">\\r\\n        </mat-form-field>\\r\\n\\r\\n        <mat-form-field  style=\\\"width: 240px\\\" class=\\\"example-full-width\\\">\\r\\n            <mat-label>Allergies:</mat-label>\\r\\n            <textarea matInput placeholder=\\\"\\\" value=\\\"{{patient.allergies}}\\\"></textarea>\\r\\n        </mat-form-field>\\r\\n\\r\\n        <mat-form-field  style=\\\"width: 240px\\\" class=\\\"example-full-width\\\">\\r\\n            <mat-label>Medical History:</mat-label>\\r\\n            <textarea matInput placeholder=\\\"\\\" value=\\\"{{patient.medicalHistory}}\\\"></textarea>\\r\\n        </mat-form-field>\\r\\n\\r\\n        <br>\\r\\n        <br>\\r\\n        <button style=\\\"width: 240px\\\" mat-raised-button color=\\\"primary\\\" (click)=\\\"toggleEditable(false)\\\">Save</button>\\r\\n        <br>\\r\\n        <br>\\r\\n        <button style=\\\"width: 240px\\\" mat-raised-button color=\\\"secondary\\\" (click)=\\\"toggleEditable(false)\\\">Back</button>\\r\\n        <br>\\r\\n    </ng-container>\\r\\n\\r\\n    <ng-container *ngIf=\\\"!editable\\\">\\r\\n\\r\\n        <button style=\\\"width: 320px\\\" (click)=\\\"goToMyAppointments()\\\" mat-raised-button color=\\\"primary\\\">My Bookings</button>\\r\\n        <br>\\r\\n        <br>\\r\\n        <button style=\\\"width: 320px\\\" mat-raised-button (click)=\\\"toggleEditable(true)\\\">Edit Profile</button>\\r\\n        <br>\\r\\n        <br>\\r\\n        <button style=\\\"width: 320px\\\" mat-flat-button color=\\\"warn\\\" (click)=\\\"logOut()\\\">Log Out</button>\\r\\n        <br>\\r\\n        <br>\\r\\n<!--        <button style=\\\"width: 320px\\\" mat-stroked-button>My Finances</button>-->\\r\\n<!--        <br>-->\\r\\n<!--        <br>-->\\r\\n\\r\\n    </ng-container>\\r\\n</div>\\r\\n\"","export default \"<div class=\\\"mat-card-style\\\">\\r\\n    <br>\\r\\n    <div align=\\\"center\\\">\\r\\n        <img src=\\\"./assets/img/successfulPayment.png\\\" width=\\\"300px\\\"/>\\r\\n        <br>\\r\\n        <br>\\r\\n        <br>\\r\\n        <br>\\r\\n\\r\\n        <button mat-raised-button color=\\\"secondary\\\" style=\\\"width: 240px\\\" >Go to Profile</button>\\r\\n\\r\\n    </div>\\r\\n\\r\\n</div>\\r\\n\"","export default \"<div class=\\\"mat-card-style\\\">\\n    <p style=\\\"font-size: x-large\\\">List of Prescriptions:</p>\\n    <ng-container *ngFor=\\\"let prescription of prescriptionList; let i = index\\\">\\n        <button (click)=\\\"selectPrescription()\\\" style=\\\"width: 320px\\\" mat-raised-button>Prescription {{i+1}}</button>\\n        <br>\\n        <br>\\n    </ng-container>\\n    <br>\\n    <br>\\n    <button *ngIf=\\\"isDoctor\\\" (click)=\\\"selectPrescription()\\\" style=\\\"width: 320px; height: 50px\\\" color=\\\"accent\\\" mat-raised-button>Add New Prescription</button>\\n</div>\\n\"","export default \"<div class=\\\"mat-card-style\\\">\\r\\n    <div class=\\\"container\\\" id=\\\"test\\\" #test>\\r\\n        <p style=\\\"font-size: small\\\">Date: {{currentDate | date:'yyyy-MM-dd'}}</p>\\r\\n\\r\\n        <p style=\\\"font-size: small\\\">Name: <b>{{booking.patientTitle}}. {{booking.patientName}}</b></p>\\r\\n        <p style=\\\"font-size: small\\\">Age: {{booking.patientAge}} yrs</p>\\r\\n        <mat-divider></mat-divider>\\r\\n        <mat-divider></mat-divider>\\r\\n        <div *ngIf=\\\"preview\\\">\\r\\n\\r\\n            <br>\\r\\n            <p style=\\\"font-size: small; text-align: center\\\"><b><u>PRESCRIPTION</u></b></p>\\r\\n\\r\\n            <br>\\r\\n            <li  style=\\\"padding-bottom: 10px; font-size: small\\\" *ngFor=\\\"let item of items\\\">{{item}}</li>\\r\\n\\r\\n            <br>\\r\\n\\r\\n            <p style=\\\"font-size: x-small\\\">** No signature required. This is a electronically generated document that was prepared by the following prescriber **</p>\\r\\n            <table>\\r\\n                <tr>\\r\\n                    <th style=\\\"font-size: medium; text-align: left\\\">\\r\\n                        {{doctor.name}}\\r\\n                    </th>\\r\\n                </tr>\\r\\n                <tr>\\r\\n                    <td style=\\\"font-size: x-small; text-align: left\\\">\\r\\n                        {{doctor.bio}}\\r\\n                    </td>\\r\\n                </tr>\\r\\n            </table>\\r\\n\\r\\n    <!--        <mat-divider></mat-divider>-->\\r\\n    <!--        <mat-divider></mat-divider>-->\\r\\n            <br>\\r\\n        </div>\\r\\n    </div>\\r\\n    <div *ngIf=\\\"!preview\\\">\\r\\n        <mat-form-field  style=\\\"width: 320px\\\" class=\\\"example-full-width\\\">\\r\\n            <mat-label>Add prescriptions:</mat-label>\\r\\n            <textarea rows=\\\"10\\\" cols=\\\"50\\\" matInput placeholder=\\\"Start typing..\\\"></textarea>\\r\\n        </mat-form-field>\\r\\n<!--        <p>Start adding items below</p>-->\\r\\n<!--        <div *ngFor=\\\"let item of prescriptionList\\\">-->\\r\\n<!--            <table align=\\\"center\\\">-->\\r\\n<!--                <tr>-->\\r\\n<!--                    <td>-->\\r\\n<!--                        <mat-form-field style=\\\"width: 300px\\\">-->\\r\\n<!--                            <input style=\\\"font-size: small\\\" matInput type=\\\"text\\\" placeholder=\\\"Type here..\\\" value=\\\"{{item}}\\\">-->\\r\\n<!--                        </mat-form-field>-->\\r\\n<!--                    </td>-->\\r\\n<!--                </tr>-->\\r\\n<!--            </table>-->\\r\\n<!--        </div>-->\\r\\n<!--        <div align=\\\"center\\\">-->\\r\\n<!--            <button style=\\\"width: 90px\\\" color=\\\"primary\\\" mat-flat-button>Add more</button>-->\\r\\n<!--        </div>-->\\r\\n<!--        <br>-->\\r\\n\\r\\n<!--        <mat-divider></mat-divider>-->\\r\\n<!--        <mat-divider></mat-divider>-->\\r\\n        <br>\\r\\n    </div>\\r\\n\\r\\n    <button (click)=\\\"previewToggle('')\\\" *ngIf=\\\"preview\\\" style=\\\"width: 320px\\\" color=\\\"primary\\\" mat-flat-button>Exit Preview</button>\\r\\n    <input *ngIf=\\\"preview\\\" type=\\\"button\\\" value=\\\"Download PDF\\\" class=\\\"btn btn-success\\\" (click)=\\\"SavePDF()\\\">\\r\\n    <button (click)=\\\"previewToggle('preview')\\\" *ngIf=\\\"!preview\\\" style=\\\"width: 320px\\\" color=\\\"secondary\\\" mat-raised-button>Preview Prescription</button>\\r\\n    <br>\\r\\n    <br>\\r\\n\\r\\n    <button *ngIf=\\\"!preview\\\" style=\\\"width: 320px\\\" color=\\\"primary\\\" mat-flat-button>Save</button>\\r\\n    <br>\\r\\n    <br>\\r\\n    <button  *ngIf=\\\"!preview\\\" mat-raised-button color=\\\"secondary\\\" style=\\\"width: 320px\\\" (click)=\\\"goToAppointmentList(false)\\\">Back</button>\\r\\n\\r\\n</div>\\r\\n\"","export default \"<div [ngClass]=\\\"isOverTheDoctorCard(professional.userName) ? 'shadow' : ''\\\" (mouseenter)=\\\"onMouseEnter(professional.userName)\\\" (mouseleave)=\\\"onMouseLeave()\\\">\\r\\n    <mat-card (click)=\\\"selectProfessional_(professional.userName)\\\" style=\\\"width: 320px; height: auto\\\">\\r\\n        <table>\\r\\n            <tr>\\r\\n                <th style=\\\"width: 120px; height: 100px; align-content: center\\\">\\r\\n                    <img src=\\\"./assets/img/doctor2.jpg\\\" width=\\\"100px\\\" height=\\\"100px\\\">\\r\\n                </th>\\r\\n                <th>\\r\\n                </th>\\r\\n                <th>\\r\\n                    <table>\\r\\n                        <tr>\\r\\n                            <th style=\\\"font-size: medium; text-align: left\\\">\\r\\n                                {{professional.title}} {{professional.firstName}} {{professional.lastName}}\\r\\n                            </th>\\r\\n                        </tr>\\r\\n                        <tr>\\r\\n                            <td style=\\\"font-size: x-small; color: #797D7F;  text-align: left\\\">\\r\\n                                {{professional?.qualifications}}\\r\\n                            </td>\\r\\n                        </tr>\\r\\n                        <tr>\\r\\n                            <mat-divider style=\\\"left: inherit; width: 160px\\\"></mat-divider>\\r\\n                        </tr>\\r\\n                        <tr>\\r\\n                        </tr>\\r\\n                        <tr>\\r\\n                        </tr>\\r\\n                        <tr>\\r\\n                        </tr>\\r\\n                        <tr>\\r\\n                            <td style=\\\"font-size: small; color: #797D7F;  text-align: left\\\">\\r\\n                                Specializations:\\r\\n                            </td>\\r\\n                        </tr>\\r\\n                        <tr>\\r\\n                        </tr>\\r\\n<!--                        <div *ngFor=\\\"let speciality of specialities\\\">-->\\r\\n                            <tr>\\r\\n                                <td style=\\\" color: #797D7F; font-size: x-small; text-align: left\\\">\\r\\n                                    {{professional?.specialityA}}\\r\\n                                </td>\\r\\n                            </tr>\\r\\n                            <tr>\\r\\n                                <td style=\\\" color: #797D7F; font-size: x-small; text-align: left\\\">\\r\\n                                    {{professional?.specialityB}}\\r\\n                                </td>\\r\\n                            </tr>\\r\\n                            <tr>\\r\\n                                <td style=\\\" color: #797D7F; font-size: x-small; text-align: left\\\">\\r\\n                                    {{professional?.specialityC}}\\r\\n                                </td>\\r\\n                            </tr>\\r\\n<!--                        </div>-->\\r\\n                        <tr>\\r\\n                            <mat-divider style=\\\" color: #797D7F; left: inherit; width: 160px\\\"></mat-divider>\\r\\n                        </tr>\\r\\n                        <tr>\\r\\n                        </tr>\\r\\n                        <tr>\\r\\n                        </tr>\\r\\n                        <tr>\\r\\n                        </tr>\\r\\n                        <tr>\\r\\n                            <td style=\\\" color: #797D7F; font-size: small; text-align: left\\\">\\r\\n                                Charge per consultation:\\r\\n                            </td>\\r\\n                        </tr>\\r\\n                        <tr>\\r\\n                        </tr>\\r\\n                        <tr>\\r\\n                            <td style=\\\" color: #797D7F; font-size: x-small; text-align: left\\\">\\r\\n                                {{currency}} {{professional.priceForAppointment}}\\r\\n                            </td>\\r\\n                        </tr>\\r\\n                        <tr>\\r\\n                    </table>\\r\\n                </th>\\r\\n            </tr>\\r\\n        </table>\\r\\n        <table>\\r\\n            <tr>\\r\\n                <th width=\\\"240px\\\">\\r\\n\\r\\n                </th>\\r\\n                <th>\\r\\n                    <ng-container *ngIf=\\\"false && professional.isSkypePreferred\\\">\\r\\n                        <img src=\\\"./assets/img/Icon-Skype.jpg\\\" width=\\\"12px\\\" height=\\\"12px\\\">\\r\\n                    </ng-container>\\r\\n                    <ng-container *ngIf=\\\"false && professional.isWhatsAppPreferred\\\">\\r\\n                        <span style=\\\"padding-left: 7px\\\"><img src=\\\"./assets/img/whatsapp.jpg\\\" width=\\\"15px\\\" height=\\\"15px\\\"></span>\\r\\n                    </ng-container>\\r\\n                </th>\\r\\n            </tr>\\r\\n        </table>\\r\\n    </mat-card>\\r\\n</div>\\r\\n<br>\\r\\n\"","export default \"<div class=\\\"mat-card-style\\\">\\r\\n\\r\\n    <div align=\\\"center\\\">\\r\\n    <mat-form-field style=\\\"width: 250px\\\">\\r\\n        <input matInput type=\\\"text\\\" placeholder=\\\"Search by name (Optional)\\\" [(ngModel)]=\\\"searchString\\\">\\r\\n    </mat-form-field>\\r\\n\\r\\n    <br>\\r\\n    <mat-form-field  style=\\\"width: 240px\\\" >\\r\\n        <mat-label>Category</mat-label>\\r\\n        <mat-select [(value)]=\\\"selectedCategory\\\">\\r\\n            <ng-container *ngFor=\\\"let category of categories\\\">\\r\\n                <mat-option value=\\\"{{category.category}}\\\">{{category.category}}</mat-option>\\r\\n            </ng-container>\\r\\n        </mat-select>\\r\\n    </mat-form-field>\\r\\n    <ng-container *ngIf=\\\"selectedCategory !== undefined && selectedCategory !== null && selectedCategory !== 'General Practitioner'\\\">\\r\\n        <mat-form-field  style=\\\"width: 240px\\\" >\\r\\n            <mat-label>Specialization</mat-label>\\r\\n            <mat-select [(value)]=\\\"selectedSpecialization\\\">\\r\\n                <ng-container *ngFor=\\\"let subCategory of specializations\\\">\\r\\n                    <mat-option value=\\\"{{subCategory}}\\\">{{dataHandlerService.convertCamelCaseToSentence(subCategory)}}</mat-option>\\r\\n                </ng-container>\\r\\n            </mat-select>\\r\\n        </mat-form-field>\\r\\n    </ng-container>\\r\\n\\r\\n        <button (click)=\\\"search(searchString, selectedCategory, selectedSpecialization)\\\" style=\\\"width: 90px\\\" color=\\\"primary\\\" mat-flat-button>Search</button>\\r\\n    </div>\\r\\n    <br>\\r\\n    <mat-divider></mat-divider>\\r\\n    <br>\\r\\n    <p style=\\\"font-size: x-large\\\">Search Results:</p>\\r\\n    <ng-container *ngIf=\\\"professionalList.length === 0\\\">\\r\\n        <br>\\r\\n        <br>\\r\\n\\r\\n        <p style=\\\"color: crimson\\\"><b>------   Sorry, No results found   ------</b></p>\\r\\n        <br>\\r\\n\\r\\n    </ng-container>\\r\\n    <ng-container *ngFor=\\\"let doc of professionalList; let i=index\\\">\\r\\n        <ng-container *ngIf=\\\"i >= PAGINATION_START && i < PAGINATION_END\\\">\\r\\n            <app-professional-card\\r\\n            [professional]=\\\"doc\\\"\\r\\n            (selectProfessional)=\\\"selectProfessional($event)\\\"\\r\\n            ></app-professional-card>\\r\\n        </ng-container>\\r\\n    </ng-container>\\r\\n    <ng-container *ngIf=\\\"professionalList.length > 0\\\">\\r\\n        <mat-paginator [length]=\\\"professionalList.length\\\"\\r\\n                       [pageSize]=\\\"RESULTS_PER_PAGE\\\"\\r\\n                       (page)=\\\"goToPage($event)\\\"\\r\\n        >\\r\\n        </mat-paginator>\\r\\n    </ng-container>\\r\\n</div>\\r\\n\\r\\n\"","export default \"<div class=\\\"mat-card-style\\\">\\r\\n    <table align=\\\"center\\\">\\r\\n        <tr>\\r\\n            <td>\\r\\n                <mat-form-field style=\\\"width: 200px\\\">\\r\\n                    <input matInput type=\\\"text\\\" placeholder=\\\"Search by name\\\" value=\\\"{{searchString}}\\\">\\r\\n                </mat-form-field>\\r\\n            </td>\\r\\n            <td>\\r\\n                &nbsp;\\r\\n            </td>\\r\\n            <td>\\r\\n                <button (click)=\\\"search()\\\" style=\\\"width: 80px\\\" color=\\\"primary\\\" mat-flat-button>Search</button>\\r\\n            </td>\\r\\n        </tr>\\r\\n    </table>\\r\\n    <br>\\r\\n\\r\\n    <div align=\\\"center\\\" *ngIf=\\\"professionalListType==='Consultant'\\\">\\r\\n        <mat-form-field style=\\\"width: 290px\\\">\\r\\n            <mat-label>Select specialization [optional]</mat-label>\\r\\n            <mat-select [(value)]=\\\"selectedProfessionalType\\\">\\r\\n                <mat-option>None</mat-option>\\r\\n                <mat-option value=\\\"option1\\\">Option 1</mat-option>\\r\\n                <mat-option value=\\\"option2\\\">Option 2</mat-option>\\r\\n                <mat-option value=\\\"option3\\\">Option 3</mat-option>\\r\\n            </mat-select>\\r\\n        </mat-form-field>\\r\\n\\r\\n    <mat-divider></mat-divider>\\r\\n    <p style=\\\"font-size: x-large\\\">List of {{professionalListType}}s:</p>\\r\\n\\r\\n    <div *ngFor=\\\"let doc of professionalList\\\">\\r\\n        <mat-card (click)=\\\"selectDoc(doc.id)\\\" style=\\\"width: 320px; height: auto\\\">\\r\\n            <table>\\r\\n                <tr>\\r\\n                    <th style=\\\"width: 120px; height: 100px;\\\">\\r\\n                        <img src=\\\"./assets/img/doctor2.jpg\\\" width=\\\"100px\\\" height=\\\"100px\\\">\\r\\n                    </th>\\r\\n                    <th>\\r\\n                    </th>\\r\\n                    <th>\\r\\n                        <table>\\r\\n                            <tr>\\r\\n                                <th style=\\\"font-size: medium; text-align: left\\\">\\r\\n                                    {{doc.name}}\\r\\n                                </th>\\r\\n                            </tr>\\r\\n                            <tr>\\r\\n                                <td style=\\\"font-size: x-small; text-align: left\\\">\\r\\n                                    {{doc.bio}}\\r\\n                                </td>\\r\\n                            </tr>\\r\\n                            <tr>\\r\\n                                <mat-divider style=\\\"left: inherit; width: 160px\\\"></mat-divider>\\r\\n                            </tr>\\r\\n                            <tr>\\r\\n                            </tr>\\r\\n                            <tr>\\r\\n                            </tr>\\r\\n                            <tr>\\r\\n                            </tr>\\r\\n                            <tr>\\r\\n                                <td style=\\\"font-size: small; text-align: left\\\">\\r\\n                                    Specializations:\\r\\n                                </td>\\r\\n                            </tr>\\r\\n                            <tr>\\r\\n                            </tr>\\r\\n                            <div *ngFor=\\\"let speciality of doc.specialities\\\">\\r\\n                                <tr>\\r\\n                                    <td style=\\\"font-size: x-small; text-align: left\\\">\\r\\n                                        {{speciality}}\\r\\n                                    </td>\\r\\n                                </tr>\\r\\n                            </div>\\r\\n                            <tr>\\r\\n                                <mat-divider style=\\\"left: inherit; width: 160px\\\"></mat-divider>\\r\\n                            </tr>\\r\\n                            <tr>\\r\\n                            </tr>\\r\\n                            <tr>\\r\\n                            </tr>\\r\\n                            <tr>\\r\\n                            </tr>\\r\\n                            <tr>\\r\\n                                <td style=\\\"font-size: small; text-align: left\\\">\\r\\n                                    Charge per consultation:\\r\\n                                </td>\\r\\n                            </tr>\\r\\n                            <tr>\\r\\n                            </tr>\\r\\n                            <tr>\\r\\n                                <td style=\\\"font-size: x-small; text-align: left\\\">\\r\\n                                    {{doc.consultationPrice}}\\r\\n                                </td>\\r\\n                            </tr>\\r\\n                            <tr>\\r\\n                        </table>\\r\\n                    </th>\\r\\n                </tr>\\r\\n            </table>\\r\\n<!--            <table>-->\\r\\n<!--                <tr>-->\\r\\n<!--                    <th width=\\\"240px\\\">-->\\r\\n\\r\\n<!--                    </th>-->\\r\\n<!--                    <th>-->\\r\\n<!--                        <ng-container *ngIf=\\\"doc.isSkypePreferred\\\">-->\\r\\n<!--                            <img src=\\\"./assets/img/Icon-Skype.jpg\\\" width=\\\"12px\\\" height=\\\"12px\\\">-->\\r\\n<!--                        </ng-container>-->\\r\\n<!--                        <ng-container *ngIf=\\\"doc.isWhatsAppPreferred\\\">-->\\r\\n<!--                            <span style=\\\"padding-left: 7px\\\"><img src=\\\"./assets/img/whatsapp.jpg\\\" width=\\\"15px\\\" height=\\\"15px\\\"></span>-->\\r\\n<!--                        </ng-container>-->\\r\\n<!--                    </th>-->\\r\\n<!--                </tr>-->\\r\\n<!--            </table>-->\\r\\n        </mat-card>\\r\\n        <br>\\r\\n    </div>\\r\\n\\r\\n    </div>\\r\\n</div>\\r\\n\"","export default \"<div align=\\\"center\\\">\\r\\n    <br>\\r\\n    <br>\\r\\n    <mat-tab-group style=\\\"width: 320px\\\" mat-align-tabs=\\\"center\\\">\\r\\n        <ng-container>\\r\\n        <mat-tab label=\\\"Existing User\\\">\\r\\n            <div class=\\\"mat-card-style\\\" align=\\\"center\\\">\\r\\n                <div class=\\\"example-container\\\">\\r\\n                    <mat-form-field style=\\\"width: 240px\\\" appearance=\\\"legacy\\\">\\r\\n                        <mat-label>Email</mat-label>\\r\\n                        <input [(ngModel)]=\\\"email\\\" matInput>\\r\\n                    </mat-form-field>\\r\\n                    <br>\\r\\n                    <mat-form-field style=\\\"width: 240px\\\" appearance=\\\"legacy\\\">\\r\\n                        <mat-label>Password</mat-label>\\r\\n                        <input matInput [(ngModel)]=\\\"pass\\\" [type]=\\\"hide ? 'password' : 'text'\\\">\\r\\n                    </mat-form-field>\\r\\n                    <br>\\r\\n                    <br>\\r\\n                    <button [disabled]=\\\"!(email && pass)\\\" (click)=\\\"logIn()\\\" style=\\\"width: 240px\\\" mat-flat-button color=\\\"primary\\\">Log In</button>\\r\\n                    <br>\\r\\n                    <br>\\r\\n                    <button disabled style=\\\"width: 180px\\\"  mat-stroked-button color=\\\"link\\\">Forgot My Password</button>\\r\\n                    <br>\\r\\n                </div>\\r\\n            </div>\\r\\n        </mat-tab>\\r\\n        </ng-container>\\r\\n        <ng-container *ngIf=\\\"isSignUp\\\">\\r\\n            <mat-tab label=\\\"New User\\\">\\r\\n                <div class=\\\"mat-card-style\\\" align=\\\"center\\\">\\r\\n                    <br>\\r\\n                    <p style=\\\"color: crimson\\\" *ngIf=\\\"isIncompleteErrorAvailable\\\">** You have some unfilled fields</p>\\r\\n                    <div align=\\\"left\\\" style=\\\"padding-left: 55px\\\">\\r\\n                        <mat-radio-group aria-label=\\\"Select an option\\\" (change)=\\\"setIsDoctor($event)\\\">\\r\\n                            <mat-radio-button [checked]='true' value=false>I'm a Patient</mat-radio-button>\\r\\n                            <mat-radio-button value=true>I'm a Medical Professional</mat-radio-button>\\r\\n                            <br>\\r\\n                        </mat-radio-group>\\r\\n                    </div>\\r\\n                    <br>\\r\\n                    <div>\\r\\n                        <mat-form-field style=\\\"width: 240px\\\"  appearance=\\\"legacy\\\">\\r\\n                            <mat-label>Title</mat-label>\\r\\n                            <mat-select required [(value)]=\\\"title\\\">\\r\\n                                <ng-container *ngFor=\\\"let title of titles\\\" >\\r\\n                                    <mat-option value=\\\"{{title.value}}\\\">\\r\\n                                        {{title.value}}\\r\\n                                    </mat-option>\\r\\n                                </ng-container>\\r\\n                            </mat-select>\\r\\n<!--                            <input matInput required #input3 [(ngModel)]='title'>-->\\r\\n                        </mat-form-field>\\r\\n                        <br>\\r\\n                    </div>\\r\\n                    <div>\\r\\n                        <mat-form-field style=\\\"width: 240px\\\" appearance=\\\"legacy\\\">\\r\\n                            <mat-label>First Name</mat-label>\\r\\n                            <input required matInput #input1 [(ngModel)]='firstName'>\\r\\n                        </mat-form-field>\\r\\n                        <br>\\r\\n                        <mat-form-field style=\\\"width: 240px\\\" appearance=\\\"legacy\\\">\\r\\n                            <mat-label>Last Name</mat-label>\\r\\n                            <input required matInput #input_ln [(ngModel)]='lastName'>\\r\\n                        </mat-form-field>\\r\\n                        <br>\\r\\n                        <mat-form-field style=\\\"width: 240px\\\"  appearance=\\\"legacy\\\">\\r\\n                            <mat-label>Email</mat-label>\\r\\n                            <input required matInput #input2 [(ngModel)]='email'>\\r\\n                        </mat-form-field>\\r\\n                        <br>\\r\\n                        <mat-form-field style=\\\"width: 240px\\\"  appearance=\\\"legacy\\\">\\r\\n                            <mat-label>Gender *</mat-label>\\r\\n                            <mat-select (selectionChange)=\\\"setGender($event.value)\\\">\\r\\n                                <mat-option required *ngFor=\\\"let gender of genders\\\" [value]=\\\"gender.value\\\">\\r\\n                                    {{gender.viewValue}}\\r\\n                                </mat-option>\\r\\n                            </mat-select>\\r\\n                        </mat-form-field>\\r\\n                        <br>\\r\\n                    </div>\\r\\n                    <div [hidden]=\\\"isDoctor\\\">\\r\\n                        <mat-form-field style=\\\"width: 240px\\\"  appearance=\\\"legacy\\\">\\r\\n                            <mat-label>Birthday</mat-label>\\r\\n                            <input matInput required [(ngModel)]='birthday'>\\r\\n                        </mat-form-field>\\r\\n                        <br>\\r\\n                    </div>\\r\\n                    <div>\\r\\n                        <mat-form-field style=\\\"width: 240px\\\"  appearance=\\\"legacy\\\">\\r\\n                            <mat-label>WhatsApp Number</mat-label>\\r\\n                            <input required matInput #input7 [(ngModel)]='whatsAppNumber'>\\r\\n                        </mat-form-field>\\r\\n                    </div>\\r\\n                    <div>\\r\\n                        <mat-form-field style=\\\"width: 240px\\\"  appearance=\\\"legacy\\\">\\r\\n                            <mat-label>Other Contact Number (Optional)</mat-label>\\r\\n                            <input required matInput #input7 [(ngModel)]='contactNumber'>\\r\\n                        </mat-form-field>\\r\\n                    </div>\\r\\n                    <!--                <div>-->\\r\\n                    <!--                    <mat-form-field style=\\\"width: 240px\\\"  appearance=\\\"legacy\\\">-->\\r\\n                    <!--                        <mat-label>Skype ID [optional]</mat-label>-->\\r\\n                    <!--                        <input matInput #input6 [(ngModel)]='skypeId'>-->\\r\\n                    <!--                    </mat-form-field>-->\\r\\n                    <!--                </div>-->\\r\\n                    <div [hidden]=\\\"isDoctor\\\">\\r\\n                        <mat-form-field style=\\\"width: 240px\\\"  appearance=\\\"legacy\\\">\\r\\n                            <mat-label>Known Allergies</mat-label>\\r\\n                            <textarea type=\\\"text\\\" matInput #input8 [(ngModel)]='knownAllergies'></textarea>\\r\\n                        </mat-form-field>\\r\\n                        <br>\\r\\n                    </div>\\r\\n                    <mat-form-field style=\\\"width: 240px\\\"  appearance=\\\"legacy\\\">\\r\\n                        <mat-label>Preferred Password</mat-label>\\r\\n                        <input matInput required [type]=\\\"hide ? 'password' : 'text'\\\"  #input8 [(ngModel)]='pass'>\\r\\n                    </mat-form-field>\\r\\n                    <br>\\r\\n                    <mat-form-field style=\\\"width: 240px\\\"  appearance=\\\"legacy\\\">\\r\\n                        <mat-label>Confirm Password</mat-label>\\r\\n                        <input matInput required [type]=\\\"hide ? 'password' : 'text'\\\" #input9 [(ngModel)]='conPass'>\\r\\n                    </mat-form-field>\\r\\n                    <br>\\r\\n                    <br>\\r\\n                    <button style=\\\"width: 240px\\\" mat-flat-button color=\\\"primary\\\" (click)=\\\"SignUp()\\\">Sign Up</button>\\r\\n                    <br>\\r\\n                    <br>\\r\\n                    <p style=\\\"color: crimson\\\" *ngIf=\\\"isIncompleteErrorAvailable\\\">** You have some unfilled fields</p>\\r\\n                </div>\\r\\n            </mat-tab>\\r\\n        </ng-container>\\r\\n\\r\\n    </mat-tab-group>\\r\\n</div>\\r\\n\"","export default \"<div class=\\\"mat-card-style\\\" align=\\\"center\\\">\\n    <ng-container *ngIf=\\\"modalType === 'LOGIN_REDIRECT'\\\">\\n        <h6 *ngIf=\\\"dismissible\\\" style=\\\"color: crimson\\\">Sorry, You have to log in to confirm the appointment!</h6>\\n        <h6 *ngIf=\\\"!dismissible\\\" style=\\\"color: crimson\\\">Please Log In !</h6>\\n        <br>\\n        <button (click)=\\\"logIn()\\\" mat-raised-button color=\\\"primary\\\" style=\\\"width: 240px\\\">Log In</button>\\n        <br>\\n        <br>\\n        <button *ngIf=\\\"dismissible\\\" mat-raised-button color=\\\"secondary\\\" style=\\\"width: 240px\\\" (click)=\\\"dismiss()\\\">Back</button>\\n    </ng-container>\\n    <br>\\n    <br>\\n</div>\\n\"","/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation.\r\n\r\nPermission to use, copy, modify, and/or distribute this software for any\r\npurpose with or without fee is hereby granted.\r\n\r\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\r\nREGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\r\nAND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\r\nINDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\r\nLOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\r\nOTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\r\nPERFORMANCE OF THIS SOFTWARE.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __createBinding(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    o[k2] = m[k];\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (p !== \"default\" && !exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var s = typeof Symbol === \"function\" && Symbol.iterator, m = s && o[s], i = 0;\r\n    if (m) return m.call(o);\r\n    if (o && typeof o.length === \"number\") return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n    throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __spreadArrays() {\r\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n            r[k] = a[j];\r\n    return r;\r\n};\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n\r\nexport function __classPrivateFieldGet(receiver, privateMap) {\r\n    if (!privateMap.has(receiver)) {\r\n        throw new TypeError(\"attempted to get private field on non-instance\");\r\n    }\r\n    return privateMap.get(receiver);\r\n}\r\n\r\nexport function __classPrivateFieldSet(receiver, privateMap, value) {\r\n    if (!privateMap.has(receiver)) {\r\n        throw new TypeError(\"attempted to set private field on non-instance\");\r\n    }\r\n    privateMap.set(receiver, value);\r\n    return value;\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport {SignUpComponent} from './components/signup/sign-up.component';\r\nimport {LandingPageComponent} from './components/landing-page/landing-page.component';\r\nimport {SearchProfessionalsMainComponent} from './components/search-professionals-main/search-professionals-main.component';\r\nimport {BookingEnterTimeComponent} from './components/booking-enter-time/booking-enter-time.component';\r\nimport {BookingEnterComponent} from './components/booking-enter/booking-enter.component';\r\nimport {PaymentSuccessComponent} from './components/payment-success/payment-success.component';\r\nimport {PatientProfileComponent} from './components/patient-profile/patient-profile.component';\r\nimport {PatientBookingListComponent} from './components/patient-booking-list/patient-booking-list.component';\r\nimport {DoctorProfileComponent} from './components/doctor-profile/doctor-profile.component';\r\nimport {DoctorScheduleComponent} from './components/doctor-schedule/doctor-schedule.component';\r\nimport {DoctorSideBookingListComponent} from './components/doctor-side-booking-list/doctor-side-booking-list.component';\r\nimport {DoctorSideBookingComponent} from './components/doctor-side-booking/doctor-side-booking.component';\r\nimport {PrescriptionComponent} from './components/prescription/prescription.component';\r\nimport {PrescriptionListComponent} from './components/prescription-list/prescription-list.component';\r\n\r\nconst routes: Routes = [\r\n    { path: '', component: LandingPageComponent },\r\n    { path: 'index', component: LandingPageComponent },\r\n    { path: 'signup', component: SignUpComponent },\r\n    { path: 'searchProfessionals', component: SearchProfessionalsMainComponent },\r\n    { path: 'appointmentTime', component: BookingEnterTimeComponent },\r\n    { path: 'confirmation', component: BookingEnterComponent },\r\n    { path: 'success', component: PaymentSuccessComponent },\r\n    { path: 'user/dashboard', component: PatientProfileComponent },\r\n    { path: 'user/appointments', component: PatientBookingListComponent },\r\n    { path: 'doctor/dashboard', component: DoctorProfileComponent },\r\n    { path: 'doctor/schedule', component: DoctorScheduleComponent },\r\n    { path: 'doctor/appointments', component: DoctorSideBookingListComponent },\r\n    { path: 'appointment', component: DoctorSideBookingComponent },\r\n    { path: 'appointment/prescriptionList', component: PrescriptionListComponent },\r\n    { path: 'appointment/prescription', component: PrescriptionComponent }\r\n    ];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forRoot(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class AppRoutingModule { }\r\n","export default \".app-header-div {\\r\\n    min-width: 320px;\\r\\n    height: available;\\r\\n    /*background-color: red; !* For browsers that do not support gradients *!*/\\r\\n    /*background-image: linear-gradient(#E0C3FC, #ffffff); !* Standard syntax (must be last) *!*/\\r\\n}\\r\\n\\r\\n.app-body-div {\\r\\n    min-width: 320px;\\r\\n    padding-bottom: 100px;\\r\\n    /*background-color: red; !* For browsers that do not support gradients *!*/\\r\\n    /*background-image: linear-gradient(#ffffff, #E0C3FC); !* Standard syntax (must be last) *!*/\\r\\n}\\r\\n\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvYXBwLmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7SUFDSSxnQkFBZ0I7SUFDaEIsaUJBQWlCO0lBQ2pCLDBFQUEwRTtJQUMxRSw0RkFBNEY7QUFDaEc7O0FBRUE7SUFDSSxnQkFBZ0I7SUFDaEIscUJBQXFCO0lBQ3JCLDBFQUEwRTtJQUMxRSw0RkFBNEY7QUFDaEciLCJmaWxlIjoic3JjL2FwcC9hcHAuY29tcG9uZW50LmNzcyIsInNvdXJjZXNDb250ZW50IjpbIi5hcHAtaGVhZGVyLWRpdiB7XHJcbiAgICBtaW4td2lkdGg6IDMyMHB4O1xyXG4gICAgaGVpZ2h0OiBhdmFpbGFibGU7XHJcbiAgICAvKmJhY2tncm91bmQtY29sb3I6IHJlZDsgISogRm9yIGJyb3dzZXJzIHRoYXQgZG8gbm90IHN1cHBvcnQgZ3JhZGllbnRzICohKi9cclxuICAgIC8qYmFja2dyb3VuZC1pbWFnZTogbGluZWFyLWdyYWRpZW50KCNFMEMzRkMsICNmZmZmZmYpOyAhKiBTdGFuZGFyZCBzeW50YXggKG11c3QgYmUgbGFzdCkgKiEqL1xyXG59XHJcblxyXG4uYXBwLWJvZHktZGl2IHtcclxuICAgIG1pbi13aWR0aDogMzIwcHg7XHJcbiAgICBwYWRkaW5nLWJvdHRvbTogMTAwcHg7XHJcbiAgICAvKmJhY2tncm91bmQtY29sb3I6IHJlZDsgISogRm9yIGJyb3dzZXJzIHRoYXQgZG8gbm90IHN1cHBvcnQgZ3JhZGllbnRzICohKi9cclxuICAgIC8qYmFja2dyb3VuZC1pbWFnZTogbGluZWFyLWdyYWRpZW50KCNmZmZmZmYsICNFMEMzRkMpOyAhKiBTdGFuZGFyZCBzeW50YXggKG11c3QgYmUgbGFzdCkgKiEqL1xyXG59XHJcbiJdfQ== */\"","import { Component } from '@angular/core';\r\nimport './app.component.css';\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.css']\r\n})\r\nexport class AppComponent {\r\n  title = 'WellBeey-FE';\r\n  onActivate(event) {\r\n    window.scroll(0, 0);\r\n  }\r\n}\r\n","import { BrowserModule } from '@angular/platform-browser';\r\nimport {APP_INITIALIZER, NgModule} from '@angular/core';\r\nimport { AppRoutingModule } from './app-routing.module';\r\nimport { AppComponent } from './app.component';\r\nimport { SignUpComponent } from './components/signup/sign-up.component';\r\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\r\nimport {\r\n    MatBadgeModule,\r\n    MatButtonModule, MatButtonToggleModule,\r\n    MatCardModule,\r\n    MatChipsModule, MatDatepickerModule,\r\n    MatDividerModule, MatExpansionModule,\r\n    MatIconModule, MatNativeDateModule,\r\n    MatInputModule, MatListModule, MatOptionModule, MatRadioModule, MatSelectModule,\r\n    MatTabsModule, MatCheckboxModule, MatDialogModule, MatPaginatorModule, MatSlideToggleModule, MatProgressSpinnerModule\r\n} from '@angular/material';\r\nimport { HeaderComponent } from './components/header/header.component';\r\nimport { FooterComponent } from './components/footer/footer.component';\r\nimport { CommonBodyComponent } from './components/common-body/common-body.component';\r\nimport { LandingPageComponent } from './components/landing-page/landing-page.component';\r\nimport {FormsModule, ReactiveFormsModule} from '@angular/forms';\r\nimport { DoctorScheduleComponent } from './components/doctor-schedule/doctor-schedule.component';\r\nimport { DoctorProfileComponent } from './components/doctor-profile/doctor-profile.component';\r\nimport { SearchProfessionalsMainComponent } from './components/search-professionals-main/search-professionals-main.component';\r\nimport { DoctorSideBookingListComponent } from './components/doctor-side-booking-list/doctor-side-booking-list.component';\r\nimport { DoctorSideBookingComponent } from './components/doctor-side-booking/doctor-side-booking.component';\r\nimport { SearchProfessionalsComponent } from './components/search-professionals/search-professionals.component';\r\nimport { ContactPageComponent } from './components/contact-page/contact-page.component';\r\nimport { FaqsComponent } from './components/faqs/faqs.component';\r\nimport { PrescriptionComponent } from './components/prescription/prescription.component';\r\nimport { BookingEnterComponent } from './components/booking-enter/booking-enter.component';\r\nimport { BookingEnterTimeComponent } from './components/booking-enter-time/booking-enter-time.component';\r\nimport { PaymentSuccessComponent } from './components/payment-success/payment-success.component';\r\nimport { DoctorFinanceComponent } from './components/doctor-finance/doctor-finance.component';\r\nimport {NgbAlertModule, NgbTimepickerModule} from '@ng-bootstrap/ng-bootstrap';\r\nimport { PatientProfileComponent } from './components/patient-profile/patient-profile.component';\r\nimport { PageTitleComponent } from './components/page-title/page-title.component';\r\nimport { PatientBookingListComponent } from './components/patient-booking-list/patient-booking-list.component';\r\nimport { ModalComponent } from './components/modal/modal.component';\r\nimport {HttpClientModule} from '@angular/common/http';\r\nimport { ProfessionalCardComponent } from './components/professional-card/professional-card.component';\r\nimport { ChatSectionComponent } from './components/chat-section/chat-section.component';\r\nimport { PrescriptionListComponent } from './components/prescription-list/prescription-list.component';\r\nimport {AppService} from './app.service';\r\nimport {DatePipe} from '@angular/common';\r\nimport { TransitionPageComponent } from './components/transition-page/transition-page.component';\r\n\r\nexport function initialize(app: AppService) {\r\n    return async () => {\r\n        await app.loadModuleConfigurations();\r\n        await app.loadPermissions();\r\n        await app.userLogin();\r\n        // await app.loadUserDetails();\r\n    };\r\n}\r\n\r\n@NgModule({\r\n    declarations: [\r\n        AppComponent,\r\n        SignUpComponent,\r\n        HeaderComponent,\r\n        FooterComponent,\r\n        CommonBodyComponent,\r\n        LandingPageComponent,\r\n        DoctorScheduleComponent,\r\n        DoctorProfileComponent,\r\n        DoctorSideBookingListComponent,\r\n        DoctorSideBookingComponent,\r\n        SearchProfessionalsComponent,\r\n        ContactPageComponent,\r\n        FaqsComponent,\r\n        PrescriptionComponent,\r\n        BookingEnterComponent,\r\n        BookingEnterTimeComponent,\r\n        PaymentSuccessComponent,\r\n        DoctorFinanceComponent,\r\n        PatientProfileComponent,\r\n        SearchProfessionalsMainComponent,\r\n        PageTitleComponent,\r\n        PatientBookingListComponent,\r\n        ModalComponent,\r\n        ProfessionalCardComponent,\r\n        ChatSectionComponent,\r\n        PrescriptionListComponent,\r\n        TransitionPageComponent\r\n    ],\r\n    imports: [\r\n        BrowserModule,\r\n        AppRoutingModule,\r\n        BrowserAnimationsModule,\r\n        MatChipsModule,\r\n        MatIconModule,\r\n        MatDividerModule,\r\n        MatButtonModule,\r\n        MatTabsModule,\r\n        MatInputModule,\r\n        MatCardModule,\r\n        MatOptionModule,\r\n        MatSelectModule,\r\n        MatListModule,\r\n        ReactiveFormsModule,\r\n        FormsModule,\r\n        MatExpansionModule,\r\n        MatRadioModule,\r\n        MatBadgeModule,\r\n        MatNativeDateModule,\r\n        MatButtonToggleModule,\r\n        MatDatepickerModule,\r\n        MatCheckboxModule,\r\n        NgbTimepickerModule,\r\n        NgbAlertModule,\r\n        MatDialogModule,\r\n        HttpClientModule,\r\n        MatPaginatorModule,\r\n        MatSlideToggleModule,\r\n        MatProgressSpinnerModule\r\n    ],\r\n  providers: [\r\n      DatePipe,\r\n      {\r\n          provide: APP_INITIALIZER,\r\n          useFactory: initialize,\r\n          deps: [AppService],\r\n          multi: true\r\n      }\r\n  ],\r\n  bootstrap: [AppComponent],\r\n  entryComponents: [ ModalComponent ]\r\n})\r\nexport class AppModule { }\r\n","import { Injectable } from '@angular/core';\nimport {Constants, currencyCodes, DoctorTitles, DoctorType} from './utils/Constants';\nimport {DataKey, DataStoreService, SessionStorageKeys} from './services/data-store.service';\nimport {UserData} from './models/user-data';\nimport {HttpHeaders, HttpParams} from '@angular/common/http';\nimport {DataLoaderService} from './services/data-loader.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AppService {\n\n  constructor(\n      private dataStore: DataStoreService,\n      private dataLoaderService: DataLoaderService\n  ) { }\n\n  public loadModuleConfigurations() {\n  }\n\n  public loadPermissions() {\n  }\n\n  public userLogin() {\n  }\n\n  public loadUserDetails() {\n    this.dataStore.set(DataKey.loggedInUser, this.loadUserData(), true);\n    sessionStorage.setItem(SessionStorageKeys.loggedInUser, JSON.stringify(this.loadUserData()));\n  }\n\n  private loadUserDataFromMock() {\n    const data = {\n      doctor: true,\n      patientData: null,\n      doctorData: {\n        userName: 'johndoe@gmail.com',\n        title: DoctorTitles.DR,\n        firstName: 'John',\n        lastName: 'Doe',\n        contactNumber: '+94773092323',\n        whatsAppNumber: '+94773092323',\n        regNo: 'reg/34234235',\n        priceForAppointment: '1650',\n        priceCurrency: currencyCodes.LKR,\n        qualifications: 'MBBS (India), MS, MCh, MChir, FLT-HPBS, FACS, Kozhikode, India',\n        professionalType: DoctorType.CON,\n        specialityA: 'Pulmonologist',\n        specialityB: 'Dermatologist',\n        specialityC: '',\n        availableForAppointment: 'true'\n      }\n    };\n    return data;\n  }\n\n  private loadUserData() {\n    let userData = null;\n    const url = Constants.BASE_URL + Constants.GET_USER_DATA + 'dfg';\n    this.dataLoaderService.get<UserData>(url, new HttpParams(), new HttpHeaders(), DataKey.loggedInUser)\n        .then((data: any) => {\n          if (data && data.status && data.status.code === 1) {\n            userData = data.data[0];\n            return userData;\n          } else if (data && data.status && data.status.code === -1) {\n            return null;\n\n            return {\n              \"patientData\": null,\n              \"doctorData\": {\n                \"userName\": \"dfg\",\n                \"title\": \"Dr\",\n                \"firstName\": \"John\",\n                \"lastName\": \"Doe\",\n                \"professionalType\": \"CON\",\n                \"specialityA\": \"Pulmonologist\",\n                \"specialityB\": \"Dermatologist\",\n                \"specialityC\": \"\",\n                \"regNo\": \"reg/34234235\",\n                \"qualifications\": \"MBBS (India), MS, MCh, MChir, FLT-HPBS, FACS, Kozhikode, India\",\n                \"priceForAppointment\": '',\n                \"availableForAppointment\": false\n              },\n              \"doctor\": true\n            };\n            return {\n              \"patientData\": {\n                \"userName\": \"kavin88@abc.com\",\n                \"title\": \"Mr\",\n                \"firstName\": \"Milinda\",\n                \"lastName\": \"Sandaruwan\",\n                \"birthday\": \"1994-12-31T00:00:00.000+0000\",\n                \"address\": null,\n                \"contactNumber\": \"0123456789\",\n                \"whatsAppNumber\": \"0123456789\",\n                \"userAllergies\": \"mata allergies nehe\",\n                \"male\": false\n              },\n              \"doctorData\": null,\n              \"doctor\": false\n            };\n          }\n        });\n  }\n}\n","export default \".mat-card-style {\\r\\n    margin-left: auto;\\r\\n    margin-right: auto;\\r\\n    margin-top: 30px;\\r\\n    min-width: 320px;\\r\\n    max-width: 320px;\\r\\n}\\r\\n\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvY29tcG9uZW50cy9ib29raW5nLWVudGVyLXRpbWUvYm9va2luZy1lbnRlci10aW1lLmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7SUFDSSxpQkFBaUI7SUFDakIsa0JBQWtCO0lBQ2xCLGdCQUFnQjtJQUNoQixnQkFBZ0I7SUFDaEIsZ0JBQWdCO0FBQ3BCIiwiZmlsZSI6InNyYy9hcHAvY29tcG9uZW50cy9ib29raW5nLWVudGVyLXRpbWUvYm9va2luZy1lbnRlci10aW1lLmNvbXBvbmVudC5jc3MiLCJzb3VyY2VzQ29udGVudCI6WyIubWF0LWNhcmQtc3R5bGUge1xyXG4gICAgbWFyZ2luLWxlZnQ6IGF1dG87XHJcbiAgICBtYXJnaW4tcmlnaHQ6IGF1dG87XHJcbiAgICBtYXJnaW4tdG9wOiAzMHB4O1xyXG4gICAgbWluLXdpZHRoOiAzMjBweDtcclxuICAgIG1heC13aWR0aDogMzIwcHg7XHJcbn1cclxuIl19 */\"","import { Component, OnInit } from '@angular/core';\r\nimport {Router} from '@angular/router';\r\nimport {DoctorType, MODAL_TYPES, TRANSITION_PAGE_TYPE} from '../../utils/Constants';\r\nimport {DataKey, DataStoreService, SessionStorageKeys} from '../../services/data-store.service';\r\nimport {DatePipe} from '@angular/common';\r\nimport {timeout} from 'rxjs/operators';\r\nimport {DataLoaderService} from '../../services/data-loader.service';\r\n\r\n@Component({\r\n  selector: 'app-booking-enter-time',\r\n  templateUrl: './booking-enter-time.component.html',\r\n  styleUrls: ['./booking-enter-time.component.css']\r\n})\r\nexport class BookingEnterTimeComponent implements OnInit {\r\n\r\n  transitionType = null;\r\n  doctor = {\r\n    id: 1,\r\n    name: 'Dr. Nuwan Chinthaka',\r\n    professionalType: DoctorType.CON,\r\n    bio: 'MD [NIZHNY NOVGOROD STATE MED ACA] RUSSIA(2008)',\r\n    specialities: [\r\n      'Consultant Neurologist',\r\n      'Consultant Pediatrician'\r\n    ],\r\n    consultationPrice: 'Rs. 2000.00'\r\n  };\r\n  availableAppointmentsForProfessional = [];\r\n\r\n  isScheduleVisible = false;\r\n\r\n  days = [\r\n    {\r\n      date: this.getDate(0).date,\r\n      day: this.getDate(0).day,\r\n      available: true\r\n    },\r\n    {\r\n      date: this.getDate(1).date,\r\n      day: this.getDate(1).day,\r\n      available: true\r\n    },\r\n    {\r\n      date: this.getDate(2).date,\r\n      day: this.getDate(2).day,\r\n      available: true\r\n    },\r\n    {\r\n      date: this.getDate(3).date,\r\n      day: this.getDate(3).day,\r\n      available: true\r\n    },\r\n    {\r\n      date: this.getDate(4).date,\r\n      day: this.getDate(4).day,\r\n      available: true\r\n    },\r\n    {\r\n      date: this.getDate(5).date,\r\n      day: this.getDate(5).day,\r\n      available: true\r\n    },\r\n    {\r\n      date: this.getDate(6).date,\r\n      day: this.getDate(6).day,\r\n      available: true\r\n    },\r\n  ];\r\n\r\n  selectedDate: any;\r\n  selectedAppointmentId = '';\r\n  consultationTime = '8.00 P.M.';\r\n  summaryShown = false;\r\n  loggedInUser = null;\r\n  showRedirectionMessage = false;\r\n\r\n  constructor(\r\n      private router: Router,\r\n      private datePipe: DatePipe,\r\n      private dataStore: DataStoreService,\r\n      private dataLoaderService: DataLoaderService\r\n  ) { }\r\n\r\n  ngOnInit() {\r\n    this.loggedInUser = JSON.parse(sessionStorage.getItem(SessionStorageKeys.loggedInUser));\r\n    this.loadProfessional();\r\n    this.loadAvailableAppointmentsForProfessional();\r\n  }\r\n\r\n  getDate(apart: number) {\r\n    const today = new Date();\r\n    today.setDate(today.getDate() + apart);\r\n    const dd = String(today.getDate()).padStart(2, '0');\r\n    const mm = String(today.getMonth() + 1).padStart(2, '0'); // January is 0!\r\n    const yyyy = today.getFullYear();\r\n    const date = mm + '/' + dd + '/' + yyyy;\r\n\r\n    const dayNum = today.getDay();\r\n    let day: string;\r\n    switch (dayNum) {\r\n      case 0:\r\n        day = 'Sunday';\r\n        break;\r\n      case 1:\r\n        day = 'Monday';\r\n        break;\r\n      case 2:\r\n        day = 'Tuesday';\r\n        break;\r\n      case 3:\r\n        day = 'Wednesday';\r\n        break;\r\n      case 4:\r\n        day = 'Thursday';\r\n        break;\r\n      case 5:\r\n        day = 'Friday';\r\n        break;\r\n      case 6:\r\n        day = 'Saturday';\r\n        break;\r\n    }\r\n    return {\r\n      date,\r\n      day\r\n    };\r\n  }\r\n\r\n  scheduleVisibilityToggle($event: boolean) {\r\n    this.isScheduleVisible = $event;\r\n  }\r\n\r\n  navigateToPaymentOrLogIn() {\r\n    if (!this.loggedInUser) {\r\n      this.transitionType = TRANSITION_PAGE_TYPE.LOGIN_REDIRECT;\r\n      this.showRedirectionMessage = true;\r\n    } else {\r\n      this.router.navigate(['confirmation']).then(r => {\r\n      });\r\n    }\r\n  }\r\n\r\n  getTimeSlots(selectedDate: any) {\r\n    const selectedFullDate = new Date(selectedDate);\r\n\r\n    let dummyAppointments = [];\r\n    const found = this.availableAppointmentsForProfessional.find((appointmentTime: any) => {\r\n      const appointmentDate = new Date(appointmentTime.date);\r\n      return appointmentDate.getFullYear() === selectedFullDate.getFullYear() &&\r\n          appointmentDate.getMonth() === selectedFullDate.getMonth() &&\r\n          appointmentDate.getDate() === selectedFullDate.getDate();\r\n    });\r\n    if (found && found.dummyAppointments) {\r\n      dummyAppointments = found.dummyAppointments;\r\n      dummyAppointments.forEach((app) => {\r\n        if (app && app.appointmentTime) {\r\n          const dummyDate = new Date();\r\n          const h = JSON.parse(JSON.stringify(parseInt(app.appointmentTime.toString().split(':')[0], 10)));\r\n          const m = JSON.parse(JSON.stringify(parseInt(app.appointmentTime.toString().split(':')[1], 10)));\r\n          dummyDate.setHours(h);\r\n          dummyDate.setMinutes(m);\r\n          app.displayAppointmentTime = dummyDate;\r\n        }\r\n      });\r\n    }\r\n    return dummyAppointments;\r\n  }\r\n\r\n  continueClicked($event: boolean) {\r\n    this.summaryShown = $event;\r\n  }\r\n\r\n  private loadAvailableAppointmentsForProfessional() {\r\n    this.availableAppointmentsForProfessional = [\r\n      {\r\n        date: '2020-12-26T20:30:00.000+0000',\r\n        dummyAppointments: [\r\n          {\r\n            appointmentId: 16,\r\n            appointmentTime: '08:00:00',\r\n            timeSlotId: null\r\n          }\r\n        ]\r\n      },\r\n      {\r\n        date: '2020-12-27T20:30:00.000+0000',\r\n        dummyAppointments: [\r\n          {\r\n            appointmentId: 21,\r\n            appointmentTime: '10:00:00',\r\n            timeSlotId: null\r\n          }\r\n        ]\r\n      },\r\n      {\r\n        date: '2020-12-25T20:30:00.000+0000',\r\n        dummyAppointments: [\r\n          {\r\n            appointmentId: 12,\r\n            appointmentTime: '10:00:00',\r\n            timeSlotId: null\r\n          }\r\n        ]\r\n      }\r\n    ];\r\n    if (this.dataStore.get(DataKey.availableAppointmentsForProfessional).getValue()) {\r\n      this.availableAppointmentsForProfessional = this.dataStore.get(DataKey.availableAppointmentsForProfessional).getValue();\r\n    }\r\n    this.filterOutUnavailableDays(this.days);\r\n  }\r\n\r\n  // Todo: complete\r\n  private loadProfessional() {\r\n  }\r\n\r\n  private filterOutUnavailableDays(days: any[]) {\r\n    days.forEach((day: any) => {\r\n      if (this.getTimeSlots(day.date) && this.getTimeSlots(day.date).length > 0) {\r\n        day.available = true;\r\n      } else {\r\n        day.available = false;\r\n      }\r\n    });\r\n  }\r\n\r\n  getDisplaySelectedTime(appointmentId: any) {\r\n    let displaySelectedTime = '';\r\n    if (appointmentId) {\r\n      this.availableAppointmentsForProfessional.forEach((appointmentArray) => {\r\n        if (appointmentArray.dummyAppointments) {\r\n          appointmentArray.dummyAppointments.forEach((appointment) => {\r\n            if (appointment && appointment.appointmentId && appointment.appointmentId === parseInt(appointmentId, 10)) {\r\n              displaySelectedTime = this.datePipe.transform(appointment.displayAppointmentTime, 'shortTime');\r\n            }\r\n          });\r\n        }\r\n      });\r\n    }\r\n    return displaySelectedTime;\r\n  }\r\n\r\n  goToSearchProfessionals() {\r\n    this.router.navigate(['searchProfessionals']).then(r => {\r\n    });\r\n  }\r\n\r\n  logIn() {\r\n    this.router.navigate(['signup']).then(r => {\r\n    });\r\n  }\r\n\r\n  clickFromTransitionPage($event: string) {\r\n    switch ($event) {\r\n      case 'back':\r\n        this.showRedirectionMessage = false;\r\n        break;\r\n      case 'logIn':\r\n        this.logIn();\r\n        this.showRedirectionMessage = false;\r\n        break;\r\n    }\r\n  }\r\n}\r\n","export default \".mat-card-style {\\r\\n    margin-left: auto;\\r\\n    margin-right: auto;\\r\\n    margin-top: 30px;\\r\\n    min-width: 320px;\\r\\n    max-width: 320px;\\r\\n}\\r\\n\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvY29tcG9uZW50cy9ib29raW5nLWVudGVyL2Jvb2tpbmctZW50ZXIuY29tcG9uZW50LmNzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtJQUNJLGlCQUFpQjtJQUNqQixrQkFBa0I7SUFDbEIsZ0JBQWdCO0lBQ2hCLGdCQUFnQjtJQUNoQixnQkFBZ0I7QUFDcEIiLCJmaWxlIjoic3JjL2FwcC9jb21wb25lbnRzL2Jvb2tpbmctZW50ZXIvYm9va2luZy1lbnRlci5jb21wb25lbnQuY3NzIiwic291cmNlc0NvbnRlbnQiOlsiLm1hdC1jYXJkLXN0eWxlIHtcclxuICAgIG1hcmdpbi1sZWZ0OiBhdXRvO1xyXG4gICAgbWFyZ2luLXJpZ2h0OiBhdXRvO1xyXG4gICAgbWFyZ2luLXRvcDogMzBweDtcclxuICAgIG1pbi13aWR0aDogMzIwcHg7XHJcbiAgICBtYXgtd2lkdGg6IDMyMHB4O1xyXG59XHJcbiJdfQ== */\"","import { Component, OnInit } from '@angular/core';\r\nimport {DoctorType} from '../../utils/Constants';\r\nimport {Router} from '@angular/router';\r\nimport {DataLoaderService} from '../../services/data-loader.service';\r\n\r\n@Component({\r\n  selector: 'app-booking-enter',\r\n  templateUrl: './booking-enter.component.html',\r\n  styleUrls: ['./booking-enter.component.css']\r\n})\r\nexport class BookingEnterComponent implements OnInit {\r\n\r\n  doctor = {\r\n    id: 1,\r\n    name: 'Dr. Nuwan chinthaka',\r\n    professionalType: DoctorType.CON,\r\n    bio: 'MD [NIZHNY NOVGOROD STATE MED ACA] RUSSIA(2008)',\r\n    specialities: [\r\n      'Consultant Neurologist',\r\n      'Consultant Pediatrician'\r\n    ],\r\n    consultationPrice: 'Rs. 2000.00',\r\n    isSkypePreferred: true,\r\n    isWhatsAppPreferred: false\r\n  };\r\n\r\n  isScheduleVisible = false;\r\n  isPatientSkypeAvailable = false;\r\n  media = [\r\n    {value: 'skype', viewValue: 'Skype'},\r\n    {value: 'whatsapp', viewValue: 'Whatsapp'}\r\n  ];\r\n  skypeID: any;\r\n  constructor(\r\n      private router: Router\r\n  ) { }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n  scheduleVisibilityToggle($event: boolean) {\r\n      this.isScheduleVisible = $event;\r\n  }\r\n\r\n  saveSkype(b: boolean) {\r\n    //\r\n  }\r\n\r\n    goBack() {\r\n      this.router.navigate(['appointmentTime']).then(r => {\r\n      });\r\n    }\r\n}\r\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NvbXBvbmVudHMvY2hhdC1zZWN0aW9uL2NoYXQtc2VjdGlvbi5jb21wb25lbnQuY3NzIn0= */\"","import {Component, Input, OnInit} from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-chat-section',\r\n  templateUrl: './chat-section.component.html',\r\n  styleUrls: ['./chat-section.component.css']\r\n})\r\nexport class ChatSectionComponent implements OnInit {\r\n\r\n  @Input() messageThread;\r\n  @Input() patientName;\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n}\r\n","export default \".mat-tab-group {\\r\\n    margin-bottom: 48px;\\r\\n}\\r\\n.mat-card-style {\\r\\n    margin-left: auto;\\r\\n    margin-right: auto;\\r\\n    margin-top: 30px;\\r\\n    min-width: 320px;\\r\\n\\r\\n}\\r\\n\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvY29tcG9uZW50cy9jb21tb24tYm9keS9jb21tb24tYm9keS5jb21wb25lbnQuY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0lBQ0ksbUJBQW1CO0FBQ3ZCO0FBQ0E7SUFDSSxpQkFBaUI7SUFDakIsa0JBQWtCO0lBQ2xCLGdCQUFnQjtJQUNoQixnQkFBZ0I7O0FBRXBCIiwiZmlsZSI6InNyYy9hcHAvY29tcG9uZW50cy9jb21tb24tYm9keS9jb21tb24tYm9keS5jb21wb25lbnQuY3NzIiwic291cmNlc0NvbnRlbnQiOlsiLm1hdC10YWItZ3JvdXAge1xyXG4gICAgbWFyZ2luLWJvdHRvbTogNDhweDtcclxufVxyXG4ubWF0LWNhcmQtc3R5bGUge1xyXG4gICAgbWFyZ2luLWxlZnQ6IGF1dG87XHJcbiAgICBtYXJnaW4tcmlnaHQ6IGF1dG87XHJcbiAgICBtYXJnaW4tdG9wOiAzMHB4O1xyXG4gICAgbWluLXdpZHRoOiAzMjBweDtcclxuXHJcbn1cclxuIl19 */\"","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-common-body',\r\n  templateUrl: './common-body.component.html',\r\n  styleUrls: ['./common-body.component.css']\r\n})\r\nexport class CommonBodyComponent implements OnInit {\r\n\r\n  flow = 2;\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n  onFlowChange($event) {\r\n    this.flow = $event;\r\n  }\r\n\r\n}\r\n","export default \".mat-card-style {\\r\\n    margin-left: auto;\\r\\n    margin-right: auto;\\r\\n    margin-top: 30px;\\r\\n    min-width: 320px;\\r\\n    max-width: 320px;\\r\\n}\\r\\n\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvY29tcG9uZW50cy9jb250YWN0LXBhZ2UvY29udGFjdC1wYWdlLmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7SUFDSSxpQkFBaUI7SUFDakIsa0JBQWtCO0lBQ2xCLGdCQUFnQjtJQUNoQixnQkFBZ0I7SUFDaEIsZ0JBQWdCO0FBQ3BCIiwiZmlsZSI6InNyYy9hcHAvY29tcG9uZW50cy9jb250YWN0LXBhZ2UvY29udGFjdC1wYWdlLmNvbXBvbmVudC5jc3MiLCJzb3VyY2VzQ29udGVudCI6WyIubWF0LWNhcmQtc3R5bGUge1xyXG4gICAgbWFyZ2luLWxlZnQ6IGF1dG87XHJcbiAgICBtYXJnaW4tcmlnaHQ6IGF1dG87XHJcbiAgICBtYXJnaW4tdG9wOiAzMHB4O1xyXG4gICAgbWluLXdpZHRoOiAzMjBweDtcclxuICAgIG1heC13aWR0aDogMzIwcHg7XHJcbn1cclxuIl19 */\"","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-contact-page',\r\n  templateUrl: './contact-page.component.html',\r\n  styleUrls: ['./contact-page.component.css']\r\n})\r\nexport class ContactPageComponent implements OnInit {\r\n  phoneNumber = '0773092511';\r\n  email = 'kavin256@gmail.com';\r\n  facebook = 'https://www.facebook.com';\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n}\r\n","export default \".mat-card-style {\\r\\n    margin-left: auto;\\r\\n    margin-right: auto;\\r\\n    margin-top: 30px;\\r\\n    min-width: 320px;\\r\\n    max-width: 320px;\\r\\n\\r\\n}\\r\\n\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvY29tcG9uZW50cy9kb2N0b3ItZmluYW5jZS9kb2N0b3ItZmluYW5jZS5jb21wb25lbnQuY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0lBQ0ksaUJBQWlCO0lBQ2pCLGtCQUFrQjtJQUNsQixnQkFBZ0I7SUFDaEIsZ0JBQWdCO0lBQ2hCLGdCQUFnQjs7QUFFcEIiLCJmaWxlIjoic3JjL2FwcC9jb21wb25lbnRzL2RvY3Rvci1maW5hbmNlL2RvY3Rvci1maW5hbmNlLmNvbXBvbmVudC5jc3MiLCJzb3VyY2VzQ29udGVudCI6WyIubWF0LWNhcmQtc3R5bGUge1xyXG4gICAgbWFyZ2luLWxlZnQ6IGF1dG87XHJcbiAgICBtYXJnaW4tcmlnaHQ6IGF1dG87XHJcbiAgICBtYXJnaW4tdG9wOiAzMHB4O1xyXG4gICAgbWluLXdpZHRoOiAzMjBweDtcclxuICAgIG1heC13aWR0aDogMzIwcHg7XHJcblxyXG59XHJcbiJdfQ== */\"","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-doctor-finance',\r\n  templateUrl: './doctor-finance.component.html',\r\n  styleUrls: ['./doctor-finance.component.css']\r\n})\r\nexport class DoctorFinanceComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n}\r\n","export default \".mat-card-style {\\r\\n    margin-left: auto;\\r\\n    margin-right: auto;\\r\\n    margin-top: 30px;\\r\\n    min-width: 320px;\\r\\n    max-width: 320px;\\r\\n\\r\\n}\\r\\n\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvY29tcG9uZW50cy9kb2N0b3ItcHJvZmlsZS9kb2N0b3ItcHJvZmlsZS5jb21wb25lbnQuY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0lBQ0ksaUJBQWlCO0lBQ2pCLGtCQUFrQjtJQUNsQixnQkFBZ0I7SUFDaEIsZ0JBQWdCO0lBQ2hCLGdCQUFnQjs7QUFFcEIiLCJmaWxlIjoic3JjL2FwcC9jb21wb25lbnRzL2RvY3Rvci1wcm9maWxlL2RvY3Rvci1wcm9maWxlLmNvbXBvbmVudC5jc3MiLCJzb3VyY2VzQ29udGVudCI6WyIubWF0LWNhcmQtc3R5bGUge1xyXG4gICAgbWFyZ2luLWxlZnQ6IGF1dG87XHJcbiAgICBtYXJnaW4tcmlnaHQ6IGF1dG87XHJcbiAgICBtYXJnaW4tdG9wOiAzMHB4O1xyXG4gICAgbWluLXdpZHRoOiAzMjBweDtcclxuICAgIG1heC13aWR0aDogMzIwcHg7XHJcblxyXG59XHJcbiJdfQ== */\"","import {Component, OnInit} from '@angular/core';\r\nimport {Router} from '@angular/router';\r\nimport {DataLoaderService} from '../../services/data-loader.service';\r\nimport {Constants, currencyCodes, DoctorTitles, DoctorType, specializations} from '../../utils/Constants';\r\nimport {DataKey, DataStoreService, SessionStorageKeys} from '../../services/data-store.service';\r\nimport {HttpHeaders, HttpParams} from '@angular/common/http';\r\nimport {DoctorSpecificData, UserData} from '../../models/user-data';\r\nimport {DataHandlerService} from '../../services/data-handler.service';\r\n\r\n@Component({\r\n  selector: 'app-doctor-profile',\r\n  templateUrl: './doctor-profile.component.html',\r\n  styleUrls: ['./doctor-profile.component.css']\r\n})\r\nexport class DoctorProfileComponent implements OnInit {\r\n  selectedImage: File;\r\n  // profileUsername = 'dfg';\r\n  editable = false;\r\n  loggedInUser = null;\r\n  userData: DoctorSpecificData;\r\n\r\n  titles = [\r\n    {value: DoctorTitles.DR},\r\n    {value: DoctorTitles.MR},\r\n    {value: DoctorTitles.MRS},\r\n    {value: DoctorTitles.MS},\r\n    {value: DoctorTitles.PROF},\r\n  ];\r\n\r\n  doctorTypes = [\r\n    {value: DoctorType.CON},\r\n    {value: DoctorType.GEN},\r\n    {value: DoctorType.OTH}\r\n  ];\r\n\r\n  // todo: find a better solution. this is just a duplication. So not good\r\n  specializations = specializations;\r\n\r\n  constructor(\r\n      private router: Router,\r\n      private dataStore: DataStoreService,\r\n      private dataHandlerService: DataHandlerService,\r\n      private dataLoaderService: DataLoaderService\r\n  ) { }\r\n\r\n  ngOnInit() {\r\n    this.loggedInUser = JSON.parse(sessionStorage.getItem(SessionStorageKeys.loggedInUser));\r\n    // todo: resolve this commented\r\n    // if (this.loggedInUser && this.loggedInUser.doctorData) {\r\n    //   this.userData = this.loggedInUser.doctorData;\r\n    // }\r\n    if (this.loggedInUser && this.loggedInUser) {\r\n      this.userData = this.loggedInUser;\r\n    }\r\n\r\n    // converting professionalType to a user friendly readable format\r\n    if (this.userData && this.userData.professionalType) {\r\n      this.userData.professionalType = this.dataHandlerService.convertProfessionalTypeFromDBFormat(\r\n          JSON.parse(JSON.stringify(this.userData.professionalType)));\r\n    }\r\n  }\r\n\r\n  getColor(state: string) {\r\n    return '#000000';\r\n  }\r\n\r\n  toggleEditable(editable: boolean) {\r\n    this.editable = editable;\r\n  }\r\n\r\n  saveData() {\r\n    // converting professionalType to a database readable format\r\n    if (this.userData && this.userData.professionalType) {\r\n      this.userData.professionalType = this.dataHandlerService.convertProfessionalTypeToDBFormat(\r\n          JSON.parse(JSON.stringify(this.userData.professionalType)));\r\n    }\r\n\r\n    const url = Constants.BASE_URL + Constants.UPDATE_PROFESSIONAL_SPECIFIC_DATA + this.userData.userName;\r\n    this.dataLoaderService.put<UserData>(url, new HttpParams(), new HttpHeaders(), DataKey.uploadImage, this.userData )\r\n        .then((data: any) => {\r\n          if (data && data.status && data.status.code === 1) {\r\n            // console.log('data');\r\n            // console.log(data.data);\r\n            this.toggleEditable(false);\r\n\r\n          } else if (data && data.status && data.status.code === -1) {\r\n            // console.log('data null');\r\n            // console.log(data.data);\r\n          }\r\n        });\r\n  }\r\n\r\n  isConsultant(type: string) {\r\n    return type === DoctorType.CON;\r\n  }\r\n\r\n  goToMyAppointments() {\r\n    this.router.navigate(['doctor/appointments']).then(r => {\r\n    });\r\n  }\r\n\r\n  editSchedule() {\r\n    this.router.navigate(['doctor/schedule']).then(r => {\r\n    });\r\n  }\r\n\r\n  uploadImage(event) {\r\n    this.selectedImage = event.target.file;\r\n    const formData = new FormData();\r\n    formData.append('image', this.selectedImage);\r\n    formData.append( 'username', this.userData.userName);\r\n\r\n    // sent request\r\n    const url = Constants.BASE_URL + Constants.UPLOAD_USER_IMAGE;\r\n    this.dataLoaderService.post<UserData>(url, new HttpParams(), new HttpHeaders(), DataKey.uploadImage, formData )\r\n        .then((data: any) => {\r\n          if (data && data.status && data.status.code === 1) {\r\n            // console.log('data');\r\n            // console.log(data.data);\r\n          } else if (data && data.status && data.status.code === -1) {\r\n            // console.log('data null');\r\n            // console.log(data.data);\r\n          }\r\n        });\r\n  }\r\n\r\n  checkForMandatoryFieldsToActivateProfile(userData: DoctorSpecificData) {\r\n    // currently only the userData.priceForAppointment is checked as a requirement\r\n    return userData &&\r\n        userData.priceForAppointment !== null &&\r\n        userData.priceForAppointment !== undefined &&\r\n        userData.priceForAppointment !== '' &&\r\n        parseInt(userData.priceForAppointment, 10) &&\r\n        parseInt(userData.priceForAppointment, 10) > 0;\r\n  }\r\n}\r\n","export default \".mat-card-style {\\r\\n    margin-left: auto;\\r\\n    margin-right: auto;\\r\\n    margin-top: 30px;\\r\\n    min-width: 320px;\\r\\n    max-width: 320px;\\r\\n\\r\\n}\\r\\n\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvY29tcG9uZW50cy9kb2N0b3Itc2NoZWR1bGUvZG9jdG9yLXNjaGVkdWxlLmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7SUFDSSxpQkFBaUI7SUFDakIsa0JBQWtCO0lBQ2xCLGdCQUFnQjtJQUNoQixnQkFBZ0I7SUFDaEIsZ0JBQWdCOztBQUVwQiIsImZpbGUiOiJzcmMvYXBwL2NvbXBvbmVudHMvZG9jdG9yLXNjaGVkdWxlL2RvY3Rvci1zY2hlZHVsZS5jb21wb25lbnQuY3NzIiwic291cmNlc0NvbnRlbnQiOlsiLm1hdC1jYXJkLXN0eWxlIHtcclxuICAgIG1hcmdpbi1sZWZ0OiBhdXRvO1xyXG4gICAgbWFyZ2luLXJpZ2h0OiBhdXRvO1xyXG4gICAgbWFyZ2luLXRvcDogMzBweDtcclxuICAgIG1pbi13aWR0aDogMzIwcHg7XHJcbiAgICBtYXgtd2lkdGg6IDMyMHB4O1xyXG5cclxufVxyXG4iXX0= */\"","import { Component, OnInit } from '@angular/core';\r\nimport {DataKey, DataStoreService} from '../../services/data-store.service';\r\nimport {DoctorScheduleData, UserData} from '../../models/user-data';\r\nimport {DataHandlerService} from '../../services/data-handler.service';\r\nimport {Router} from '@angular/router';\r\nimport {Constants} from '../../utils/Constants';\r\nimport {HttpHeaders, HttpParams} from '@angular/common/http';\r\nimport {DataLoaderService} from '../../services/data-loader.service';\r\n\r\n@Component({\r\n  selector: 'app-doctor-schedule',\r\n  templateUrl: './doctor-schedule.component.html',\r\n  styleUrls: ['./doctor-schedule.component.css']\r\n})\r\nexport class DoctorScheduleComponent implements OnInit {\r\n  profileUsername = 'dfg';\r\n  availableForAppointment = true;\r\n\r\n  constructor(\r\n      private router: Router,\r\n      private dataStore: DataStoreService,\r\n      private dataLoaderService: DataLoaderService,\r\n      private dataHandlerService: DataHandlerService\r\n  ) {}\r\n\r\n  DAY_TITLES = new Map(\r\n      [\r\n        [1, 'Sunday'],\r\n        [2, 'Monday'],\r\n        [3, 'Tuesday'],\r\n        [4, 'Wednesday'],\r\n        [5, 'Thursday'],\r\n        [6, 'Friday'],\r\n        [7, 'Saturday'],\r\n      ]\r\n  );\r\n  DEFAULT_AVERAGE_TIME_FOR_APPOINTMENT = 20;\r\n  meridian = true;\r\n  changeRequestSent = false;\r\n  isConfirmationActive = false;\r\n  doctorScheduleData: DoctorScheduleData;\r\n\r\n  ngOnInit() {\r\n    // this.populateDoctorScheduleData();\r\n    this.populateDoctorScheduleDataByMock();\r\n  }\r\n\r\n  save() {\r\n    this.updateSchedule();\r\n    const url = Constants.BASE_URL + Constants.UPDATE_PROFESSIONAL_WORK_DATA + this.profileUsername;\r\n    if (this.availableForAppointment) {\r\n      this.dataLoaderService.put<UserData>(url, new HttpParams(), new HttpHeaders(),\r\n          DataKey.uploadImage, this.doctorScheduleData)\r\n          .then((data: any) => {\r\n            if (data && data.status && data.status.code === 1) {\r\n              // console.log('data');\r\n              // console.log(data.data);\r\n              this.isConfirmationActive = false;\r\n              this.changeRequestSent = true;\r\n            } else if (data && data.status && data.status.code === -1) {\r\n              // console.log('data null');\r\n              // console.log(data.data);\r\n            }\r\n          });\r\n    } else {\r\n      this.dataLoaderService.post<UserData>(url, new HttpParams(), new HttpHeaders(),\r\n          DataKey.uploadImage, this.doctorScheduleData)\r\n          .then((data: any) => {\r\n            if (data && data.status && data.status.code === 1) {\r\n              // console.log('data');\r\n              // console.log(data.data);\r\n              this.isConfirmationActive = false;\r\n              this.changeRequestSent = true;\r\n            } else if (data && data.status && data.status.code === -1) {\r\n              // console.log('data null');\r\n              // console.log(data.data);\r\n            }\r\n          });\r\n    }\r\n  }\r\n\r\n  cancel() {\r\n    this.isConfirmationActive = false;\r\n    this.changeRequestSent = false;\r\n  }\r\n\r\n  private populateDoctorScheduleData() {\r\n    this.doctorScheduleData = this.dataStore.get(DataKey.doctorScheduleData).getValue() as DoctorScheduleData;\r\n    if (this.doctorScheduleData) {\r\n      this.doctorScheduleData.averageTimeForAppointment = this.doctorScheduleData.averageTimeForAppointment ?\r\n          this.doctorScheduleData.averageTimeForAppointment : this.DEFAULT_AVERAGE_TIME_FOR_APPOINTMENT;\r\n      this.doctorScheduleData.fixedDoctorDates.forEach((doctorDate) => {\r\n        doctorDate.title = this.DAY_TITLES.get(doctorDate.day);\r\n        if (doctorDate.workingTimePeriods) {\r\n          doctorDate.workingTimePeriods.forEach((workingTimePeriod) => {\r\n            workingTimePeriod.endTimeSelected = this.dataHandlerService.convertTimeToHoursAndMinutes(\r\n                workingTimePeriod.endTime);\r\n            workingTimePeriod.startTimeSelected = this.dataHandlerService.convertTimeToHoursAndMinutes(\r\n                workingTimePeriod.startTime);\r\n          });\r\n        }\r\n      });\r\n    }\r\n  }\r\n\r\n  private populateDoctorScheduleDataByMock() {\r\n    this.doctorScheduleData = {\r\n      averageTimeForAppointment: 30,\r\n      fixedDoctorDates: [\r\n        {\r\n          day: 1,\r\n          workingTimePeriods: [\r\n            {\r\n              startTime: '08:00:00',\r\n              endTime: '10:00:00',\r\n              isActive: true\r\n            },\r\n            {\r\n              startTime: '14:00:00',\r\n              endTime: '16:00:00',\r\n              isActive: false\r\n            },\r\n            {\r\n              startTime: '17:00:00',\r\n              endTime: '18:00:00',\r\n              isActive: true\r\n            }\r\n          ]\r\n        },\r\n        {\r\n          day: 2,\r\n          workingTimePeriods: [\r\n            {\r\n              startTime: '10:00:00',\r\n              endTime: '11:45:00',\r\n              isActive: true\r\n            }\r\n          ]\r\n        },\r\n        {\r\n          day: 3,\r\n          workingTimePeriods: null\r\n        },\r\n        {\r\n          day: 4,\r\n          workingTimePeriods: null\r\n        },\r\n        {\r\n          day: 5,\r\n          workingTimePeriods: null\r\n        },\r\n        {\r\n          day: 6,\r\n          workingTimePeriods: null\r\n        },\r\n        {\r\n          day: 7,\r\n          workingTimePeriods: [\r\n            {\r\n              startTime: '10:00:00',\r\n              endTime: '12:10:00',\r\n              isActive: true\r\n            },\r\n            {\r\n              startTime: '13:00:00',\r\n              endTime: '15:10:00',\r\n              isActive: false\r\n            }\r\n          ]\r\n        }\r\n      ]\r\n    };\r\n\r\n    if (this.doctorScheduleData) {\r\n      this.doctorScheduleData.averageTimeForAppointment = this.doctorScheduleData.averageTimeForAppointment ?\r\n          this.doctorScheduleData.averageTimeForAppointment : this.DEFAULT_AVERAGE_TIME_FOR_APPOINTMENT;\r\n      this.doctorScheduleData.fixedDoctorDates.forEach((doctorDate) => {\r\n        doctorDate.title = this.DAY_TITLES.get(doctorDate.day);\r\n        if (doctorDate.workingTimePeriods) {\r\n          doctorDate.workingTimePeriods.forEach((workingTimePeriod) => {\r\n            workingTimePeriod.endTimeSelected = this.dataHandlerService.convertTimeToHoursAndMinutes(\r\n                workingTimePeriod.endTime);\r\n            workingTimePeriod.startTimeSelected = this.dataHandlerService.convertTimeToHoursAndMinutes(\r\n                workingTimePeriod.startTime);\r\n          });\r\n        }\r\n      });\r\n    }\r\n  }\r\n\r\n  private updateSchedule() {\r\n    // from hours and minutes to date\r\n    if (this.doctorScheduleData) {\r\n      this.doctorScheduleData.fixedDoctorDates.forEach((doctorDate) => {\r\n        if (doctorDate.workingTimePeriods) {\r\n          doctorDate.workingTimePeriods.forEach((workingTimePeriod) => {\r\n            workingTimePeriod.endTime = this.dataHandlerService.convertHoursAndMinutesToTime(\r\n                workingTimePeriod.endTimeSelected);\r\n            workingTimePeriod.startTime = this.dataHandlerService.convertHoursAndMinutesToTime(\r\n                workingTimePeriod.startTimeSelected);\r\n          });\r\n        }\r\n      });\r\n    }\r\n  }\r\n\r\n  userConsent() {\r\n    this.isConfirmationActive = !this.isConfirmationActive;\r\n  }\r\n\r\n  goToProfessionalDashboard() {\r\n    this.router.navigate(['doctor/dashboard']).then(r => {\r\n    });\r\n  }\r\n}\r\n","export default \".mat-card-style {\\r\\n    margin-left: auto;\\r\\n    margin-right: auto;\\r\\n    margin-top: 30px;\\r\\n    min-width: 320px;\\r\\n    max-width: 320px;\\r\\n}\\r\\n.strikethrough {\\r\\n    text-decoration: line-through;\\r\\n}\\r\\n\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvY29tcG9uZW50cy9kb2N0b3Itc2lkZS1ib29raW5nLWxpc3QvZG9jdG9yLXNpZGUtYm9va2luZy1saXN0LmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7SUFDSSxpQkFBaUI7SUFDakIsa0JBQWtCO0lBQ2xCLGdCQUFnQjtJQUNoQixnQkFBZ0I7SUFDaEIsZ0JBQWdCO0FBQ3BCO0FBQ0E7SUFDSSw2QkFBNkI7QUFDakMiLCJmaWxlIjoic3JjL2FwcC9jb21wb25lbnRzL2RvY3Rvci1zaWRlLWJvb2tpbmctbGlzdC9kb2N0b3Itc2lkZS1ib29raW5nLWxpc3QuY29tcG9uZW50LmNzcyIsInNvdXJjZXNDb250ZW50IjpbIi5tYXQtY2FyZC1zdHlsZSB7XHJcbiAgICBtYXJnaW4tbGVmdDogYXV0bztcclxuICAgIG1hcmdpbi1yaWdodDogYXV0bztcclxuICAgIG1hcmdpbi10b3A6IDMwcHg7XHJcbiAgICBtaW4td2lkdGg6IDMyMHB4O1xyXG4gICAgbWF4LXdpZHRoOiAzMjBweDtcclxufVxyXG4uc3RyaWtldGhyb3VnaCB7XHJcbiAgICB0ZXh0LWRlY29yYXRpb246IGxpbmUtdGhyb3VnaDtcclxufVxyXG4iXX0= */\"","import { Component, OnInit } from '@angular/core';\r\nimport {PageEvent} from '@angular/material';\r\n\r\n@Component({\r\n  selector: 'app-doctor-side-booking-list',\r\n  templateUrl: './doctor-side-booking-list.component.html',\r\n  styleUrls: ['./doctor-side-booking-list.component.css']\r\n})\r\nexport class DoctorSideBookingListComponent implements OnInit {\r\n\r\n  RESULTS_PER_PAGE = 5;\r\n  PAGINATION_START = 0;\r\n  PAGINATION_END = this.RESULTS_PER_PAGE;\r\n\r\n  bookingListSlot1 = {\r\n    startTime: '07.00 A.M.',\r\n    endTime: '12.00 P.M.',\r\n    bookings: [\r\n      {\r\n        bookingId: 2387,\r\n        patientId: '76531',\r\n        patientName: 'John Doe',\r\n        bookingStatus: BookingStatus.BOOKING_COMPLETED\r\n      },\r\n      {\r\n        bookingId: 2387,\r\n        patientId: '76531',\r\n        patientName: 'John Doe',\r\n        bookingStatus: BookingStatus.BOOKING_COMPLETED\r\n      },\r\n      {\r\n        bookingId: 2387,\r\n        patientId: '76531',\r\n        patientName: 'John Doe',\r\n        bookingStatus: BookingStatus.BOOKING_COMPLETED\r\n      },\r\n      {\r\n        bookingId: 1196,\r\n        patientId: '65456',\r\n        patientName: 'Sumanasiri',\r\n        bookingStatus: BookingStatus.BOOKING_COMPLETED\r\n      },\r\n      {\r\n        bookingId: 2387,\r\n        patientId: '76531',\r\n        patientName: 'John Doe',\r\n        bookingStatus: BookingStatus.BOOKING_COMPLETED\r\n      }\r\n    ]\r\n  };\r\n\r\n  bookingListSlot2 = {\r\n    startTime: '02.00 P.M.',\r\n    endTime: '04.00 P.M.',\r\n    bookings: [\r\n      {\r\n        bookingId: 2387,\r\n        patientId: '76531',\r\n        patientName: 'John Doe',\r\n        bookingStatus: BookingStatus.BOOKING_COMPLETED\r\n      },\r\n      {\r\n        bookingId: 1196,\r\n        patientId: '65456',\r\n        patientName: 'Sumanasiri',\r\n        bookingStatus: BookingStatus.BOOKING_COMPLETED\r\n      },\r\n      {\r\n        bookingId: 2387,\r\n        patientId: '76531',\r\n        patientName: 'John Doe',\r\n        bookingStatus: BookingStatus.BOOKING_COMPLETED\r\n      },\r\n      {\r\n        bookingId: 2387,\r\n        patientId: '76531',\r\n        patientName: 'John Doe',\r\n        bookingStatus: BookingStatus.BOOKING_COMPLETED\r\n      },\r\n      {\r\n        bookingId: 1196,\r\n        patientId: '65456',\r\n        patientName: 'Sumanasiri',\r\n        bookingStatus: BookingStatus.BOOKING_CANCELLED\r\n      },\r\n      {\r\n        bookingId: 2387,\r\n        patientId: '76531',\r\n        patientName: 'John Doe',\r\n        bookingStatus: BookingStatus.BOOKING_COMPLETED\r\n      }\r\n    ]\r\n  };\r\n\r\n  bookingListSlot3 = {\r\n    startTime: '08.00 P.M.',\r\n    endTime: '10.00 P.M.',\r\n    bookings: [\r\n      {\r\n        bookingId: 2387,\r\n        patientId: '76531',\r\n        patientName: 'John Doe',\r\n        bookingStatus: BookingStatus.BOOKING_COMPLETED\r\n      },\r\n      {\r\n        bookingId: 1196,\r\n        patientId: '65456',\r\n        patientName: 'Sumanasiri',\r\n        bookingStatus: BookingStatus.BOOKING_CURRENT\r\n      },\r\n      {\r\n        bookingId: 2383,\r\n        patientId: '76531',\r\n        patientName: 'John Doe',\r\n        bookingStatus: BookingStatus.BOOKING_NOT_STARTED\r\n      },\r\n      {\r\n        bookingId: 2367,\r\n        patientId: '76531',\r\n        patientName: 'John Doe',\r\n        bookingStatus: BookingStatus.BOOKING_NOT_STARTED\r\n      },\r\n      {\r\n        bookingId: 1156,\r\n        patientId: '65456',\r\n        patientName: 'Sumanasiri',\r\n        bookingStatus: BookingStatus.BOOKING_NOT_STARTED\r\n      },\r\n      {\r\n        bookingId: 4387,\r\n        patientId: '76531',\r\n        patientName: 'John Doe',\r\n        bookingStatus: BookingStatus.BOOKING_NOT_STARTED\r\n      }\r\n    ]\r\n  };\r\n  visible = false;\r\n  bookingSlotListVisible = true;\r\n  selectedSlot: any;\r\n  overTheAppointmentCard = null;\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit() {\r\n    this.selectedSlot = this.bookingListSlot2;\r\n  }\r\n\r\n  selectBooking($event: string) {\r\n    console.log($event);\r\n  }\r\n\r\n  onMouseEnter($event: number) {\r\n    this.overTheAppointmentCard = $event;\r\n  }\r\n\r\n  onMouseLeave() {\r\n    this.overTheAppointmentCard = null;\r\n  }\r\n\r\n  isOverTheAppointmentCard($event: number) {\r\n    return $event === this.overTheAppointmentCard;\r\n  }\r\n\r\n  // selectProfessional_($event: number) {\r\n  //   this.selectProfessional.emit($event);\r\n  // }\r\n\r\n  getColor($event) {\r\n    switch ($event) {\r\n      case BookingStatus.BOOKING_CANCELLED:\r\n        return Colors.BOOKING_CANCELLED;\r\n      case BookingStatus.BOOKING_NOT_STARTED:\r\n        return Colors.BOOKING_NOT_STARTED;\r\n      case BookingStatus.BOOKING_COMPLETED:\r\n        return Colors.BOOKING_COMPLETED;\r\n      case BookingStatus.BOOKING_CURRENT:\r\n        return Colors.BOOKING_CURRENT;\r\n      default:\r\n        return Colors.BOOKING_NOT_STARTED;\r\n    }\r\n  }\r\n\r\n  selectSlot(slot: any) {\r\n    this.selectedSlot = slot;\r\n    this.bookingSlotListVisible = !this.bookingSlotListVisible;\r\n\r\n  }\r\n\r\n  goToPage($event: PageEvent) {\r\n    this.PAGINATION_START = $event.pageIndex * $event.pageSize;\r\n    this.PAGINATION_END = this.PAGINATION_START + $event.pageSize;\r\n  }\r\n}\r\n\r\nexport enum BookingStatus {\r\n  BOOKING_CANCELLED = 'BOOKING_CANCELLED',\r\n  BOOKING_COMPLETED = 'BOOKING_COMPLETED',\r\n  BOOKING_CURRENT = 'BOOKING_CURRENT',\r\n  BOOKING_NOT_STARTED = 'BOOKING_NOT_STARTED'\r\n}\r\n\r\nexport enum Colors {\r\n  BOOKING_CANCELLED = '#ff6666',\r\n  BOOKING_COMPLETED = '#e6e6e6',\r\n  BOOKING_CURRENT = '#99ccff',\r\n  BOOKING_NOT_STARTED = '#d5ff80'\r\n}\r\n","export default \".mat-card-style {\\r\\n    margin-left: auto;\\r\\n    margin-right: auto;\\r\\n    margin-top: 30px;\\r\\n    min-width: 320px;\\r\\n    max-width: 320px;\\r\\n\\r\\n}\\r\\n\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvY29tcG9uZW50cy9kb2N0b3Itc2lkZS1ib29raW5nL2RvY3Rvci1zaWRlLWJvb2tpbmcuY29tcG9uZW50LmNzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtJQUNJLGlCQUFpQjtJQUNqQixrQkFBa0I7SUFDbEIsZ0JBQWdCO0lBQ2hCLGdCQUFnQjtJQUNoQixnQkFBZ0I7O0FBRXBCIiwiZmlsZSI6InNyYy9hcHAvY29tcG9uZW50cy9kb2N0b3Itc2lkZS1ib29raW5nL2RvY3Rvci1zaWRlLWJvb2tpbmcuY29tcG9uZW50LmNzcyIsInNvdXJjZXNDb250ZW50IjpbIi5tYXQtY2FyZC1zdHlsZSB7XHJcbiAgICBtYXJnaW4tbGVmdDogYXV0bztcclxuICAgIG1hcmdpbi1yaWdodDogYXV0bztcclxuICAgIG1hcmdpbi10b3A6IDMwcHg7XHJcbiAgICBtaW4td2lkdGg6IDMyMHB4O1xyXG4gICAgbWF4LXdpZHRoOiAzMjBweDtcclxuXHJcbn1cclxuIl19 */\"","import { Component, OnInit } from '@angular/core';\r\nimport {BookingStatus} from '../doctor-side-booking-list/doctor-side-booking-list.component';\r\nimport {MatSnackBar} from '@angular/material';\r\n\r\n@Component({\r\n  selector: 'app-doctor-side-booking',\r\n  templateUrl: './doctor-side-booking.component.html',\r\n  styleUrls: ['./doctor-side-booking.component.css']\r\n})\r\nexport class DoctorSideBookingComponent implements OnInit {\r\n\r\n    inProgress = false;\r\n    isConfirmationActive = false;\r\n    changeRequestSent = false;\r\n    booking = {\r\n      id: 2387,\r\n      createdDateTime: new Date(2020, 4, 20, 10, 45),\r\n      appointmentDateTime: new Date(2020, 4, 21, 10, 0),\r\n      durationInMinutes: 15,\r\n      status: BookingStatus.BOOKING_NOT_STARTED,\r\n      price: 'Rs. 2000.00',\r\n      doctorNotes: [],\r\n      userNotes: [],\r\n      cancellationRule: '',\r\n      messageThread:\r\n          [\r\n              {\r\n                  sender: 'doctor',\r\n                  message: 'jhbsdkcsd'\r\n              },\r\n              {\r\n                  sender: 'patient',\r\n                  message: 'jhbsdddfdfdkcsd'\r\n              },\r\n              {\r\n                  sender: 'doctor',\r\n                  message: 'hgvbhashjd'\r\n              }\r\n          ]\r\n  };\r\n  patient = {patientId: '76531', patientName: 'Mr. John Doe',\r\n      contactNumber: '0773092511', whatsAppNumber: '0773092511', email: 'kavin256@gmail.com',\r\n      birthday: new Date(1993, 4, 21).toLocaleDateString('en-US'),\r\n      age: 33,\r\n      knownAllergies: 'allergic to bad music, allergic to negative people'};\r\n  doctor = {doctorId: '4352545235', doctorName: 'Dr. Tim Cook'};\r\n  isPatientDetailsShown = true;\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n  userConsent() {\r\n      this.isConfirmationActive = !this.isConfirmationActive;\r\n  }\r\n\r\n  cancel() {\r\n      // this.updateSchedule();\r\n      this.isConfirmationActive = false;\r\n      this.changeRequestSent = true;\r\n      this.booking.status = BookingStatus.BOOKING_CANCELLED;\r\n  }\r\n\r\n  dismiss() {\r\n      this.isConfirmationActive = false;\r\n      this.changeRequestSent = false;\r\n  }\r\n}\r\n","export default \".mat-card-style {\\r\\n    margin-left: auto;\\r\\n    margin-right: auto;\\r\\n    margin-top: 30px;\\r\\n    min-width: 320px;\\r\\n    max-width: 320px;\\r\\n\\r\\n}\\r\\n\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvY29tcG9uZW50cy9mYXFzL2ZhcXMuY29tcG9uZW50LmNzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtJQUNJLGlCQUFpQjtJQUNqQixrQkFBa0I7SUFDbEIsZ0JBQWdCO0lBQ2hCLGdCQUFnQjtJQUNoQixnQkFBZ0I7O0FBRXBCIiwiZmlsZSI6InNyYy9hcHAvY29tcG9uZW50cy9mYXFzL2ZhcXMuY29tcG9uZW50LmNzcyIsInNvdXJjZXNDb250ZW50IjpbIi5tYXQtY2FyZC1zdHlsZSB7XHJcbiAgICBtYXJnaW4tbGVmdDogYXV0bztcclxuICAgIG1hcmdpbi1yaWdodDogYXV0bztcclxuICAgIG1hcmdpbi10b3A6IDMwcHg7XHJcbiAgICBtaW4td2lkdGg6IDMyMHB4O1xyXG4gICAgbWF4LXdpZHRoOiAzMjBweDtcclxuXHJcbn1cclxuIl19 */\"","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-faqs',\r\n  templateUrl: './faqs.component.html',\r\n  styleUrls: ['./faqs.component.css']\r\n})\r\nexport class FaqsComponent implements OnInit {\r\n  faqs = [\r\n      {\r\n        q: 'How can I contact the doctor after placing a booking successfully?',\r\n        a: 'Doctor will call you via Skype. When your booking number is near, make sure the doctor can reach you via Skype'\r\n      },\r\n      {\r\n        q: 'How can I contact the doctor after placing a booking successfully?',\r\n        a: 'Doctor will call you via Skype. When your booking number is near, make sure the doctor can reach you via Skype'\r\n      },\r\n      {\r\n        q: 'How can I contact the doctor after placing a booking successfully?',\r\n        a: 'Doctor will call you via Skype. When your booking number is near, make sure the doctor can reach you via Skype'\r\n      }\r\n    ];\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n}\r\n","export default \".app-footer {\\r\\n    min-height: 150px;\\r\\n    min-width: 320px;\\r\\n    width: 100%;\\r\\n    bottom: 0;\\r\\n    /*background: #d3d1d1;*/\\r\\n    /*background-color: #d3d1d1; !* For browsers that do not support gradients *!*/\\r\\n    background-image: linear-gradient(#ffffff, #b4b2b2); /* Standard syntax (must be last) */\\r\\n}\\r\\n\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvY29tcG9uZW50cy9mb290ZXIvZm9vdGVyLmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7SUFDSSxpQkFBaUI7SUFDakIsZ0JBQWdCO0lBQ2hCLFdBQVc7SUFDWCxTQUFTO0lBQ1QsdUJBQXVCO0lBQ3ZCLDhFQUE4RTtJQUM5RSxtREFBbUQsRUFBRSxtQ0FBbUM7QUFDNUYiLCJmaWxlIjoic3JjL2FwcC9jb21wb25lbnRzL2Zvb3Rlci9mb290ZXIuY29tcG9uZW50LmNzcyIsInNvdXJjZXNDb250ZW50IjpbIi5hcHAtZm9vdGVyIHtcclxuICAgIG1pbi1oZWlnaHQ6IDE1MHB4O1xyXG4gICAgbWluLXdpZHRoOiAzMjBweDtcclxuICAgIHdpZHRoOiAxMDAlO1xyXG4gICAgYm90dG9tOiAwO1xyXG4gICAgLypiYWNrZ3JvdW5kOiAjZDNkMWQxOyovXHJcbiAgICAvKmJhY2tncm91bmQtY29sb3I6ICNkM2QxZDE7ICEqIEZvciBicm93c2VycyB0aGF0IGRvIG5vdCBzdXBwb3J0IGdyYWRpZW50cyAqISovXHJcbiAgICBiYWNrZ3JvdW5kLWltYWdlOiBsaW5lYXItZ3JhZGllbnQoI2ZmZmZmZiwgI2I0YjJiMik7IC8qIFN0YW5kYXJkIHN5bnRheCAobXVzdCBiZSBsYXN0KSAqL1xyXG59XHJcbiJdfQ== */\"","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-footer',\r\n  templateUrl: './footer.component.html',\r\n  styleUrls: ['./footer.component.css']\r\n})\r\nexport class FooterComponent implements OnInit {\r\n  currentYear: number;\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit() {\r\n    this.currentYear = new Date().getFullYear();\r\n  }\r\n}\r\n","export default \".header-logo {\\r\\n    padding-top: 60px;\\r\\n    padding-bottom: 50px;\\r\\n}\\r\\nbutton.link { background:none; border:none; }\\r\\n.mat-card-style {\\r\\n    margin-left: auto;\\r\\n    margin-right: auto;\\r\\n    margin-top: 30px;\\r\\n    min-width: 320px;\\r\\n    max-width: 320px;\\r\\n}\\r\\n\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvY29tcG9uZW50cy9oZWFkZXIvaGVhZGVyLmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7SUFDSSxpQkFBaUI7SUFDakIsb0JBQW9CO0FBQ3hCO0FBQ0EsY0FBYyxlQUFlLEVBQUUsV0FBVyxFQUFFO0FBQzVDO0lBQ0ksaUJBQWlCO0lBQ2pCLGtCQUFrQjtJQUNsQixnQkFBZ0I7SUFDaEIsZ0JBQWdCO0lBQ2hCLGdCQUFnQjtBQUNwQiIsImZpbGUiOiJzcmMvYXBwL2NvbXBvbmVudHMvaGVhZGVyL2hlYWRlci5jb21wb25lbnQuY3NzIiwic291cmNlc0NvbnRlbnQiOlsiLmhlYWRlci1sb2dvIHtcclxuICAgIHBhZGRpbmctdG9wOiA2MHB4O1xyXG4gICAgcGFkZGluZy1ib3R0b206IDUwcHg7XHJcbn1cclxuYnV0dG9uLmxpbmsgeyBiYWNrZ3JvdW5kOm5vbmU7IGJvcmRlcjpub25lOyB9XHJcbi5tYXQtY2FyZC1zdHlsZSB7XHJcbiAgICBtYXJnaW4tbGVmdDogYXV0bztcclxuICAgIG1hcmdpbi1yaWdodDogYXV0bztcclxuICAgIG1hcmdpbi10b3A6IDMwcHg7XHJcbiAgICBtaW4td2lkdGg6IDMyMHB4O1xyXG4gICAgbWF4LXdpZHRoOiAzMjBweDtcclxufVxyXG4iXX0= */\"","import {Component, Inject, Input, OnInit} from '@angular/core';\r\nimport './header.component.css';\r\nimport {Router} from '@angular/router';\r\nimport {DataKey, DataStoreService, SessionStorageKeys} from '../../services/data-store.service';\r\nimport {DataHandlerService} from '../../services/data-handler.service';\r\n\r\n@Component({\r\n  selector: 'app-header',\r\n  templateUrl: './header.component.html',\r\n  styleUrls: ['./header.component.css']\r\n})\r\n\r\nexport class HeaderComponent implements OnInit {\r\n\r\n  signUpResultObject = {\r\n    isSignUp: undefined,\r\n    userType: undefined\r\n  };\r\n  loggedInUser = null;\r\n  user = null;\r\n  firstName: string;\r\n  isSignUp = true;\r\n\r\n  userType;\r\n\r\n  constructor(\r\n              private dataHandlerService: DataHandlerService,\r\n              private router: Router,\r\n              private dataStore: DataStoreService\r\n  ) {}\r\n\r\n  ngOnInit() {\r\n    if (sessionStorage.getItem(SessionStorageKeys.loggedInUser)) {\r\n      this.loggedInUser = JSON.parse(sessionStorage.getItem(SessionStorageKeys.loggedInUser));\r\n    }\r\n    this.firstName = null;\r\n    if (this.loggedInUser) {\r\n      this.firstName = this.setFirstName(this.loggedInUser);\r\n    }\r\n    if (this.dataStore.get(DataKey.signUpResultObject).getValue()) {\r\n      this.signUpResultObject = this.dataStore.get(DataKey.signUpResultObject).getValue();\r\n      this.userType = this.signUpResultObject.userType;\r\n      this.isSignUp = this.signUpResultObject.isSignUp;\r\n    }\r\n  }\r\n\r\n  logoClick(): void {\r\n    if (this.dataStore.get(DataKey.signUpResultObject).getValue()) {\r\n      this.signUpResultObject = this.dataStore.get(DataKey.signUpResultObject).getValue();\r\n      this.userType = this.signUpResultObject.userType;\r\n      this.isSignUp = this.signUpResultObject.isSignUp;\r\n    }\r\n    if (this.loggedInUser && this.loggedInUser.doctor !== null && this.loggedInUser.doctor) {\r\n      this.router.navigate(['doctor/dashboard']).then(r => {\r\n      });\r\n    } else if (this.loggedInUser && this.loggedInUser.doctor !== null && !this.loggedInUser.doctor) {\r\n      this.router.navigate(['user/dashboard']).then(r => {\r\n      });\r\n    } else {\r\n      this.router.navigate(['signup']).then(r => {\r\n      });\r\n    }\r\n  }\r\n\r\n  goToHomePage() {\r\n    this.router.navigate(['/']).then(r => {\r\n    });\r\n  }\r\n\r\n  private setFirstName(loggedInUser: any): string {\r\n    let fName = null;\r\n    if (loggedInUser && loggedInUser.doctor) {\r\n      // todo: uncomment\r\n      // fName = loggedInUser.doctorData.firstName;\r\n      fName = loggedInUser.firstName;\r\n    } else if (loggedInUser && !loggedInUser.doctor) {\r\n      // todo: uncomment\r\n      // fName = loggedInUser.patientData.firstName;\r\n      fName = loggedInUser.firstName;\r\n    }\r\n    return fName;\r\n  }\r\n}\r\n","export default \".mat-card-style {\\r\\n    margin-left: auto;\\r\\n    margin-right: auto;\\r\\n    margin-top: 30px;\\r\\n    max-width: 640px;\\r\\n\\r\\n}\\r\\n\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvY29tcG9uZW50cy9sYW5kaW5nLXBhZ2UvbGFuZGluZy1wYWdlLmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7SUFDSSxpQkFBaUI7SUFDakIsa0JBQWtCO0lBQ2xCLGdCQUFnQjtJQUNoQixnQkFBZ0I7O0FBRXBCIiwiZmlsZSI6InNyYy9hcHAvY29tcG9uZW50cy9sYW5kaW5nLXBhZ2UvbGFuZGluZy1wYWdlLmNvbXBvbmVudC5jc3MiLCJzb3VyY2VzQ29udGVudCI6WyIubWF0LWNhcmQtc3R5bGUge1xyXG4gICAgbWFyZ2luLWxlZnQ6IGF1dG87XHJcbiAgICBtYXJnaW4tcmlnaHQ6IGF1dG87XHJcbiAgICBtYXJnaW4tdG9wOiAzMHB4O1xyXG4gICAgbWF4LXdpZHRoOiA2NDBweDtcclxuXHJcbn1cclxuIl19 */\"","import {Component, EventEmitter, Input, OnChanges, OnInit, Output, SimpleChanges} from '@angular/core';\r\nimport {Router} from '@angular/router';\r\nimport {DataLoaderService} from '../../services/data-loader.service';\r\nimport {AuthModel} from '../../models/auth-model';\r\nimport {DataKey, DataStoreService} from '../../services/data-store.service';\r\nimport {RequestOptions} from '../../models/request-options';\r\nimport {HttpHeaders, HttpParams} from '@angular/common/http';\r\nimport {AuthResponse} from '../../models/auth-response';\r\nimport {Constants} from '../../utils/Constants';\r\n\r\n@Component({\r\n  selector: 'app-landing-page',\r\n  templateUrl: './landing-page.component.html',\r\n  styleUrls: ['./landing-page.component.css']\r\n})\r\nexport class LandingPageComponent implements OnInit, OnChanges {\r\n\r\n  @Input() flow: number;\r\n  @Output() emitFlowChange = new EventEmitter();\r\n\r\n  constructor(private router: Router,\r\n              private dataLoader: DataLoaderService,\r\n              private dataStore: DataStoreService) {}\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n  ngOnChanges(changes: SimpleChanges): void {\r\n    if (changes.flow && changes.flow.currentValue) {\r\n      this.flow = changes.flow.currentValue;\r\n    }\r\n  }\r\n\r\n  goToSearchPage() {\r\n    this.router.navigate(['searchProfessionals']).then(r => {\r\n    });\r\n\r\n    const obj: AuthModel = new AuthModel();\r\n    obj.username = 'foo12345';\r\n    obj.password = 'foo';\r\n    this.dataLoader.login<AuthResponse>(Constants.BASE_URL + '/authenticate', new RequestOptions(), obj, DataKey.authKey);\r\n\r\n    this.dataStore.get(DataKey.authKey, true).subscribe(\r\n        (data) => {\r\n          console.log(data);\r\n        }\r\n    );\r\n  }\r\n}\r\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NvbXBvbmVudHMvbW9kYWwvbW9kYWwuY29tcG9uZW50LmNzcyJ9 */\"","import {Component, EventEmitter, Inject, Input, OnInit, Output} from '@angular/core';\r\nimport {MAT_DIALOG_DATA} from '@angular/material/dialog';\r\nimport {Router} from '@angular/router';\r\n\r\n@Component({\r\n  selector: 'app-modal',\r\n  templateUrl: './modal.component.html',\r\n  styleUrls: ['./modal.component.css']\r\n})\r\nexport class ModalComponent implements OnInit {\r\n\r\n  @Input() modalType;\r\n  @Output() clickEmitter = new EventEmitter<string>();\r\n\r\n  constructor(\r\n      private router: Router,\r\n      @Inject(MAT_DIALOG_DATA) data) {\r\n    this.modalType = data.modalType;\r\n  }\r\n\r\n  ngOnInit() {\r\n  }\r\n}\r\n","export default \".mat-card-style {\\r\\n    margin-left: auto;\\r\\n    margin-right: auto;\\r\\n    margin-top: 30px;\\r\\n    min-width: 320px;\\r\\n    max-width: 320px;\\r\\n\\r\\n}\\r\\n\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvY29tcG9uZW50cy9wYWdlLXRpdGxlL3BhZ2UtdGl0bGUuY29tcG9uZW50LmNzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtJQUNJLGlCQUFpQjtJQUNqQixrQkFBa0I7SUFDbEIsZ0JBQWdCO0lBQ2hCLGdCQUFnQjtJQUNoQixnQkFBZ0I7O0FBRXBCIiwiZmlsZSI6InNyYy9hcHAvY29tcG9uZW50cy9wYWdlLXRpdGxlL3BhZ2UtdGl0bGUuY29tcG9uZW50LmNzcyIsInNvdXJjZXNDb250ZW50IjpbIi5tYXQtY2FyZC1zdHlsZSB7XHJcbiAgICBtYXJnaW4tbGVmdDogYXV0bztcclxuICAgIG1hcmdpbi1yaWdodDogYXV0bztcclxuICAgIG1hcmdpbi10b3A6IDMwcHg7XHJcbiAgICBtaW4td2lkdGg6IDMyMHB4O1xyXG4gICAgbWF4LXdpZHRoOiAzMjBweDtcclxuXHJcbn1cclxuIl19 */\"","import {Component, Input, OnInit} from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-page-title',\r\n  templateUrl: './page-title.component.html',\r\n  styleUrls: ['./page-title.component.css']\r\n})\r\nexport class PageTitleComponent implements OnInit {\r\n\r\n  @Input() title;\r\n  constructor() { }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n}\r\n","export default \".mat-card-style {\\r\\n    margin-left: auto;\\r\\n    margin-right: auto;\\r\\n    margin-top: 30px;\\r\\n    min-width: 320px;\\r\\n    max-width: 320px;\\r\\n}\\r\\n.strikethrough {\\r\\n    text-decoration: line-through;\\r\\n}\\r\\n.mat-radio-button ~ .mat-radio-button {\\r\\n    margin-left: 16px;\\r\\n}\\r\\n\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvY29tcG9uZW50cy9wYXRpZW50LWJvb2tpbmctbGlzdC9wYXRpZW50LWJvb2tpbmctbGlzdC5jb21wb25lbnQuY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0lBQ0ksaUJBQWlCO0lBQ2pCLGtCQUFrQjtJQUNsQixnQkFBZ0I7SUFDaEIsZ0JBQWdCO0lBQ2hCLGdCQUFnQjtBQUNwQjtBQUNBO0lBQ0ksNkJBQTZCO0FBQ2pDO0FBQ0E7SUFDSSxpQkFBaUI7QUFDckIiLCJmaWxlIjoic3JjL2FwcC9jb21wb25lbnRzL3BhdGllbnQtYm9va2luZy1saXN0L3BhdGllbnQtYm9va2luZy1saXN0LmNvbXBvbmVudC5jc3MiLCJzb3VyY2VzQ29udGVudCI6WyIubWF0LWNhcmQtc3R5bGUge1xyXG4gICAgbWFyZ2luLWxlZnQ6IGF1dG87XHJcbiAgICBtYXJnaW4tcmlnaHQ6IGF1dG87XHJcbiAgICBtYXJnaW4tdG9wOiAzMHB4O1xyXG4gICAgbWluLXdpZHRoOiAzMjBweDtcclxuICAgIG1heC13aWR0aDogMzIwcHg7XHJcbn1cclxuLnN0cmlrZXRocm91Z2gge1xyXG4gICAgdGV4dC1kZWNvcmF0aW9uOiBsaW5lLXRocm91Z2g7XHJcbn1cclxuLm1hdC1yYWRpby1idXR0b24gfiAubWF0LXJhZGlvLWJ1dHRvbiB7XHJcbiAgICBtYXJnaW4tbGVmdDogMTZweDtcclxufVxyXG4iXX0= */\"","import { Component, OnInit } from '@angular/core';\r\nimport {BookingStatus, Colors} from '../doctor-side-booking-list/doctor-side-booking-list.component';\r\nimport {DoctorType} from '../../utils/Constants';\r\nimport {Router} from '@angular/router';\r\nimport {PageEvent} from '@angular/material';\r\n\r\n@Component({\r\n  selector: 'app-patient-booking-list',\r\n  templateUrl: './patient-booking-list.component.html',\r\n  styleUrls: ['./patient-booking-list.component.css']\r\n})\r\nexport class PatientBookingListComponent implements OnInit {\r\n\r\n  currentDate = new Date();\r\n  RESULTS_PER_PAGE = 5;\r\n  PAGINATION_START = 0;\r\n  PAGINATION_END = this.RESULTS_PER_PAGE;\r\n\r\n  bookings = [\r\n    {\r\n      bookingId: 2387,\r\n      doctorId: '76531',\r\n      date: '03-04-2020',\r\n      doctorName: 'Dr. John Doe',\r\n      bookingStatus: BookingStatus.BOOKING_COMPLETED\r\n    },\r\n    {\r\n      bookingId: 1196,\r\n      doctorId: '65456',\r\n      date: '18-05-2020',\r\n      doctorName: 'Dr. Sumanasiri',\r\n      bookingStatus: BookingStatus.BOOKING_CANCELLED\r\n    },\r\n    {\r\n      bookingId: 5729,\r\n      doctorId: '76537',\r\n      date: '02-05-2020',\r\n      doctorName: 'Dr. Tom Harrison',\r\n      bookingStatus: BookingStatus.BOOKING_NOT_STARTED\r\n    }\r\n  ];\r\n\r\n  title = 'MY BOOKINGS';\r\n  titleBooking = 'BOOKING';\r\n  selectedBookingId = null;\r\n  showBookings = 'all'; // 'new' or 'all'\r\n\r\n  doctor = {\r\n    id: 2,\r\n    name: 'Dr. Punya Anupama',\r\n    professionalType: DoctorType.GEN,\r\n    bio: 'MBBS [COLOMBO](1998)',\r\n    specialities: [\r\n      'Consultant Pathologist'\r\n    ],\r\n    consultationPrice: 'Rs. 1500.00'\r\n  };\r\n\r\n  booking = {\r\n    bookingId: 2387,\r\n    doctorId: '4352545235',\r\n    patientId: '76531',\r\n    doctorName: 'Dr. Tim Cook',\r\n    patientName: 'John Doe',\r\n    patientAge: 29,\r\n    skypeID: 'kafkjnf34',\r\n    phoneNumber: '0773092511',\r\n    bookingStatus: BookingStatus.BOOKING_NOT_STARTED,\r\n    messageThread: [\r\n      {\r\n        sender: 'patient',\r\n        message: 'Hi doctor, I have a headache and a cough.'\r\n      },\r\n      {\r\n        sender: 'doctor',\r\n        message: 'Hi John, do you have any allergies?'\r\n      },\r\n      {\r\n        sender: 'patient',\r\n        message: 'I\\'m allergic to panadol'\r\n      },\r\n      {\r\n        sender: 'doctor',\r\n        message: 'Thanks.'\r\n      },\r\n      {\r\n        sender: 'patient',\r\n        message: 'THANK YOU DOC!.'\r\n      },\r\n      {\r\n        sender: 'patient',\r\n        message: 'Can you send me a prescription btw?'\r\n      },\r\n      {\r\n        sender: 'doctor',\r\n        message: 'Sure. I will send you.'\r\n      },\r\n      {\r\n        sender: 'patient',\r\n        message: 'Awesome. Thanks'\r\n      }\r\n    ],\r\n    bookingPrice: 'Rs. 2000.00',\r\n    doctorCharge: 'Rs. 1800.00'\r\n  };\r\n  isConfirmationActive = false;\r\n  changeRequestSent = false;\r\n\r\n  items = [\r\n    'Augmentine 625mg bd - 5 days',\r\n    'Omeprazole 20mg bd - 5 days',\r\n    'Fexofenadine 180mg 1 night - 5 days'\r\n  ];\r\n\r\n  prescriptionList = [\r\n    {\r\n      prescription: ['Augmentine 625mg bd - 5 days',\r\n      'Omeprazole 20mg bd - 5 days',\r\n      'Fexofenadine 180mg 1 night - 5 days']\r\n    },\r\n    {\r\n      prescription: ['Augmentine 625mg bd - 5 days',\r\n        'Omeprazole 20mg bd - 5 days',\r\n      'Fexofenadine 180mg 1 night - 5 days']\r\n    }\r\n  ];\r\n  isPrescriptionsVisible = false;\r\n  selectedPrescription = null;\r\n\r\n  constructor(\r\n      private router: Router\r\n  ) { }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n  selectBooking($event: string) {\r\n    this.selectedBookingId = $event;\r\n  }\r\n\r\n  getColor($event) {\r\n    switch ($event) {\r\n      case BookingStatus.BOOKING_CANCELLED:\r\n        return Colors.BOOKING_CANCELLED;\r\n      case BookingStatus.BOOKING_NOT_STARTED:\r\n        return Colors.BOOKING_NOT_STARTED;\r\n      case BookingStatus.BOOKING_COMPLETED:\r\n        return Colors.BOOKING_COMPLETED;\r\n      case BookingStatus.BOOKING_CURRENT:\r\n        return Colors.BOOKING_CURRENT;\r\n      default:\r\n        return Colors.BOOKING_NOT_STARTED;\r\n    }\r\n  }\r\n\r\n  save() {\r\n    this.isConfirmationActive = false;\r\n    this.changeRequestSent = true;\r\n  }\r\n\r\n  cancel() {\r\n    this.isConfirmationActive = false;\r\n    this.changeRequestSent = false;\r\n  }\r\n\r\n  selectPrescription(prescription: string[]) {\r\n    this.selectedPrescription = prescription;\r\n  }\r\n\r\n  showPrescriptions(bookingId: number, action?) {\r\n    this.isPrescriptionsVisible = action;\r\n  }\r\n\r\n  goToUserDashboard() {\r\n    this.PAGINATION_START = 0;\r\n    this.PAGINATION_END = this.RESULTS_PER_PAGE;\r\n    this.router.navigate(['user/dashboard']).then(r => {\r\n    });\r\n  }\r\n\r\n  goToPage($event: PageEvent) {\r\n    this.PAGINATION_START = $event.pageIndex * $event.pageSize;\r\n    this.PAGINATION_END = this.PAGINATION_START + $event.pageSize;\r\n  }\r\n\r\n  newBooking() {\r\n    this.router.navigate(['searchProfessionals']).then(r => {\r\n    });\r\n  }\r\n}\r\n","export default \".mat-card-style {\\r\\n    margin-left: auto;\\r\\n    margin-right: auto;\\r\\n    margin-top: 30px;\\r\\n    min-width: 320px;\\r\\n    max-width: 320px;\\r\\n\\r\\n}\\r\\n\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvY29tcG9uZW50cy9wYXRpZW50LXByb2ZpbGUvcGF0aWVudC1wcm9maWxlLmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7SUFDSSxpQkFBaUI7SUFDakIsa0JBQWtCO0lBQ2xCLGdCQUFnQjtJQUNoQixnQkFBZ0I7SUFDaEIsZ0JBQWdCOztBQUVwQiIsImZpbGUiOiJzcmMvYXBwL2NvbXBvbmVudHMvcGF0aWVudC1wcm9maWxlL3BhdGllbnQtcHJvZmlsZS5jb21wb25lbnQuY3NzIiwic291cmNlc0NvbnRlbnQiOlsiLm1hdC1jYXJkLXN0eWxlIHtcclxuICAgIG1hcmdpbi1sZWZ0OiBhdXRvO1xyXG4gICAgbWFyZ2luLXJpZ2h0OiBhdXRvO1xyXG4gICAgbWFyZ2luLXRvcDogMzBweDtcclxuICAgIG1pbi13aWR0aDogMzIwcHg7XHJcbiAgICBtYXgtd2lkdGg6IDMyMHB4O1xyXG5cclxufVxyXG4iXX0= */\"","import { Component, OnInit } from '@angular/core';\r\nimport {Router} from '@angular/router';\r\n\r\n@Component({\r\n  selector: 'app-patient-profile',\r\n  templateUrl: './patient-profile.component.html',\r\n  styleUrls: ['./patient-profile.component.css']\r\n})\r\nexport class PatientProfileComponent implements OnInit {\r\n\r\n  patient = {\r\n    id: 1,\r\n    title: 'Mr.',\r\n    birthday: '03-05-1994',\r\n    age: 31,\r\n    name: 'John Doe',\r\n    medicalHistory: 'long term gastritis patient',\r\n    allergies: 'allergic to hindi songs',\r\n  };\r\n\r\n  titles = [\r\n    {value: 'Dr.'},\r\n    {value: 'Mr.'},\r\n    {value: 'Mrs.'},\r\n    {value: 'Ms.'},\r\n    {value: 'Prof.'}\r\n  ];\r\n\r\n  title = 'MY PROFILE';\r\n  editable = false;\r\n\r\n  constructor(\r\n      private router: Router\r\n  ) { }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n  goToMyAppointments() {\r\n    this.router.navigate(['user/appointments']).then(r => {\r\n    });\r\n  }\r\n\r\n  toggleEditable(editable: boolean) {\r\n    this.editable = editable;\r\n  }\r\n\r\n  logOut() {\r\n    sessionStorage.clear();\r\n    // location.reload();\r\n    this.router.navigate(['signup']).then(r => {});\r\n  }\r\n}\r\n","export default \".mat-card-style {\\r\\n    margin-left: auto;\\r\\n    margin-right: auto;\\r\\n    margin-top: 30px;\\r\\n    min-width: 320px;\\r\\n    max-width: 320px;\\r\\n\\r\\n}\\r\\n\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvY29tcG9uZW50cy9wYXltZW50LXN1Y2Nlc3MvcGF5bWVudC1zdWNjZXNzLmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7SUFDSSxpQkFBaUI7SUFDakIsa0JBQWtCO0lBQ2xCLGdCQUFnQjtJQUNoQixnQkFBZ0I7SUFDaEIsZ0JBQWdCOztBQUVwQiIsImZpbGUiOiJzcmMvYXBwL2NvbXBvbmVudHMvcGF5bWVudC1zdWNjZXNzL3BheW1lbnQtc3VjY2Vzcy5jb21wb25lbnQuY3NzIiwic291cmNlc0NvbnRlbnQiOlsiLm1hdC1jYXJkLXN0eWxlIHtcclxuICAgIG1hcmdpbi1sZWZ0OiBhdXRvO1xyXG4gICAgbWFyZ2luLXJpZ2h0OiBhdXRvO1xyXG4gICAgbWFyZ2luLXRvcDogMzBweDtcclxuICAgIG1pbi13aWR0aDogMzIwcHg7XHJcbiAgICBtYXgtd2lkdGg6IDMyMHB4O1xyXG5cclxufVxyXG4iXX0= */\"","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-payment-success',\r\n  templateUrl: './payment-success.component.html',\r\n  styleUrls: ['./payment-success.component.css']\r\n})\r\nexport class PaymentSuccessComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n}\r\n","export default \".mat-card-style {\\r\\n    margin-left: auto;\\r\\n    margin-right: auto;\\r\\n    margin-top: 30px;\\r\\n    min-width: 320px;\\r\\n    max-width: 320px;\\r\\n\\r\\n}\\r\\n\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvY29tcG9uZW50cy9wcmVzY3JpcHRpb24tbGlzdC9wcmVzY3JpcHRpb24tbGlzdC5jb21wb25lbnQuY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0lBQ0ksaUJBQWlCO0lBQ2pCLGtCQUFrQjtJQUNsQixnQkFBZ0I7SUFDaEIsZ0JBQWdCO0lBQ2hCLGdCQUFnQjs7QUFFcEIiLCJmaWxlIjoic3JjL2FwcC9jb21wb25lbnRzL3ByZXNjcmlwdGlvbi1saXN0L3ByZXNjcmlwdGlvbi1saXN0LmNvbXBvbmVudC5jc3MiLCJzb3VyY2VzQ29udGVudCI6WyIubWF0LWNhcmQtc3R5bGUge1xyXG4gICAgbWFyZ2luLWxlZnQ6IGF1dG87XHJcbiAgICBtYXJnaW4tcmlnaHQ6IGF1dG87XHJcbiAgICBtYXJnaW4tdG9wOiAzMHB4O1xyXG4gICAgbWluLXdpZHRoOiAzMjBweDtcclxuICAgIG1heC13aWR0aDogMzIwcHg7XHJcblxyXG59XHJcbiJdfQ== */\"","import { Component, OnInit } from '@angular/core';\nimport {Router} from '@angular/router';\n\n@Component({\n  selector: 'app-prescription-list',\n  templateUrl: './prescription-list.component.html',\n  styleUrls: ['./prescription-list.component.css']\n})\nexport class PrescriptionListComponent implements OnInit {\n\n  isDoctor: boolean;\n  prescriptionList: any [];\n\n  constructor(\n      private router: Router\n  ) { }\n\n  ngOnInit() {\n    this.isDoctor = true;\n    // this.isDoctor = false;\n\n    this.prescriptionList = new Array<any>()\n    this.prescriptionList.push(\n        {\n          appointmentNumber: 356,\n          prescriptionTimeStamp: new Date(2020, 3, 2, 9, 45)\n        }\n    );\n    this.prescriptionList.push(\n        {\n          appointmentNumber: 423,\n          prescriptionTimeStamp: new Date(2020, 3, 2, 10, 30)\n        }\n    );\n    this.prescriptionList.push(\n        {\n          appointmentNumber: 987,\n          prescriptionTimeStamp: new Date(2020, 3, 2, 11, 20)\n        }\n    );\n  }\n\n    selectPrescription() {\n      this.router.navigate(['appointment/prescription']).then(r => {\n      });\n    }\n}\n","export default \".mat-card-style {\\r\\n    margin-left: auto;\\r\\n    margin-right: auto;\\r\\n    margin-top: 30px;\\r\\n    min-width: 320px;\\r\\n    max-width: 320px;\\r\\n}\\r\\n\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvY29tcG9uZW50cy9wcmVzY3JpcHRpb24vcHJlc2NyaXB0aW9uLmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7SUFDSSxpQkFBaUI7SUFDakIsa0JBQWtCO0lBQ2xCLGdCQUFnQjtJQUNoQixnQkFBZ0I7SUFDaEIsZ0JBQWdCO0FBQ3BCIiwiZmlsZSI6InNyYy9hcHAvY29tcG9uZW50cy9wcmVzY3JpcHRpb24vcHJlc2NyaXB0aW9uLmNvbXBvbmVudC5jc3MiLCJzb3VyY2VzQ29udGVudCI6WyIubWF0LWNhcmQtc3R5bGUge1xyXG4gICAgbWFyZ2luLWxlZnQ6IGF1dG87XHJcbiAgICBtYXJnaW4tcmlnaHQ6IGF1dG87XHJcbiAgICBtYXJnaW4tdG9wOiAzMHB4O1xyXG4gICAgbWluLXdpZHRoOiAzMjBweDtcclxuICAgIG1heC13aWR0aDogMzIwcHg7XHJcbn1cclxuIl19 */\"","import {Component, ElementRef, OnInit, ViewChild} from '@angular/core';\r\nimport {BookingStatus} from '../doctor-side-booking-list/doctor-side-booking-list.component';\r\nimport {DoctorType} from '../../utils/Constants';\r\nimport {Router} from '@angular/router';\r\nimport jsPDF from 'jspdf';\r\nimport html2canvas from 'html2canvas';\r\nimport {$} from 'protractor';\r\n\r\n@Component({\r\n  selector: 'app-prescription',\r\n  templateUrl: './prescription.component.html',\r\n  styleUrls: ['./prescription.component.css']\r\n})\r\n\r\nexport class PrescriptionComponent implements OnInit {\r\n  @ViewChild('test', {static: true}) el: ElementRef;\r\n\r\n  currentDate = new Date();\r\n\r\n  doctor = {\r\n    id: 2,\r\n    name: 'Dr. Punya Anupama',\r\n    professionalType: DoctorType.GEN,\r\n    bio: 'MBBS [COLOMBO](1998)',\r\n    specialities: [\r\n      'Consultant Pathologist'\r\n    ],\r\n    consultationPrice: 'Rs. 1500.00'\r\n  };\r\n\r\n  booking = {\r\n    bookingId: 2387,\r\n    doctorId: '4352545235',\r\n    patientId: '76531',\r\n    doctorName: 'Dr. Tim Cook',\r\n    patientTitle: 'Mr',\r\n    patientAge: 29,\r\n    patientName: 'John Doe',\r\n    skypeID: 'kafkjnf34',\r\n    phoneNumber: '0773092511',\r\n    bookingStatus: BookingStatus.BOOKING_NOT_STARTED,\r\n    messageThread: [\r\n      {\r\n        sender: 'patient',\r\n        message: 'Hi doctor, I have a headache and a cough.'\r\n      },\r\n      {\r\n        sender: 'doctor',\r\n        message: 'Hi John, do you have any allergies?'\r\n      },\r\n      {\r\n        sender: 'patient',\r\n        message: 'I\\'m allergic to panadol'\r\n      },\r\n      {\r\n        sender: 'doctor',\r\n        message: 'Thanks.'\r\n      },\r\n      {\r\n        sender: 'patient',\r\n        message: 'THANK YOU DOC!.'\r\n      },\r\n      {\r\n        sender: 'patient',\r\n        message: 'Can you send me a prescription btw?'\r\n      },\r\n      {\r\n        sender: 'doctor',\r\n        message: 'Sure. I will send you.'\r\n      },\r\n      {\r\n        sender: 'patient',\r\n        message: 'Awesome. Thanks'\r\n      }\r\n    ],\r\n    bookingPrice: 'Rs. 2000.00',\r\n    doctorCharge: 'Rs. 1800.00'\r\n  };\r\n\r\n  items = [\r\n      'Augmentine 625mg bd - 5 days',\r\n      'Omeprazole 20mg bd - 5 days',\r\n      'Fexofenadine 180mg 1 night - 5 days'\r\n  ];\r\n\r\n  preview = false;\r\n  prescriptionList: any [] = [\r\n      '',\r\n      ''\r\n  ];\r\n\r\n  constructor(\r\n      private router: Router\r\n  ) { }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n  copyToClipBoard() {\r\n    const copyText = document.getElementById('skypeId');\r\n    // @ts-ignore\r\n    copyText.select();\r\n    document.execCommand('copy');\r\n    // @ts-ignore\r\n    alert('Copied the text: ' + copyText.value);\r\n  }\r\n\r\n    previewToggle($event: string) {\r\n        if ($event === 'preview') {\r\n          this.preview = true;\r\n        } else {\r\n          this.preview = false;\r\n        }\r\n    }\r\n  public SavePDF(): void {\r\n    // var pdf = new jsPDF('p','pt','a4');\r\n    // pdf.html2pdf(document.getElementById('pdfTable'), function() {\r\n    //   pdf.save('pdfTable.pdf');\r\n    // });\r\n  }\r\n\r\n  goToAppointmentList(b: boolean) {\r\n      this.router.navigate(['appointment/prescriptionList']).then(r => {\r\n      });\r\n    }\r\n}\r\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NvbXBvbmVudHMvcHJvZmVzc2lvbmFsLWNhcmQvcHJvZmVzc2lvbmFsLWNhcmQuY29tcG9uZW50LmNzcyJ9 */\"","import {Component, EventEmitter, Input, OnInit, Output} from '@angular/core';\r\nimport {currencyCodes} from '../../utils/Constants';\r\n\r\n@Component({\r\n  selector: 'app-professional-card',\r\n  templateUrl: './professional-card.component.html',\r\n  styleUrls: ['./professional-card.component.css']\r\n})\r\nexport class ProfessionalCardComponent implements OnInit {\r\n  @Input() professional: any;\r\n  @Output() selectProfessional: EventEmitter<string> = new EventEmitter<string>();\r\n\r\n  overTheDoctorCard = null;\r\n  currency = currencyCodes.LKR;\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit() {}\r\n\r\n  onMouseEnter($event: number) {\r\n    this.overTheDoctorCard = $event;\r\n  }\r\n\r\n  onMouseLeave() {\r\n    this.overTheDoctorCard = null;\r\n  }\r\n\r\n  isOverTheDoctorCard($event: number) {\r\n    return $event === this.overTheDoctorCard;\r\n  }\r\n\r\n  selectProfessional_($event: string) {\r\n    this.selectProfessional.emit($event);\r\n  }\r\n}\r\n","export default \".mat-card-style {\\r\\n    margin-left: auto;\\r\\n    margin-right: auto;\\r\\n    margin-top: 30px;\\r\\n    min-width: 320px;\\r\\n    max-width: 320px;\\r\\n\\r\\n}\\r\\n\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvY29tcG9uZW50cy9zZWFyY2gtcHJvZmVzc2lvbmFscy1tYWluL3NlYXJjaC1wcm9mZXNzaW9uYWxzLW1haW4uY29tcG9uZW50LmNzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtJQUNJLGlCQUFpQjtJQUNqQixrQkFBa0I7SUFDbEIsZ0JBQWdCO0lBQ2hCLGdCQUFnQjtJQUNoQixnQkFBZ0I7O0FBRXBCIiwiZmlsZSI6InNyYy9hcHAvY29tcG9uZW50cy9zZWFyY2gtcHJvZmVzc2lvbmFscy1tYWluL3NlYXJjaC1wcm9mZXNzaW9uYWxzLW1haW4uY29tcG9uZW50LmNzcyIsInNvdXJjZXNDb250ZW50IjpbIi5tYXQtY2FyZC1zdHlsZSB7XHJcbiAgICBtYXJnaW4tbGVmdDogYXV0bztcclxuICAgIG1hcmdpbi1yaWdodDogYXV0bztcclxuICAgIG1hcmdpbi10b3A6IDMwcHg7XHJcbiAgICBtaW4td2lkdGg6IDMyMHB4O1xyXG4gICAgbWF4LXdpZHRoOiAzMjBweDtcclxuXHJcbn1cclxuIl19 */\"","import { Component, OnInit } from '@angular/core';\r\nimport {Router} from '@angular/router';\r\nimport {specializations, Constants, DoctorType} from '../../utils/Constants';\r\nimport {DataHandlerService} from '../../services/data-handler.service';\r\nimport {UserData} from '../../models/user-data';\r\nimport {HttpHeaders, HttpParams} from '@angular/common/http';\r\nimport {DataKey, DataStoreService} from '../../services/data-store.service';\r\nimport {DataLoaderService} from '../../services/data-loader.service';\r\nimport {PageEvent} from '@angular/material';\r\n\r\n@Component({\r\n  selector: 'app-search-professionals-main',\r\n  templateUrl: './search-professionals-main.component.html',\r\n  styleUrls: ['./search-professionals-main.component.css']\r\n})\r\nexport class SearchProfessionalsMainComponent implements OnInit {\r\n\r\n  searchString = null;\r\n  professionalList = null;\r\n  RESULTS_PER_PAGE = 10;\r\n  PAGINATION_START = 0;\r\n  PAGINATION_END = this.RESULTS_PER_PAGE;\r\n  selectedCategory: any = null;\r\n  selectedSpecialization: any = null;\r\n\r\n  categories = [\r\n    {\r\n      category: DoctorType.CON\r\n    },\r\n    {\r\n      category: DoctorType.GEN\r\n    },\r\n    {\r\n      category: DoctorType.COUN\r\n    },\r\n    {\r\n      category: DoctorType.OTH\r\n    }\r\n  ];\r\n\r\n  specializations = specializations;\r\n\r\n  constructor(\r\n      private router: Router,\r\n      private dataStore: DataStoreService,\r\n      private dataLoaderService: DataLoaderService,\r\n      private dataHandlerService: DataHandlerService\r\n  ) { }\r\n\r\n  ngOnInit() {\r\n    this.InitialSearch();\r\n  }\r\n\r\n  search(searchString: string, selectedCategory: string, selectedSpecialization: string) {\r\n    this.PAGINATION_START = 0;\r\n    this.PAGINATION_END = this.RESULTS_PER_PAGE;\r\n    if (\r\n        !this.searchString &&\r\n        !this.selectedCategory &&\r\n        !this.selectedSpecialization\r\n    ) {\r\n      this.InitialSearch();\r\n    } else {\r\n      // General Practitioners don't have a specialization\r\n      if (this.selectedCategory === DoctorType.GEN) {\r\n        this.selectedSpecialization = null;\r\n      }\r\n\r\n      // converting professionalType to a database readable format\r\n      if (this.selectedCategory) {\r\n        this.selectedCategory = this.dataHandlerService.convertProfessionalTypeToDBFormat(\r\n            JSON.parse(JSON.stringify(this.selectedCategory)));\r\n      }\r\n\r\n      // making 'Any' option null\r\n      if (this.selectedSpecialization === 'Any') {\r\n        this.selectedSpecialization = null;\r\n      }\r\n\r\n      // create url and send request\r\n      const url = Constants.BASE_URL + Constants.PROFESSIONAL_SEARCH;\r\n      let httpParams = new HttpParams();\r\n      if (this.searchString) {\r\n        httpParams = httpParams.append('name', this.searchString);\r\n      }\r\n      if (this.selectedCategory) {\r\n        httpParams = httpParams.append('professionalType', this.selectedCategory);\r\n      }\r\n      if (this.selectedSpecialization && this.selectedSpecialization !== 'Any') {\r\n        httpParams = httpParams.append('specialization', this.selectedSpecialization);\r\n      }\r\n      this.dataLoaderService.get<UserData>(url, httpParams, new HttpHeaders(), DataKey.createdUser)\r\n          .then((data: any) => {\r\n            if (data && data.status && data.status.code === 1) {\r\n              this.resetVariables();\r\n              this.professionalList = data.data[0];\r\n            } else if (data && data.status && data.status.code === -1) {\r\n              this.resetVariables();\r\n            }\r\n          });\r\n    }\r\n  }\r\n\r\n  private resetVariables() {\r\n    this.professionalList = [];\r\n    // this.searchString = null;\r\n    this.selectedCategory = null;\r\n    this.selectedSpecialization = null;\r\n  }\r\n\r\n  selectProfessional($event: string) {\r\n    this.PAGINATION_START = 0;\r\n    this.PAGINATION_END = this.RESULTS_PER_PAGE;\r\n    this.loadProfessionalData($event);\r\n    this.router.navigate(['appointmentTime']).then(r => {\r\n    });\r\n  }\r\n\r\n  goToPage($event: PageEvent) {\r\n    this.PAGINATION_START = $event.pageIndex * $event.pageSize;\r\n    this.PAGINATION_END = this.PAGINATION_START + $event.pageSize;\r\n  }\r\n\r\n  private loadProfessionalData($event: string) {\r\n    // create url and send request\r\n    const url = Constants.BASE_URL + Constants.AVAILABLE_APPOINTMENTS_FOR_A_PROFESSIONAL + $event;\r\n    this.dataLoaderService.get<UserData>(url, new HttpParams(), new HttpHeaders(), DataKey.createdUser)\r\n        .then((data: any) => {\r\n          if (data && data.status && data.status.code === 1) {\r\n            this.dataStore.set(DataKey.availableAppointmentsForProfessional, data.data[0]);\r\n          } else if (data && data.status && data.status.code === -1) {\r\n            this.dataStore.set(DataKey.availableAppointmentsForProfessional, null);\r\n          }\r\n        });\r\n  }\r\n\r\n  private InitialSearch() {\r\n    // todo: uncomment\r\n    // this.search(null, null, null);\r\n    this.professionalList = [\r\n      {\r\n        id: 1,\r\n        title: 'Dr.',\r\n        firstName: 'Dummy',\r\n        lastName: 'One',\r\n        professionalType: DoctorType.CON,\r\n        qualifications: 'MD [NIZHNY NOVGOROD STATE MED ACA] RUSSIA(2008)',\r\n        specialityA: 'Neurologist',\r\n        specialityB: 'Pediatrician',\r\n        specialityC: '',\r\n        priceForAppointment: '2000',\r\n        isSkypePreferred: true,\r\n        isWhatsAppPreferred: true\r\n      },\r\n      {\r\n        id: 2,\r\n        title: 'Dr.',\r\n        firstName: 'Dummy',\r\n        lastName: 'Two',\r\n        professionalType: DoctorType.GEN,\r\n        qualifications: 'MBBS [COLOMBO](1998)',\r\n        specialityA: 'Pathologist',\r\n        specialityB: '',\r\n        specialityC: '',\r\n        priceForAppointment: '1500',\r\n        isSkypePreferred: false,\r\n        isWhatsAppPreferred: true\r\n      },\r\n      {\r\n        id: 3,\r\n        title: 'Dr.',\r\n        firstName: 'Dummy',\r\n        lastName: 'Three',\r\n        professionalType: DoctorType.OTH,\r\n        qualifications: 'MBBS [RUHUNA](2000)',\r\n        specialityA: 'Clinical Nutritionist',\r\n        specialityB: '',\r\n        specialityC: '',\r\n        priceForAppointment: '2500',\r\n        isSkypePreferred: true,\r\n        isWhatsAppPreferred: false\r\n      }\r\n    ];\r\n  }\r\n}\r\n","export default \".mat-card-style {\\r\\n    margin-left: auto;\\r\\n    margin-right: auto;\\r\\n    margin-top: 30px;\\r\\n    min-width: 320px;\\r\\n    max-width: 320px;\\r\\n}\\r\\n\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvY29tcG9uZW50cy9zZWFyY2gtcHJvZmVzc2lvbmFscy9zZWFyY2gtcHJvZmVzc2lvbmFscy5jb21wb25lbnQuY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0lBQ0ksaUJBQWlCO0lBQ2pCLGtCQUFrQjtJQUNsQixnQkFBZ0I7SUFDaEIsZ0JBQWdCO0lBQ2hCLGdCQUFnQjtBQUNwQiIsImZpbGUiOiJzcmMvYXBwL2NvbXBvbmVudHMvc2VhcmNoLXByb2Zlc3Npb25hbHMvc2VhcmNoLXByb2Zlc3Npb25hbHMuY29tcG9uZW50LmNzcyIsInNvdXJjZXNDb250ZW50IjpbIi5tYXQtY2FyZC1zdHlsZSB7XHJcbiAgICBtYXJnaW4tbGVmdDogYXV0bztcclxuICAgIG1hcmdpbi1yaWdodDogYXV0bztcclxuICAgIG1hcmdpbi10b3A6IDMwcHg7XHJcbiAgICBtaW4td2lkdGg6IDMyMHB4O1xyXG4gICAgbWF4LXdpZHRoOiAzMjBweDtcclxufVxyXG4iXX0= */\"","import { Component, OnInit } from '@angular/core';\r\nimport {DoctorType} from '../../utils/Constants';\r\n\r\n@Component({\r\n  selector: 'app-search-professionals',\r\n  templateUrl: './search-professionals.component.html',\r\n  styleUrls: ['./search-professionals.component.css']\r\n})\r\nexport class SearchProfessionalsComponent implements OnInit {\r\n\r\n  professionalListType = DoctorType.CON;\r\n  selectedProfessionalType = 'option2';\r\n  searchString = null;\r\n\r\n  professionalList = [\r\n    {\r\n      id: 1,\r\n      name: 'Dr. Nuwan Chinthaka',\r\n      professionalType: DoctorType.CON,\r\n      bio: 'MD [NIZHNY NOVGOROD STATE MED ACA] RUSSIA(2008)',\r\n      specialities: [\r\n        'Consultant Neurologist',\r\n        'Consultant Pediatrician'\r\n      ],\r\n      consultationPrice: 'Rs. 2000.00',\r\n      isSkypePreferred: true,\r\n      isWhatsAppPreferred: true\r\n    },\r\n    {\r\n      id: 2,\r\n      name: 'Dr. Punya Anupama',\r\n      professionalType: DoctorType.CON,\r\n      bio: 'MBBS [COLOMBO](1998)',\r\n      specialities: [\r\n        'Consultant Pathologist'\r\n      ],\r\n      consultationPrice: 'Rs. 1500.00',\r\n      isSkypePreferred: true,\r\n      isWhatsAppPreferred: false\r\n    },\r\n    {\r\n      id: 3,\r\n      name: 'Dr. Eric Deepal',\r\n      professionalType: DoctorType.CON,\r\n      bio: 'MBBS [RUHUNA](2000)',\r\n      specialities: [\r\n        'Consultant Clinical Nutritionist'\r\n      ],\r\n      consultationPrice: 'Rs. 2500.00',\r\n      isSkypePreferred: false,\r\n      isWhatsAppPreferred: true\r\n    }\r\n  ];\r\n\r\n  specializations = [\r\n\r\n  ];\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n  selectDoc($event: number) {\r\n    console.log($event);\r\n  }\r\n\r\n  search() {\r\n      console.log('jhbrch');\r\n  }\r\n}\r\n\r\n","export default \".mat-tab-group {\\r\\n    margin-bottom: 48px;\\r\\n}\\r\\n.mat-card-style {\\r\\n    margin-left: auto;\\r\\n    margin-right: auto;\\r\\n    margin-top: 30px;\\r\\n    min-width: 320px;\\r\\n\\r\\n}\\r\\n\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvY29tcG9uZW50cy9zaWdudXAvc2lnbi11cC5jb21wb25lbnQuY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0lBQ0ksbUJBQW1CO0FBQ3ZCO0FBQ0E7SUFDSSxpQkFBaUI7SUFDakIsa0JBQWtCO0lBQ2xCLGdCQUFnQjtJQUNoQixnQkFBZ0I7O0FBRXBCIiwiZmlsZSI6InNyYy9hcHAvY29tcG9uZW50cy9zaWdudXAvc2lnbi11cC5jb21wb25lbnQuY3NzIiwic291cmNlc0NvbnRlbnQiOlsiLm1hdC10YWItZ3JvdXAge1xyXG4gICAgbWFyZ2luLWJvdHRvbTogNDhweDtcclxufVxyXG4ubWF0LWNhcmQtc3R5bGUge1xyXG4gICAgbWFyZ2luLWxlZnQ6IGF1dG87XHJcbiAgICBtYXJnaW4tcmlnaHQ6IGF1dG87XHJcbiAgICBtYXJnaW4tdG9wOiAzMHB4O1xyXG4gICAgbWluLXdpZHRoOiAzMjBweDtcclxuXHJcbn1cclxuIl19 */\"","import {Component, EventEmitter, Input, OnInit, Output} from '@angular/core';\r\nimport './sign-up.component.css';\r\nimport * as CryptoJS from 'crypto-js';\r\nimport {UserData} from '../../models/user-data';\r\nimport {Constants, DoctorTitles, MODAL_TYPES} from '../../utils/Constants';\r\nimport {DataLoaderService} from '../../services/data-loader.service';\r\nimport {AuthResponse} from '../../models/auth-response';\r\nimport {RequestOptions} from '../../models/request-options';\r\nimport {DataKey, DataStoreService, SessionStorageKeys} from '../../services/data-store.service';\r\nimport {HttpHeaders, HttpParams} from '@angular/common/http';\r\nimport {Router} from '@angular/router';\r\nimport {MatDialogConfig, MatRadioChange} from '@angular/material';\r\nimport {ModalComponent} from '../modal/modal.component';\r\nimport {MatDialog} from '@angular/material/dialog';\r\n\r\n@Component({\r\n  selector: 'app-signup',\r\n  templateUrl: './sign-up.component.html',\r\n  styleUrls: ['./sign-up.component.css']\r\n})\r\nexport class SignUpComponent implements OnInit {\r\n  @Input() flow: number;\r\n  @Output() emitFlowChange = new EventEmitter();\r\n\r\n  isDoctor = false;\r\n  encryptionKey = 'ezmed';\r\n  hide = true;\r\n  // logInType = 'doctor';\r\n  logInType = 'patient';\r\n  firstName: string;\r\n  lastName: string;\r\n  email: string;\r\n  isSignUp = true;\r\n  title: any;\r\n  birthday: any;\r\n  contactNumber: any;\r\n  whatsAppNumber: any;\r\n  pass: any;\r\n  conPass: any;\r\n  genders = [\r\n    {value: 'male', viewValue: 'Male'},\r\n    {value: 'female', viewValue: 'Female'}\r\n  ];\r\n  isMale = true;\r\n  knownAllergies: any;\r\n  isIncompleteErrorAvailable = false;\r\n  signUpResultObject = {\r\n    isSignUp: undefined,\r\n    userType: undefined\r\n  };\r\n  titles = [\r\n    {value: DoctorTitles.DR},\r\n    {value: DoctorTitles.MR},\r\n    {value: DoctorTitles.MRS},\r\n    {value: DoctorTitles.MS},\r\n    {value: DoctorTitles.PROF},\r\n  ];\r\n\r\n  constructor(\r\n      public dialog: MatDialog,\r\n      private router: Router,\r\n      private dataLoaderService: DataLoaderService,\r\n      private dataStore: DataStoreService\r\n  ) { }\r\n\r\n  ngOnInit() {\r\n    // this.resetFields();\r\n\r\n    // if (this.dataStore.get(DataKey.signUpResultObject).getValue()) {\r\n    //   this.signUpResultObject = this.dataStore.get(DataKey.signUpResultObject).getValue();\r\n    //   this.logInType = this.signUpResultObject.userType;\r\n    // }\r\n\r\n    // console.log(this.encryptPassword('milinda'));\r\n  }\r\n\r\n  registerNewUser(user: UserData) {\r\n    user.password = this.encryptPassword(user.password);\r\n    // create url and send request\r\n    const url = Constants.BASE_URL + Constants.CREATE_NEW_USER;\r\n    this.dataLoaderService.post<UserData>(url, new HttpParams(), new HttpHeaders(), DataKey.createdUser, user )\r\n        .then((data: any) => {\r\n          if (data && data.status && data.status.code === 1 && data.data && data.data.length > 0) {\r\n            sessionStorage.setItem(SessionStorageKeys.loggedInUser, JSON.stringify(data.data[0]));\r\n            if (data.data[0].doctor) {\r\n              // location.reload();\r\n              sessionStorage.setItem(SessionStorageKeys.userId, null);\r\n              // todo: uncomment\r\n              // sessionStorage.setItem(SessionStorageKeys.userName, JSON.stringify(data.data[0].doctorData.userName));\r\n              sessionStorage.setItem(SessionStorageKeys.userName, JSON.stringify(data.data[0].userName));\r\n              this.router.navigate(['doctor/dashboard']).then(r => {\r\n                location.reload();\r\n              });\r\n            } else if (!data.data[0].doctor) {\r\n              // location.reload();\r\n              sessionStorage.setItem(SessionStorageKeys.userId, null);\r\n              // todo: uncomment\r\n              // sessionStorage.setItem(SessionStorageKeys.userName, JSON.stringify(data.data[0].patientData.userName));\r\n              sessionStorage.setItem(SessionStorageKeys.userName, JSON.stringify(data.data[0].userName));\r\n              this.router.navigate(['user/dashboard']).then(r => {\r\n                location.reload();\r\n              });\r\n            }\r\n          } else if (data && data.status && data.status.code === -1) {\r\n            alert('Something went wrong. Please contact support !!');\r\n          }\r\n        });\r\n  }\r\n\r\n  encryptPassword(password: string): string {\r\n    password =  CryptoJS.AES.encrypt(password, this.encryptionKey).toString();\r\n    // console.log(CryptoJS.AES.decrypt(password, this.encryptionKey).toString(CryptoJS.enc.Utf8));\r\n    return password;\r\n  }\r\n\r\n  validateInput(): boolean {\r\n    return false;\r\n  }\r\n\r\n  SignUp() {\r\n    if ( this.validateInput() ) {\r\n      this.isIncompleteErrorAvailable = true;\r\n    } else {\r\n      this.isIncompleteErrorAvailable = false;\r\n\r\n      const userObj = new UserData();\r\n      userObj.userName = this.email;\r\n      userObj.password = this.pass;\r\n      userObj.firstName = this.firstName;\r\n      userObj.lastName = this.lastName;\r\n      userObj.title = this.title;\r\n      userObj.isMale = this.isMale;\r\n      userObj.birthday = this.birthday;\r\n      userObj.contactNumber = this.contactNumber;\r\n      userObj.whatsAppNumber = this.whatsAppNumber;\r\n      userObj.doctor = this.isDoctor;\r\n      userObj.userAllergies = this.knownAllergies;\r\n\r\n      this.registerNewUser(userObj);\r\n    }\r\n  }\r\n\r\n  setGender(value: any) {\r\n    switch (value) {\r\n      case 'female': {\r\n        this.isMale = false;\r\n        break;\r\n      }\r\n      case 'male': {\r\n        this.isMale = true;\r\n        break;\r\n      }\r\n    }\r\n  }\r\n\r\n  setIsDoctor($event: MatRadioChange) {\r\n    this.isDoctor = JSON.parse($event.value);\r\n    this.resetFields();\r\n  }\r\n\r\n  private resetFields() {\r\n    this.birthday = null;\r\n    this.pass = null;\r\n    this.conPass = null;\r\n    this.knownAllergies = '';\r\n    this.isIncompleteErrorAvailable = false;\r\n  }\r\n\r\n  logIn() {\r\n    this.dataLoaderService.activateLoader(true, MODAL_TYPES.LOADING, false);\r\n    setTimeout(() => { this.dataLoaderService.activateLoader(false, MODAL_TYPES.LOADING); }, 1000);\r\n    // todo: location.reload(); to update the header\r\n  }\r\n}\r\n","export default \".mat-card-style {\\r\\n    margin-left: auto;\\r\\n    margin-right: auto;\\r\\n    margin-top: 30px;\\r\\n    min-width: 320px;\\r\\n    max-width: 320px;\\r\\n}\\r\\n\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvY29tcG9uZW50cy90cmFuc2l0aW9uLXBhZ2UvdHJhbnNpdGlvbi1wYWdlLmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7SUFDSSxpQkFBaUI7SUFDakIsa0JBQWtCO0lBQ2xCLGdCQUFnQjtJQUNoQixnQkFBZ0I7SUFDaEIsZ0JBQWdCO0FBQ3BCIiwiZmlsZSI6InNyYy9hcHAvY29tcG9uZW50cy90cmFuc2l0aW9uLXBhZ2UvdHJhbnNpdGlvbi1wYWdlLmNvbXBvbmVudC5jc3MiLCJzb3VyY2VzQ29udGVudCI6WyIubWF0LWNhcmQtc3R5bGUge1xyXG4gICAgbWFyZ2luLWxlZnQ6IGF1dG87XHJcbiAgICBtYXJnaW4tcmlnaHQ6IGF1dG87XHJcbiAgICBtYXJnaW4tdG9wOiAzMHB4O1xyXG4gICAgbWluLXdpZHRoOiAzMjBweDtcclxuICAgIG1heC13aWR0aDogMzIwcHg7XHJcbn1cclxuIl19 */\"","import {Component, EventEmitter, Input, OnInit, Output} from '@angular/core';\n\n@Component({\n  selector: 'app-transition-page',\n  templateUrl: './transition-page.component.html',\n  styleUrls: ['./transition-page.component.css']\n})\nexport class TransitionPageComponent implements OnInit {\n  @Input() modalType;\n  @Input() dismissible = true;\n  @Output() clickEmitter = new EventEmitter<string>();\n\n  constructor() { }\n\n  ngOnInit() {}\n\n  logIn() {\n    // this.router.navigate(['signup']).then(r => {\n    // });\n    this.clickEmitter.emit('logIn');\n  }\n\n  dismiss() {\n    this.clickEmitter.emit('back');\n  }\n}\n","export class AuthModel {\r\n    username: string;\r\n    password: string;\r\n}\r\n","import {HttpHeaders, HttpParams} from '@angular/common/http';\r\n\r\nexport class RequestOptions { \r\n    headers?: HttpHeaders;\r\n    params?: HttpParams;\r\n}\r\n","export class UserData {\r\n    userName: string;\r\n    password: string;\r\n    firstName: string;\r\n    lastName: string;\r\n    title: string;\r\n    isMale: boolean;\r\n    birthday: any;\r\n    contactNumber: string;\r\n    whatsAppNumber: string;\r\n    doctor: boolean;\r\n    userAllergies: string;\r\n}\r\n\r\nexport class WorkingTimePeriod {\r\n    startTime: string;\r\n    endTime: string;\r\n    isActive?: boolean;\r\n    startTimeSelected?: { hour: number; minute: number };\r\n    endTimeSelected?: { hour: number; minute: number };\r\n}\r\n\r\nexport class FixedDoctorDate {\r\n    day: number;\r\n    workingTimePeriods: WorkingTimePeriod [];\r\n    title?: string;\r\n}\r\n\r\nexport class DoctorScheduleData {\r\n    averageTimeForAppointment: number;\r\n    fixedDoctorDates: FixedDoctorDate [];\r\n}\r\n\r\nexport class DoctorSpecificData {\r\n    userName?: string;\r\n    title: string;\r\n    firstName: string;\r\n    lastName: string;\r\n    contactNumber: string;\r\n    whatsAppNumber: string;\r\n    regNo: string;\r\n    priceForAppointment: string;\r\n    priceCurrency: string;\r\n    qualifications: string;\r\n    professionalType?: string;\r\n    specialityA?: string;\r\n    specialityB?: string;\r\n    specialityC?: string;\r\n    availableForAppointment?: string;\r\n}\r\n\r\n","import { Injectable } from '@angular/core';\r\nimport {DoctorType} from '../utils/Constants';\r\nimport {startCase, camelCase} from 'lodash';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class DataHandlerService {\r\n\r\n  constructor() { }\r\n\r\n  convertTimeToHoursAndMinutes(time: string) {\r\n    const timeObj = {\r\n      hour: parseInt(time.split(':')[0], 10),\r\n      minute: parseInt(time.split(':')[1], 10)\r\n    };\r\n    return timeObj;\r\n  }\r\n\r\n  convertHoursAndMinutesToTime(time: { hour: number; minute: number }) {\r\n    const timeString = time.hour.toString().padStart(2, '0') + ':' + time.minute.toString().padStart(2, '0') + ':00';\r\n    return timeString;\r\n  }\r\n\r\n  convertCamelCaseToSentence(str: string) {\r\n    return startCase(camelCase(str));\r\n  }\r\n\r\n  convertToCamelCase(str: string) {\r\n    return camelCase(str);\r\n  }\r\n\r\n  convertProfessionalTypeToDBFormat(professionalType: string) {\r\n    switch (professionalType) {\r\n      case DoctorType.CON:\r\n        professionalType = 'CON';\r\n        break;\r\n      case DoctorType.COUN:\r\n        professionalType = 'COUN';\r\n        break;\r\n      case DoctorType.GEN:\r\n        professionalType = 'GEN';\r\n        break;\r\n      case DoctorType.OTH:\r\n        professionalType = 'OTH';\r\n        break;\r\n      default:\r\n        break;\r\n    }\r\n    return professionalType;\r\n  }\r\n\r\n  convertProfessionalTypeFromDBFormat(professionalType: string) {\r\n    switch (professionalType) {\r\n      case 'CON':\r\n        professionalType = DoctorType.CON;\r\n        break;\r\n      case 'COUN':\r\n        professionalType = DoctorType.COUN;\r\n        break;\r\n      case 'GEN':\r\n        professionalType = DoctorType.GEN;\r\n        break;\r\n      case 'OTH':\r\n        professionalType = DoctorType.OTH;\r\n        break;\r\n      default:\r\n        break;\r\n    }\r\n    return professionalType;\r\n  }\r\n\r\n}\r\n","import {Injectable} from '@angular/core';\r\nimport {HttpClient, HttpHeaders, HttpParams} from '@angular/common/http';\r\nimport {RequestOptions} from '../models/request-options';\r\nimport {DataKey, DataStoreService} from './data-store.service';\r\nimport {BehaviorSubject} from 'rxjs';\r\nimport {Constants, MODAL_TYPES} from '../utils/Constants';\r\nimport {take} from 'rxjs/operators';\r\nimport {MatDialogConfig} from '@angular/material';\r\nimport {ModalComponent} from '../components/modal/modal.component';\r\nimport {MatDialog} from '@angular/material/dialog';\r\n\r\n@Injectable({\r\n    providedIn: 'root'\r\n})\r\nexport class DataLoaderService {\r\n\r\n    constructor(\r\n        public dialog: MatDialog,\r\n        private http: HttpClient,\r\n        private dataStore: DataStoreService\r\n    ) {}\r\n\r\n    // make a GET request\r\n    public get<T>(url: string, param: HttpParams, headers: HttpHeaders, dataKey: DataKey) {\r\n        const options: RequestOptions = this.makeOptions(param, headers);\r\n        this.dataStore.set(DataKey.error, {});\r\n\r\n        if (this.dataStore.has(dataKey, true)) {\r\n            this.dataStore.set(dataKey, new BehaviorSubject(null));\r\n        }\r\n\r\n        return new Promise(resolve => {\r\n            this.http.get<T>(url, {\r\n                headers: options.headers,\r\n                params: options.params\r\n            }).subscribe(\r\n                // tslint:disable-next-line:no-shadowed-variable\r\n                ( data) => {\r\n                    resolve(data);\r\n                    // @ts-ignore\r\n                    // this.dataStore.set(dataKey, data.data, true);\r\n                });\r\n        });\r\n    }\r\n\r\n    // make a POST request\r\n    public post<T>(url: string, param: HttpParams, headers: HttpHeaders, dataKey: DataKey, data: any) {\r\n        const options: RequestOptions = this.makeOptions(param, headers);\r\n        this.dataStore.set(DataKey.error, {});\r\n\r\n        if (this.dataStore.has(dataKey, true)) {\r\n            this.dataStore.set(dataKey, new BehaviorSubject(null));\r\n        }\r\n\r\n        return new Promise(resolve => {\r\n            this.http.post<T>(url, data, {\r\n                headers: options.headers,\r\n                params: options.params\r\n            }).subscribe(\r\n                // tslint:disable-next-line:no-shadowed-variable\r\n                ( data) => {\r\n                    resolve(data);\r\n                    // @ts-ignore\r\n                    this.dataStore.set(dataKey, data.data, true);\r\n                });\r\n        });\r\n    }\r\n\r\n    // make a PUT request\r\n    public put<T>(url: string, param: HttpParams, headers: HttpHeaders, dataKey: DataKey, data: any) {\r\n        const options: RequestOptions = this.makeOptions(param, headers);\r\n        this.dataStore.set(DataKey.error, {});\r\n\r\n        if (this.dataStore.has(dataKey, true)) {\r\n            this.dataStore.set(dataKey, new BehaviorSubject(null));\r\n        }\r\n        return new Promise(resolve => {\r\n            this.http.put<T>(url, data, {\r\n                headers: options.headers,\r\n                params: options.params\r\n            }).subscribe(\r\n                // tslint:disable-next-line:no-shadowed-variable\r\n                ( data) => {\r\n                    resolve(data);\r\n                    // @ts-ignore\r\n                    this.dataStore.set(dataKey, data.data, true);\r\n                });\r\n        });\r\n        // this.http.put<T>(url, data, {\r\n        //     headers: options.headers,\r\n        //     params: options.params\r\n        // }).subscribe(\r\n        //     result => {\r\n        //         this.dataStore.set(dataKey, result, true);\r\n        //     },\r\n        //     error => {\r\n        //         this.dataStore.set(DataKey.error, error, true);\r\n        //     }\r\n        // );\r\n    }\r\n\r\n    // make a DELETE request\r\n    public delete<T>(url: string, param: HttpParams, headers: HttpHeaders, dataKey: DataKey) {\r\n        const options: RequestOptions = this.makeOptions(param, headers);\r\n        this.dataStore.set(DataKey.error, {});\r\n\r\n        if (this.dataStore.has(dataKey, true)) {\r\n            this.dataStore.set(dataKey, new BehaviorSubject(null));\r\n        }\r\n\r\n        this.http.delete<T>(url, {\r\n            headers: options.headers,\r\n            params: options.params\r\n        }).subscribe(\r\n            result => {\r\n                this.dataStore.set(dataKey, result, true);\r\n            },\r\n            error => {\r\n                this.dataStore.set(DataKey.error, error, true);\r\n            }\r\n        );\r\n    }\r\n\r\n    // make request params and headers for request\r\n    private makeOptions(param: HttpParams, headers: HttpHeaders): RequestOptions {\r\n        const options: RequestOptions = new RequestOptions();\r\n        options.params = param;\r\n        options.headers = headers;\r\n        options.headers = options.headers.append('Content-Type', 'application/json');\r\n\r\n        // get auth key for authorization\r\n        if (localStorage.getItem(Constants.EZMED_AUTH) != null) {\r\n            let authKey = 'Bearer ';\r\n            authKey = authKey + localStorage.getItem(Constants.EZMED_AUTH);\r\n            options.headers = options.headers.append('Authorization', authKey);\r\n        }\r\n        return options;\r\n    }\r\n\r\n    // user login and get JWT token\r\n    public login<T>(url: string, options: RequestOptions, data: any, dataKey: DataKey) {\r\n        this.dataStore.set(DataKey.error, {});\r\n\r\n        if (this.dataStore.has(dataKey, true)) {\r\n            this.dataStore.set(dataKey, new BehaviorSubject(null));\r\n        }\r\n\r\n        this.http.post<T>(url, data, {\r\n            headers: options.headers,\r\n            params: options.params\r\n        }).subscribe(\r\n            result => {\r\n                this.dataStore.set(DataKey.loggedUser, data, true);\r\n                // @ts-ignore\r\n                localStorage.setItem(Constants.EZMED_AUTH, result.jwt);\r\n            },\r\n            error => {\r\n                this.dataStore.set(DataKey.error, error, true);\r\n            });\r\n    }\r\n\r\n    // logout from the app\r\n    public logOut() {\r\n        localStorage.removeItem(Constants.EZMED_AUTH);\r\n    }\r\n\r\n    public activateLoader(activate: boolean, MODAL_TYPE: MODAL_TYPES, disableClose?: boolean) {\r\n        const dialogConfig = new MatDialogConfig();\r\n\r\n        dialogConfig.data = {\r\n            modalType: MODAL_TYPE\r\n        };\r\n        dialogConfig.disableClose = disableClose;\r\n        dialogConfig.width = '300px';\r\n\r\n        let dialogRef;\r\n        if (activate) {\r\n            dialogRef = this.dialog.open(ModalComponent, dialogConfig);\r\n            dialogRef.afterClosed().subscribe(result => {\r\n                // console.log('dialogRef.afterClosed().subscribe');\r\n            });\r\n        } else {\r\n            dialogRef = this.dialog.closeAll();\r\n        }\r\n    }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport {BehaviorSubject} from 'rxjs';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class DataStoreService {\r\n\r\n  private data: Map<string, any> = new Map();\r\n  private asyncData: Map<DataKey, BehaviorSubject<any>> = new Map();\r\n\r\n  constructor() {\r\n    for (const key in DataKey) {\r\n      if (parseInt(key, 10) >= 0) {\r\n        if (!this.asyncData.has(DataKey[DataKey[key]])) {\r\n          this.asyncData.set(DataKey[DataKey[key]], new BehaviorSubject(null));\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  public get(key: any, isAsync: boolean = true) {\r\n    if (isAsync) {\r\n      return this.asyncData.get(key);\r\n    } else {\r\n      return this.data.get(key);\r\n    }\r\n  }\r\n\r\n  public set(key: any, data: any, isAsync: boolean = true) { \r\n    if (isAsync) { \r\n      if (!this.asyncData.has(key)) { \r\n        this.asyncData.set(key, null); \r\n      } \r\n      this.asyncData.get(key).next(data); \r\n    } else {\r\n     this.data.set(key, data); \r\n    } \r\n  }\r\n\r\n  public has(key: any, isAsync: boolean = true) { \r\n    if (isAsync) { \r\n      return this.asyncData.has(key); \r\n    } else { \r\n      return this.data.has(key); \r\n    } \r\n  }\r\n}\r\n\r\nexport enum DataKey {\r\n  error,\r\n  authKey,\r\n  loggedUser,\r\n  loggedInUser,\r\n  createdUser,\r\n  uploadImage,\r\n  doctorScheduleData,\r\n  signUpResultObject,\r\n  availableAppointmentsForProfessional\r\n}\r\n\r\nexport enum SessionStorageKeys {\r\n  loggedInUser = 'loggedInUser',\r\n  userId = 'userId',\r\n  userName = 'userName'\r\n}\r\n","export enum Constants {\r\n    // endpoints\r\n    BASE_URL = 'http://localhost:8080',\r\n    AUTHENTICATION = 'test',\r\n    CREATE_NEW_USER = '/user/register',\r\n    UPLOAD_USER_IMAGE = '/user/upload/image',\r\n    PROFESSIONAL_SEARCH = '/doctor/doctorSearch/advanced/',\r\n    UPDATE_PROFESSIONAL_SPECIFIC_DATA = '/user/doctor/data/',\r\n    UPDATE_PROFESSIONAL_WORK_DATA = '/user/doctor/work-data/',\r\n    GET_USER_DATA = '/user/user-data/',\r\n    AVAILABLE_APPOINTMENTS_FOR_A_PROFESSIONAL = '/doctor/available-appointments/',\r\n    // UPDATE_PROFESSIONAL_WORK_DATA = '/user/test?username=dfg',\r\n\r\n    // modal types\r\n    MODAL_TYPE_SIGN_UP = 'SIGN_UP',\r\n    MODAL_TYPE_PROFILE = 'PROFILE',\r\n    EZMED_AUTH = 'EZMED_AUTH'\r\n}\r\n\r\nexport enum DoctorTitles {\r\n    DR = 'Dr',\r\n    MR = 'Mr',\r\n    MRS = 'Mrs',\r\n    MS = 'Ms',\r\n    PROF = 'Prof',\r\n}\r\n\r\nexport enum MODAL_TYPES {\r\n    LOADING = 'LOADING'\r\n}\r\n\r\nexport enum TRANSITION_PAGE_TYPE {\r\n    LOGIN_REDIRECT = 'LOGIN_REDIRECT'\r\n}\r\n\r\nexport enum currencyCodes {\r\n    LKR = 'LKR',\r\n    USD = 'USD',\r\n    GBP = 'GBP',\r\n    JPY = 'JPY',\r\n    EUR = 'EUR',\r\n}\r\n\r\nexport enum DoctorType {\r\n    CON = 'Consultant',\r\n    COUN = 'Counselor',\r\n    GEN = 'General Practitioner',\r\n    OTH = 'Other Medical Practitioner'\r\n}\r\n\r\nexport const specializations = [\r\n    'Any',\r\n    'Immunologist',\r\n    'Cardiologist',\r\n    'Pulmonologist',\r\n    'Radiologist',\r\n    'Dermatologist',\r\n    'ClinicalNutritionist',\r\n    'Endocrinologist'\r\n    ];\r\n","// This file can be replaced during build by using the `fileReplacements` array.\r\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\r\n// The list of file replacements can be found in `angular.json`.\r\n\r\nexport const environment = {\r\n  production: false\r\n};\r\n\r\n/*\r\n * For easier debugging in development mode, you can import the following file\r\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\r\n *\r\n * This import should be commented out in production mode because it will have a negative impact\r\n * on performance if an error is thrown.\r\n */\r\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\r\n","import 'hammerjs';\r\nimport { enableProdMode } from '@angular/core';\r\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\n\r\nimport { AppModule } from './app/app.module';\r\nimport { environment } from './environments/environment';\r\n\r\nif (environment.production) {\r\n  enableProdMode();\r\n}\r\n\r\nplatformBrowserDynamic().bootstrapModule(AppModule)\r\n  .catch(err => console.error(err));\r\n"],"sourceRoot":"webpack:///"}