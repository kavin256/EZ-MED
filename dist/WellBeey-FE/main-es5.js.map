{"version":3,"sources":["$_lazy_route_resource lazy namespace object","src/app/app.component.html","src/app/components/booking-enter-time/booking-enter-time.component.html","src/app/components/booking-enter/booking-enter.component.html","src/app/components/chat-section/chat-section.component.html","src/app/components/common-body/common-body.component.html","src/app/components/contact-page/contact-page.component.html","src/app/components/doctor-finance/doctor-finance.component.html","src/app/components/doctor-profile/doctor-profile.component.html","src/app/components/doctor-schedule/doctor-schedule.component.html","src/app/components/doctor-side-booking-list/doctor-side-booking-list.component.html","src/app/components/doctor-side-booking/doctor-side-booking.component.html","src/app/components/faqs/faqs.component.html","src/app/components/footer/footer.component.html","src/app/components/header/header.component.html","src/app/components/landing-page/landing-page.component.html","src/app/components/modal/modal.component.html","src/app/components/page-title/page-title.component.html","src/app/components/patient-booking-list/patient-booking-list.component.html","src/app/components/patient-profile/patient-profile.component.html","src/app/components/payment-success/payment-success.component.html","src/app/components/prescription-list/prescription-list.component.html","src/app/components/prescription/prescription.component.html","src/app/components/professional-card/professional-card.component.html","src/app/components/search-professionals-main/search-professionals-main.component.html","src/app/components/search-professionals/search-professionals.component.html","src/app/components/signup/sign-up.component.html","src/app/components/transition-page/transition-page.component.html","node_modules/tslib/tslib.es6.js","src/app/app-routing.module.ts","src/app/app.component.css","src/app/app.component.ts","src/app/app.module.ts","src/app/app.service.ts","src/app/components/booking-enter-time/booking-enter-time.component.css","src/app/components/booking-enter-time/booking-enter-time.component.ts","src/app/components/booking-enter/booking-enter.component.css","src/app/components/booking-enter/booking-enter.component.ts","src/app/components/chat-section/chat-section.component.css","src/app/components/chat-section/chat-section.component.ts","src/app/components/common-body/common-body.component.css","src/app/components/common-body/common-body.component.ts","src/app/components/contact-page/contact-page.component.css","src/app/components/contact-page/contact-page.component.ts","src/app/components/doctor-finance/doctor-finance.component.css","src/app/components/doctor-finance/doctor-finance.component.ts","src/app/components/doctor-profile/doctor-profile.component.css","src/app/components/doctor-profile/doctor-profile.component.ts","src/app/components/doctor-schedule/doctor-schedule.component.css","src/app/components/doctor-schedule/doctor-schedule.component.ts","src/app/components/doctor-side-booking-list/doctor-side-booking-list.component.css","src/app/components/doctor-side-booking-list/doctor-side-booking-list.component.ts","src/app/components/doctor-side-booking/doctor-side-booking.component.css","src/app/components/doctor-side-booking/doctor-side-booking.component.ts","src/app/components/faqs/faqs.component.css","src/app/components/faqs/faqs.component.ts","src/app/components/footer/footer.component.css","src/app/components/footer/footer.component.ts","src/app/components/header/header.component.css","src/app/components/header/header.component.ts","src/app/components/landing-page/landing-page.component.css","src/app/components/landing-page/landing-page.component.ts","src/app/components/modal/modal.component.css","src/app/components/modal/modal.component.ts","src/app/components/page-title/page-title.component.css","src/app/components/page-title/page-title.component.ts","src/app/components/patient-booking-list/patient-booking-list.component.css","src/app/components/patient-booking-list/patient-booking-list.component.ts","src/app/components/patient-profile/patient-profile.component.css","src/app/components/patient-profile/patient-profile.component.ts","src/app/components/payment-success/payment-success.component.css","src/app/components/payment-success/payment-success.component.ts","src/app/components/prescription-list/prescription-list.component.css","src/app/components/prescription-list/prescription-list.component.ts","src/app/components/prescription/prescription.component.css","src/app/components/prescription/prescription.component.ts","src/app/components/professional-card/professional-card.component.css","src/app/components/professional-card/professional-card.component.ts","src/app/components/search-professionals-main/search-professionals-main.component.css","src/app/components/search-professionals-main/search-professionals-main.component.ts","src/app/components/search-professionals/search-professionals.component.css","src/app/components/search-professionals/search-professionals.component.ts","src/app/components/signup/sign-up.component.css","src/app/components/signup/sign-up.component.ts","src/app/components/transition-page/transition-page.component.css","src/app/components/transition-page/transition-page.component.ts","src/app/models/auth-model.ts","src/app/models/request-options.ts","src/app/models/user-data.ts","src/app/services/data-handler.service.ts","src/app/services/data-loader.service.ts","src/app/services/data-store.service.ts","src/app/utils/Constants.ts","src/environments/environment.ts","src/main.ts"],"names":[],"mappings":"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","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","export default \"<div class=\\\"app-header-div\\\">\\r\\n    <app-header></app-header>\\r\\n</div>\\r\\n<div class=\\\"app-body-div\\\">\\r\\n<!--    <app-common-body></app-common-body>-->\\r\\n    <router-outlet (activate)=\\\"onActivate($event)\\\" ></router-outlet>\\r\\n</div>\\r\\n<app-footer></app-footer>\\r\\n\"","export default \"<div class=\\\"mat-card-style\\\" align=\\\"center\\\">\\r\\n    <ng-container *ngIf=\\\"!summaryShown && !showRedirectionMessage\\\">\\r\\n\\r\\n        <h4>Select Your Convenient Date and Time</h4>\\r\\n        <mat-form-field  style=\\\"width: 240px\\\" >\\r\\n            <mat-label>Date</mat-label>\\r\\n            <mat-select [(value)]=\\\"selectedDate\\\">\\r\\n                <ng-container *ngFor=\\\"let day of days\\\">\\r\\n                    <mat-option *ngIf=\\\"day.available\\\" value=\\\"{{day.date}}\\\">{{day.date}} - {{day.day}}</mat-option>\\r\\n                </ng-container>\\r\\n            </mat-select>\\r\\n        </mat-form-field>\\r\\n        <ng-container *ngIf=\\\"selectedDate !== undefined && selectedDate !== null\\\">\\r\\n            <mat-form-field  style=\\\"width: 240px\\\" >\\r\\n                <mat-label>Time</mat-label>\\r\\n                <mat-select [(value)]=\\\"selectedAppointmentId\\\">\\r\\n                    <ng-container *ngFor=\\\"let timeSlot of getTimeSlots(selectedDate)\\\">\\r\\n                        <mat-option value=\\\"{{timeSlot.appointmentId}}\\\">{{timeSlot.displayAppointmentTime | date:'shortTime'}}</mat-option>\\r\\n                    </ng-container>\\r\\n                </mat-select>\\r\\n            </mat-form-field>\\r\\n        </ng-container>\\r\\n        <button [disabled]=\\\"!selectedDate || !selectedAppointmentId\\\" mat-raised-button color=\\\"primary\\\" style=\\\"width: 240px\\\" (click)=\\\"continueClicked(true)\\\">Continue</button>\\r\\n        <br>\\r\\n        <br>\\r\\n\\r\\n        <button mat-raised-button color=\\\"secondary\\\" style=\\\"width: 240px\\\"  (click)=\\\"goToSearchProfessionals()\\\">Back</button>\\r\\n\\r\\n        <br>\\r\\n        <br>\\r\\n<!--        <button *ngIf=\\\"!isScheduleVisible\\\" mat-raised-button color=\\\"secondary\\\" style=\\\"width: 220px\\\" (click)=\\\"scheduleVisibilityToggle(true)\\\" >Show Available Times</button>-->\\r\\n<!--        <button *ngIf=\\\"isScheduleVisible\\\" mat-raised-button color=\\\"secondary\\\" style=\\\"width: 220px\\\" (click)=\\\"scheduleVisibilityToggle(false)\\\" >Hide Available Times</button>-->\\r\\n<!--        <br>-->\\r\\n<!--        <br>-->\\r\\n<!--        <ng-container *ngIf=\\\"isScheduleVisible\\\" >-->\\r\\n<!--            <p>Available Times:</p>-->\\r\\n<!--            <mat-accordion>-->\\r\\n<!--                <div *ngFor=\\\"let schedule of doctorSchedule.schedule;\\\">-->\\r\\n<!--                    <mat-expansion-panel style=\\\"width: 320px\\\">-->\\r\\n<!--                        <mat-expansion-panel-header>-->\\r\\n<!--                            <mat-panel-title>{{schedule.title}}</mat-panel-title>-->\\r\\n<!--                        </mat-expansion-panel-header>-->\\r\\n<!--                        <p>Time Slot 1: <b>{{schedule.slot1}}</b></p>-->\\r\\n<!--                        <p>Time Slot 2: <b>{{schedule.slot2}}</b></p>-->\\r\\n<!--                        <p>Time Slot 3: <b>{{schedule.slot3}}</b></p>-->\\r\\n<!--                    </mat-expansion-panel>-->\\r\\n<!--                    <br>-->\\r\\n<!--                </div>-->\\r\\n<!--            </mat-accordion>-->\\r\\n<!--        </ng-container>-->\\r\\n\\r\\n    </ng-container>\\r\\n    <ng-container *ngIf=\\\"summaryShown && !showRedirectionMessage\\\">\\r\\n        <div style=\\\"width: 240px\\\">\\r\\n            <p>** You are about to book a consultation with <b>{{doctor.name}}</b> on <b>{{selectedDate}}</b>. Wait for the Skype call from him/her at around <b>{{getDisplaySelectedTime(selectedAppointmentId)}}</b><br><br>\\r\\n                Make sure your Skype call notifications are switched on.<br><br>\\r\\n            (Note that the time might change due to different reasons)</p>\\r\\n        </div>\\r\\n        <button (click)=\\\"navigateToPaymentOrLogIn()\\\" mat-raised-button color=\\\"primary\\\" style=\\\"width: 240px\\\">Continue</button>\\r\\n        <br>\\r\\n        <br>\\r\\n\\r\\n        <button mat-raised-button color=\\\"secondary\\\" style=\\\"width: 240px\\\"  (click)=\\\"continueClicked(false)\\\">Back</button>\\r\\n    </ng-container>\\r\\n    <ng-container *ngIf=\\\"showRedirectionMessage\\\">\\r\\n        <app-transition-page\\r\\n                [modalType]=\\\"transitionType\\\"\\r\\n                (clickEmitter)=\\\"clickFromTransitionPage($event)\\\"\\r\\n        ></app-transition-page>\\r\\n    </ng-container>\\r\\n    <br>\\r\\n    <br>\\r\\n</div>\\r\\n\"","export default \"<div class=\\\"mat-card-style\\\">\\r\\n    <div *ngIf=\\\"doctor\\\">\\r\\n        <div style=\\\"width: 320px; height: auto;\\\">\\r\\n            <table>\\r\\n                <tr>\\r\\n                    <th style=\\\"width: 115px; height: 115px; align-content: center\\\">\\r\\n                        <img src=\\\"./assets/img/doctor2.jpg\\\" width=\\\"115px\\\" height=\\\"115px\\\">\\r\\n                    </th>\\r\\n                    <th>\\r\\n                    </th>\\r\\n                    <th>\\r\\n                        <table>\\r\\n                            <tr>\\r\\n                                <th style=\\\"font-size: medium; text-align: left\\\">\\r\\n                                    {{doctor.name | uppercase}}\\r\\n                                </th>\\r\\n                            </tr>\\r\\n                            <tr>\\r\\n                                <td style=\\\"font-size: x-small; text-align: left\\\">\\r\\n                                    {{doctor.bio}}\\r\\n                                </td>\\r\\n                            </tr>\\r\\n                            <tr>\\r\\n                                <mat-divider style=\\\"left: inherit; width: 180px\\\"></mat-divider>\\r\\n                            </tr>\\r\\n                            <tr>\\r\\n                            </tr>\\r\\n                            <tr>\\r\\n                            </tr>\\r\\n                            <tr>\\r\\n                            </tr>\\r\\n                            <tr>\\r\\n                                <td style=\\\"font-size: small; text-align: left\\\">\\r\\n                                    Specializations:\\r\\n                                </td>\\r\\n                            </tr>\\r\\n                            <tr>\\r\\n                            </tr>\\r\\n                            <div *ngFor=\\\"let speciality of doctor.specialities\\\">\\r\\n                                <tr>\\r\\n                                    <td style=\\\"font-size: x-small; text-align: left\\\">\\r\\n                                        {{speciality}}\\r\\n                                    </td>\\r\\n                                </tr>\\r\\n                            </div>\\r\\n                            <tr>\\r\\n                                <mat-divider style=\\\"left: inherit; width: 180px\\\"></mat-divider>\\r\\n                            </tr>\\r\\n                            <tr>\\r\\n                            </tr>\\r\\n                            <tr>\\r\\n                            </tr>\\r\\n                            <tr>\\r\\n                            </tr>\\r\\n                            <tr>\\r\\n                                <td style=\\\"font-size: small; text-align: left\\\">\\r\\n                                    Charge per consultation:\\r\\n                                </td>\\r\\n                            </tr>\\r\\n                            <tr>\\r\\n                            </tr>\\r\\n                            <tr>\\r\\n                                <td style=\\\"font-size: x-small; text-align: left\\\">\\r\\n                                    {{doctor.consultationPrice}}\\r\\n                                </td>\\r\\n                            </tr>\\r\\n                            <tr>\\r\\n                        </table>\\r\\n                    </th>\\r\\n                </tr>\\r\\n            </table>\\r\\n        </div>\\r\\n        <br>\\r\\n    </div>\\r\\n\\r\\n    <div>\\r\\n        <br>\\r\\n\\r\\n        <span>Total amount: </span><span>{{doctor.consultationPrice}}</span>\\r\\n        <br>\\r\\n        <br>\\r\\n<!--        <h5>{{doctor.consultationPrice}}</h5>-->\\r\\n    </div>\\r\\n    <button mat-raised-button color=\\\"primary\\\" style=\\\"width: 320px\\\">Continue to payment</button>\\r\\n    <br>\\r\\n    <br>\\r\\n    <button (click)=\\\"goBack()\\\" style=\\\"width: 320px\\\" mat-raised-button color=\\\"secondary\\\">Back</button>\\r\\n</div>\\r\\n\"","export default \"<div *ngFor=\\\"let message of messageThread\\\">\\r\\n    <div *ngIf=\\\"message.sender === 'doctor'\\\" style=\\\"align: right\\\">\\r\\n        <p style=\\\"font-style: italic; font-size: small; text-align:right; color: cornflowerblue\\\" role=\\\"listitem\\\">You: {{message.message}}</p>\\r\\n    </div>\\r\\n    <div *ngIf=\\\"message.sender === 'patient'\\\" >\\r\\n        <p style=\\\"font-style: italic; font-size: small; text-align:left; color: slategray\\\" role=\\\"listitem\\\">{{patientName}}: {{message.message}}</p>\\r\\n    </div>\\r\\n</div>\\r\\n\"","export default \"<div class=\\\"mat-card-style\\\">\\r\\n\\r\\n<!--    common-->\\r\\n    <div *ngIf=\\\"flow===1\\\">\\r\\n        <app-landing-page\\r\\n        >\\r\\n        </app-landing-page>\\r\\n    </div>\\r\\n    <div *ngIf=\\\"flow===2\\\">\\r\\n        <app-signup\\r\\n        ></app-signup>\\r\\n    </div>\\r\\n<!--    patient-->\\r\\n    <div  *ngIf=\\\"flow===3\\\">\\r\\n        <app-search-professionals-main></app-search-professionals-main>\\r\\n    </div>\\r\\n    <div *ngIf=\\\"flow===14\\\">\\r\\n        <app-booking-enter-time></app-booking-enter-time>\\r\\n    </div>\\r\\n    <div *ngIf=\\\"flow===13\\\">\\r\\n        <app-booking-enter></app-booking-enter>\\r\\n    </div>\\r\\n    <div *ngIf=\\\"flow===15\\\">\\r\\n        <app-payment-success></app-payment-success>\\r\\n    </div>\\r\\n    <div *ngIf=\\\"flow===17\\\">\\r\\n        <app-patient-profile></app-patient-profile>\\r\\n    </div>\\r\\n    <div *ngIf=\\\"flow===18\\\">\\r\\n        <app-patient-booking-list></app-patient-booking-list>\\r\\n    </div>\\r\\n\\r\\n\\r\\n<!--    doctor-->\\r\\n\\r\\n    <div *ngIf=\\\"flow===4\\\">\\r\\n        <app-doctor-profile></app-doctor-profile>\\r\\n    </div>\\r\\n    <div *ngIf=\\\"flow===6\\\">\\r\\n        <app-doctor-schedule\\r\\n        ></app-doctor-schedule>\\r\\n    </div>\\r\\n\\r\\n    <div  *ngIf=\\\"flow===7\\\">\\r\\n        <app-doctor-side-booking-list></app-doctor-side-booking-list>\\r\\n    </div>\\r\\n    <div *ngIf=\\\"flow===8\\\">\\r\\n        <app-doctor-side-booking></app-doctor-side-booking>\\r\\n    </div>\\r\\n    <div *ngIf=\\\"flow===12\\\">\\r\\n        <app-prescription></app-prescription>\\r\\n    </div>\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n    <div *ngIf=\\\"flow===10\\\">\\r\\n        <app-contact-page></app-contact-page>\\r\\n    </div>\\r\\n\\r\\n    <div *ngIf=\\\"flow===11\\\">\\r\\n        <app-faqs></app-faqs>\\r\\n    </div>\\r\\n    <div *ngIf=\\\"flow===9\\\">\\r\\n        <app-search-professionals></app-search-professionals>\\r\\n    </div>\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n</div>\\r\\n\"","export default \"<div class=\\\"mat-card-style\\\">\\r\\n    <p style=\\\"font-size: medium\\\">Phone number: {{phoneNumber}}</p><br>\\r\\n    <p style=\\\"font-size: medium\\\">Email: {{email}}</p><br>\\r\\n    <p style=\\\"font-size: medium\\\">Facebook: {{facebook}}</p>\\r\\n</div>\\r\\n\"","export default \"<div class=\\\"mat-card-style\\\">\\r\\n\\r\\n    <mat-form-field  style=\\\"width: 240px\\\" class=\\\"example-full-width\\\">\\r\\n        <mat-label>Price Per Consultation:</mat-label>\\r\\n        <input matInput placeholder=\\\"\\\" value=\\\"1500\\\">\\r\\n    </mat-form-field>\\r\\n\\r\\n    <br>\\r\\n    <br>\\r\\n    <button style=\\\"width: 320px\\\" mat-raised-button color=\\\"primary\\\">Save</button>\\r\\n    <br>\\r\\n    <br>\\r\\n</div>\\r\\n\"","export default \"<div class=\\\"mat-card-style\\\">\\r\\n\\r\\n    <ng-container *ngIf=\\\"editable\\\">\\r\\n        <mat-form-field style=\\\"width: 240px\\\" class=\\\"example-full-width\\\">\\r\\n            <mat-label>Title</mat-label>\\r\\n            <mat-select required [(value)]=\\\"userData.title\\\">\\r\\n                <ng-container *ngFor=\\\"let title of titles\\\" >\\r\\n                    <mat-option value=\\\"{{title.value}}\\\">\\r\\n                        {{title.value}}\\r\\n                    </mat-option>\\r\\n                </ng-container>\\r\\n            </mat-select>\\r\\n        </mat-form-field>\\r\\n\\r\\n        <mat-form-field style=\\\"width: 240px\\\" class=\\\"example-full-width\\\">\\r\\n            <mat-label>First Name: {{userData.firstName}}</mat-label>\\r\\n            <input required matInput placeholder=\\\"\\\" [(ngModel)]=\\\"userData.firstName\\\">\\r\\n        </mat-form-field>\\r\\n\\r\\n        <mat-form-field style=\\\"width: 240px\\\" class=\\\"example-full-width\\\">\\r\\n            <mat-label>Last Name: {{userData.lastName}}</mat-label>\\r\\n            <input required matInput placeholder=\\\"\\\" [(ngModel)]=\\\"userData.lastName\\\">\\r\\n        </mat-form-field>\\r\\n\\r\\n        <mat-form-field style=\\\"width: 240px\\\" class=\\\"example-full-width\\\">\\r\\n            <mat-label>Professional Level</mat-label>\\r\\n            <mat-select required [(value)]=\\\"userData.professionalType\\\">\\r\\n                <ng-container *ngFor=\\\"let professionalType of doctorTypes\\\" >\\r\\n                    <mat-option value=\\\"{{professionalType.value}}\\\">\\r\\n                        {{professionalType.value}}\\r\\n                    </mat-option>\\r\\n                </ng-container>\\r\\n            </mat-select>\\r\\n        </mat-form-field>\\r\\n\\r\\n        <mat-form-field  style=\\\"width: 240px\\\" class=\\\"example-full-width\\\">\\r\\n            <mat-label>Registration Number (SLMC):</mat-label>\\r\\n            <input matInput placeholder=\\\"\\\"  [(ngModel)]=\\\"userData.regNo\\\">\\r\\n        </mat-form-field>\\r\\n\\r\\n        <mat-form-field  style=\\\"width: 240px\\\" class=\\\"example-full-width\\\">\\r\\n            <mat-label>Qualifications / Description:</mat-label>\\r\\n            <textarea required matInput placeholder=\\\"\\\" [(ngModel)]=\\\"userData.qualifications\\\"></textarea>\\r\\n        </mat-form-field>\\r\\n\\r\\n        <mat-form-field *ngIf=\\\"isConsultant(userData.professionalType)\\\" style=\\\"width: 240px\\\" class=\\\"example-full-width\\\">\\r\\n            <mat-label>Specialization #1</mat-label>\\r\\n            <mat-select matNativeControl [(value)]=\\\"userData.specialityA\\\">\\r\\n                <ng-container *ngFor=\\\"let specialization of specializations\\\" >\\r\\n                    <mat-option value=\\\"{{specialization}}\\\">\\r\\n                        {{specialization}}\\r\\n                    </mat-option>\\r\\n                </ng-container>\\r\\n            </mat-select>\\r\\n        </mat-form-field>\\r\\n        <mat-form-field *ngIf=\\\"isConsultant(userData.professionalType)\\\" style=\\\"width: 240px\\\" class=\\\"example-full-width\\\">\\r\\n            <mat-label>Specialization #2 (Optional)</mat-label>\\r\\n            <mat-select matNativeControl [(value)]=\\\"userData.specialityB\\\">\\r\\n                <ng-container *ngFor=\\\"let specialization of specializations\\\" >\\r\\n                    <mat-option value=\\\"{{specialization.value}}\\\">\\r\\n                        {{specialization.value}}\\r\\n                    </mat-option>\\r\\n                </ng-container>\\r\\n            </mat-select>\\r\\n        </mat-form-field>\\r\\n        <mat-form-field *ngIf=\\\"isConsultant(userData.professionalType)\\\" style=\\\"width: 240px\\\" class=\\\"example-full-width\\\">\\r\\n            <mat-label>Specialization #3 (Optional)</mat-label>\\r\\n            <mat-select matNativeControl [(value)]=\\\"userData.specialityC\\\">\\r\\n                <ng-container *ngFor=\\\"let specialization of specializations\\\" >\\r\\n                    <mat-option value=\\\"{{specialization.value}}\\\">\\r\\n                        {{specialization.value}}\\r\\n                    </mat-option>\\r\\n                </ng-container>\\r\\n            </mat-select>\\r\\n        </mat-form-field>\\r\\n\\r\\n        <mat-form-field  style=\\\"width: 240px\\\" class=\\\"example-full-width\\\">\\r\\n            <mat-label>WhatsApp Number:</mat-label>\\r\\n            <input required matInput placeholder=\\\"\\\" [(ngModel)]=\\\"userData.whatsAppNumber\\\">\\r\\n        </mat-form-field>\\r\\n        <br>\\r\\n        <mat-form-field  style=\\\"width: 240px\\\" class=\\\"example-full-width\\\">\\r\\n            <mat-label>Contact Number:</mat-label>\\r\\n            <input required matInput placeholder=\\\"\\\" [(ngModel)]=\\\"userData.contactNumber\\\">\\r\\n        </mat-form-field>\\r\\n        <br>\\r\\n        <mat-form-field  style=\\\"width: 240px\\\" class=\\\"example-full-width\\\">\\r\\n            <mat-label>Price per consultation ({{userData.priceCurrency}}):</mat-label>\\r\\n            <input required matInput placeholder=\\\"\\\" [(ngModel)]=\\\"userData.priceForAppointment\\\">\\r\\n        </mat-form-field>\\r\\n        <br>\\r\\n        <mat-label style=\\\"font-size: small\\\">Upload Profile Picture:</mat-label>\\r\\n        <br>\\r\\n        <input #imageInput\\r\\n               type=\\\"file\\\"\\r\\n               accept=\\\"image/*\\\"\\r\\n               (change)=\\\"uploadImage(imageInput)\\\">\\r\\n        <br>\\r\\n        <br>\\r\\n        <button style=\\\"width: 240px\\\" mat-raised-button color=\\\"primary\\\" (click)=\\\"saveData()\\\">Save</button>\\r\\n        <br>\\r\\n        <br>\\r\\n        <button style=\\\"width: 240px\\\" mat-raised-button color=\\\"secondary\\\" (click)=\\\"toggleEditable(false)\\\">Back</button>\\r\\n        <br>\\r\\n    </ng-container>\\r\\n\\r\\n    <ng-container *ngIf=\\\"!editable\\\">\\r\\n        <ng-container *ngIf=\\\"!userData?.availableForAppointment\\\">\\r\\n            <p>\\r\\n                <ngb-alert [dismissible]=\\\"false\\\">\\r\\n                    <strong>Note!</strong> You have not completed your Profile and Schedule yet. You will not be listed under searches until you complete your Schedule and Profile.\\r\\n                </ngb-alert>\\r\\n            </p>\\r\\n        </ng-container>\\r\\n\\r\\n        <button [disabled]=\\\"!userData?.availableForAppointment\\\" (click)=\\\"goToMyAppointments()\\\" style=\\\"width: 320px\\\" mat-raised-button color=\\\"primary\\\">My Bookings</button>\\r\\n        <br>\\r\\n        <br>\\r\\n        <button [disabled]=\\\"!userData?.availableForAppointment && checkForMandatoryFieldsToActivateProfile(userData)\\\" [color]=\\\"userData?.availableForAppointment? null: 'warn'\\\" style=\\\"width: 320px\\\" mat-raised-button (click)=\\\"toggleEditable(true)\\\">Edit Profile</button>\\r\\n        <br>\\r\\n        <br>\\r\\n        <button [disabled]=\\\"!userData?.availableForAppointment && !checkForMandatoryFieldsToActivateProfile(userData)\\\" [color]=\\\"userData?.availableForAppointment? null:'warn'\\\" (click)=\\\"editSchedule()\\\" style=\\\"width: 320px\\\" mat-raised-button>Edit Schedule</button>\\r\\n        <br>\\r\\n        <br>\\r\\n        <button disabled style=\\\"width: 320px\\\" mat-stroked-button>My Finances</button>\\r\\n        <br>\\r\\n        <br>\\r\\n\\r\\n        <br>\\r\\n        <ng-container  *ngIf=\\\"userData?.availableForAppointment\\\">\\r\\n            <p>What the patients see:</p>\\r\\n            <app-professional-card\\r\\n            [professional]=\\\"userData\\\"\\r\\n            ></app-professional-card>\\r\\n        </ng-container>\\r\\n    </ng-container>\\r\\n</div>\\r\\n\\r\\n<!--<h1>file upload</h1>\\r\\n<input type=\\\"file\\\" multiple (change)=\\\"onFileSelected($event)\\\">\\r\\n<button type=\\\"buton\\\" (click)=\\\"onUpload()\\\">Upload</button>-->\\r\\n\"","export default \"<div class=\\\"mat-card-style\\\">\\r\\n    <mat-form-field style=\\\"width: 240px\\\"  appearance=\\\"legacy\\\">\\r\\n        <mat-label>Average Time For Consultation (minutes):</mat-label>\\r\\n        <input required matInput #input7 [(ngModel)]='doctorScheduleData.averageTimeForAppointment'>\\r\\n    </mat-form-field>\\r\\n    <br>\\r\\n    <br>\\r\\n\\r\\n    <p>Weekly Schedule for consultations:</p>\\r\\n    <mat-accordion>\\r\\n        <div *ngFor=\\\"let schedule of doctorScheduleData.fixedDoctorDates;\\\">\\r\\n<!--            <mat-expansion-panel [disabled]=\\\"!(schedule.workingTimePeriods && schedule.workingTimePeriods.length > 0)\\\" style=\\\"width: 320px\\\">-->\\r\\n            <mat-expansion-panel style=\\\"width: 320px\\\">\\r\\n                <mat-expansion-panel-header>\\r\\n                    <mat-panel-title style=\\\"font-family: 'Arial Black'\\\"><b>{{schedule.title}}</b></mat-panel-title>\\r\\n                </mat-expansion-panel-header>\\r\\n                <mat-divider></mat-divider>\\r\\n                <br>\\r\\n                <ng-container *ngFor=\\\"let workingTimePeriod of schedule.workingTimePeriods; let i = index\\\">\\r\\n                    <p align=\\\"left\\\"><b>\\r\\n                        <mat-checkbox\\r\\n                                (change)=\\\"workingTimePeriod.isActive = !workingTimePeriod.isActive\\\"\\r\\n                                [checked]=\\\"workingTimePeriod && workingTimePeriod.isActive\\\"><span style=\\\"font-family: 'Arial Black'\\\">{{schedule.title}} Slot #{{i+1}}</span>\\r\\n                        </mat-checkbox>\\r\\n                    </b></p>\\r\\n                    <ng-container *ngIf=\\\"workingTimePeriod.isActive\\\">\\r\\n                        <mat-label>From:</mat-label>\\r\\n                        <ngb-timepicker [(ngModel)]=\\\"workingTimePeriod.startTimeSelected\\\" [meridian]=\\\"meridian\\\"></ngb-timepicker>\\r\\n                        <mat-label>To:</mat-label>\\r\\n                        <ngb-timepicker [(ngModel)]=\\\"workingTimePeriod.endTimeSelected\\\" [meridian]=\\\"meridian\\\"></ngb-timepicker>\\r\\n                        <ng-container *ngIf=\\\"schedule.workingTimePeriods.length > i+1\\\"><mat-divider></mat-divider></ng-container>\\r\\n                        <br>\\r\\n                    </ng-container>\\r\\n                </ng-container>\\r\\n            </mat-expansion-panel>\\r\\n            <br>\\r\\n        </div>\\r\\n    </mat-accordion>\\r\\n\\r\\n    <br>\\r\\n    <ng-container *ngIf=\\\"!changeRequestSent\\\">\\r\\n        <p style=\\\"font-size: small; color: crimson\\\">** Once you send the change request, changes will be activated only after 7 days because already available bookings will be affected by these changes.<br><br>\\r\\n        ** You will not be able to send another change request till 7 days.</p>\\r\\n    </ng-container>\\r\\n    <ng-container *ngIf=\\\"changeRequestSent\\\">\\r\\n        <p style=\\\"font-size: small; color: crimson\\\">** You can not save above details temporarily. You have made a change request already and it takes 7 days before you can send another change request.\\r\\n            Contact us for more clarifications.</p>\\r\\n    </ng-container>\\r\\n    <button *ngIf=\\\"!isConfirmationActive\\\" (click)=\\\"userConsent()\\\"  [disabled]=\\\"changeRequestSent\\\" style=\\\"width: 320px\\\" mat-raised-button color=\\\"primary\\\">Send Request to Change Details</button>\\r\\n    <br>\\r\\n    <br>\\r\\n    <button *ngIf=\\\"!isConfirmationActive\\\" (click)=\\\"goToProfessionalDashboard()\\\" style=\\\"width: 320px\\\" mat-raised-button color=\\\"secondary\\\">Back</button>\\r\\n    <p *ngIf=\\\"isConfirmationActive\\\" align=\\\"center\\\">Are you sure?</p>\\r\\n    <button *ngIf=\\\"isConfirmationActive\\\" (click)=\\\"save()\\\" style=\\\"width: 150px\\\" mat-raised-button color=\\\"primary\\\">Send Request</button>\\r\\n    <span>&nbsp;&nbsp;<button *ngIf=\\\"isConfirmationActive\\\" (click)=\\\"cancel()\\\" style=\\\"width: 150px\\\" mat-raised-button color=\\\"secondary\\\">Cancel</button></span>\\r\\n</div>\\r\\n\"","export default \"<div class=\\\"mat-card-style\\\">\\r\\n\\r\\n\\r\\n    <ng-container *ngIf=\\\"bookingSlotListVisible\\\">\\r\\n        <p style=\\\"font-size: x-large\\\">List of Time Slots:</p>\\r\\n        <button (click)=\\\"selectSlot(bookingListSlot1)\\\" style=\\\"width: 320px\\\" mat-raised-button>{{bookingListSlot1.startTime}} - {{bookingListSlot1.endTime}}</button>\\r\\n        <br>\\r\\n        <br>\\r\\n        <button (click)=\\\"selectSlot(bookingListSlot2)\\\" style=\\\"width: 320px\\\" mat-raised-button>{{bookingListSlot2.startTime}} - {{bookingListSlot2.endTime}}</button>\\r\\n        <br>\\r\\n        <br>\\r\\n        <button (click)=\\\"selectSlot(bookingListSlot3)\\\" style=\\\"width: 320px\\\" mat-raised-button>{{bookingListSlot3.startTime}} - {{bookingListSlot3.endTime}} (4 New)</button>\\r\\n    </ng-container>\\r\\n\\r\\n    <ng-container *ngIf=\\\"!bookingSlotListVisible && selectedSlot\\\">\\r\\n        <button\\r\\n                (click)=\\\"\\r\\n                bookingSlotListVisible = !bookingSlotListVisible;\\r\\n                PAGINATION_START = 0;\\r\\n                PAGINATION_END = this.RESULTS_PER_PAGE;\\\"\\r\\n                style=\\\"width: 300px\\\"\\r\\n                mat-raised-button\\r\\n                color=\\\"secondary\\\"\\r\\n        >Back</button>\\r\\n        <br>\\r\\n        <br>\\r\\n        <p style=\\\"font-size: x-large\\\">Appointments:</p>\\r\\n\\r\\n        <div *ngFor=\\\"let booking of selectedSlot?.bookings; let i=index\\\">\\r\\n            <ng-container *ngIf=\\\"i >= PAGINATION_START && i < PAGINATION_END\\\">\\r\\n                <mat-card [ngClass]=\\\"isOverTheAppointmentCard(booking?.bookingId) ? 'shadow' : ''\\\" (mouseenter)=\\\"onMouseEnter(booking?.bookingId)\\\" (mouseleave)=\\\"onMouseLeave()\\\"\\r\\n                        (click)=\\\"selectBooking(booking.id)\\\" style=\\\"width: 300px; height: 60px;\\\" [ngStyle]=\\\"{background: getColor(booking.bookingStatus)}\\\">\\r\\n                    <table>\\r\\n                        <tr>\\r\\n                            <td style=\\\"font-size: large\\\" [ngClass]=\\\"booking.bookingStatus === 'BOOKING_COMPLETED' ? 'strikethrough':'null'\\\">{{booking.patientName}}</td>\\r\\n                        </tr>\\r\\n                        <tr>\\r\\n                            <td style=\\\"font-size: x-small\\\">Booking ID: {{booking.bookingId}}</td>\\r\\n                        </tr>\\r\\n                    </table>\\r\\n                </mat-card>\\r\\n                <br>\\r\\n            </ng-container>\\r\\n        </div>\\r\\n        <mat-paginator [length]=\\\"selectedSlot?.bookings.length\\\"\\r\\n                       [pageSize]=\\\"RESULTS_PER_PAGE\\\"\\r\\n                       (page)=\\\"goToPage($event)\\\"\\r\\n        >\\r\\n        </mat-paginator>\\r\\n\\r\\n    </ng-container>\\r\\n\\r\\n    <br>\\r\\n\\r\\n</div>\\r\\n\"","export default \"<div class=\\\"mat-card-style\\\">\\r\\n    <h1 style=\\\"font-size: x-large\\\"># {{booking.id}}</h1>\\r\\n<!--    <mat-panel-title style=\\\"font-family: 'Arial Black'; size: A3\\\"><b># {{booking.id}}</b></mat-panel-title>-->\\r\\n\\r\\n    <br>\\r\\n    <p style=\\\"font-size: small\\\">WhatApp: <b>{{patient.whatsAppNumber}}</b></p>\\r\\n\\r\\n    <p style=\\\"font-size: small\\\">Booking Status: {{booking.status}}</p>\\r\\n\\r\\n    <ng-container *ngIf=\\\"!isPatientDetailsShown\\\">\\r\\n        <button (click)=\\\"isPatientDetailsShown = !isPatientDetailsShown\\\" style=\\\"width: 180px\\\" color=\\\"primary\\\" mat-flat-button>Show Patient Details</button>    <br>\\r\\n    </ng-container>\\r\\n    <ng-container *ngIf=\\\"isPatientDetailsShown\\\">\\r\\n        <button (click)=\\\"isPatientDetailsShown = !isPatientDetailsShown\\\" style=\\\"width: 180px\\\" color=\\\"primary\\\" mat-flat-button>Hide Patient Details</button>    <br>\\r\\n    </ng-container>\\r\\n    <br>\\r\\n    <ng-container *ngIf=\\\"isPatientDetailsShown\\\">\\r\\n        <p style=\\\"font-size: small\\\">Booking Number: {{patient.patientName}}</p>\\r\\n        <p style=\\\"font-size: small\\\">Patient Ref. No: {{patient.patientId}}</p>\\r\\n        <p style=\\\"font-size: small\\\">Contact number: {{patient.contactNumber}}</p>\\r\\n        <p style=\\\"font-size: small\\\">Email: {{patient.email}}</p>\\r\\n        <p style=\\\"font-size: small\\\">Birthday: {{patient.birthday}}</p>\\r\\n        <p style=\\\"font-size: small\\\">Age: {{patient.age}}</p>\\r\\n        <p style=\\\"font-size: small\\\">Known Allergies: {{patient.knownAllergies}}</p>\\r\\n    </ng-container>\\r\\n    <mat-divider></mat-divider>\\r\\n    <br>\\r\\n\\r\\n    <ng-container  *ngIf=\\\"!inProgress\\\" >\\r\\n    <button [disabled]=\\\"booking.status === 'BOOKING_CANCELLED'\\\"  style=\\\"width: 320px\\\" color=\\\"primary\\\" (click)=\\\"inProgress = !inProgress\\\" mat-flat-button>Start Consultation</button>\\r\\n<!--    <button [disabled]=\\\"booking.status !== 'BOOKING_NOT_STARTED'\\\" style=\\\"width: 320px\\\" color=\\\"primary\\\" mat-flat-button>Start Consultation</button>    <br>-->\\r\\n    </ng-container>\\r\\n    <ng-container *ngIf=\\\"inProgress\\\">\\r\\n\\r\\n    <button [disabled]=\\\"booking.status === 'BOOKING_CANCELLED'\\\" (click)=\\\"inProgress = !inProgress\\\" color=\\\"warn\\\" style=\\\"width: 320px\\\" mat-stroked-button>\\r\\n        End Consultation</button>\\r\\n<!--    <button [disabled]=\\\"booking.status === 'BOOKING_NOT_STARTED' || booking.status === 'BOOKING_CANCELLED'\\\" style=\\\"width: 320px\\\" mat-stroked-button>End Consultation</button>-->\\r\\n    </ng-container>\\r\\n    <br>\\r\\n    <br>\\r\\n\\r\\n    <button style=\\\"width: 320px\\\" color=\\\"accent\\\" mat-flat-button>Prescriptions</button>\\r\\n    <br>\\r\\n    <br>\\r\\n\\r\\n    <br>\\r\\n    <p style=\\\"font-size: large;\\\">Conversation:</p>\\r\\n    <mat-divider></mat-divider>\\r\\n\\r\\n    <br>\\r\\n\\r\\n    <div *ngFor=\\\"let message of booking.messageThread\\\">\\r\\n        <div *ngIf=\\\"message.sender === 'doctor'\\\" style=\\\"align: right\\\">\\r\\n            <p style=\\\"font-style: italic; font-size: small; text-align:right; color: cornflowerblue\\\" role=\\\"listitem\\\">You: {{message.message}}</p>\\r\\n        </div>\\r\\n        <div *ngIf=\\\"message.sender === 'patient'\\\" >\\r\\n            <p style=\\\"font-style: italic; font-size: small; text-align:left; color: slategray\\\" role=\\\"listitem\\\">{{patient.patientName}}: {{message.message}}</p>\\r\\n        </div>\\r\\n    </div>\\r\\n\\r\\n    <mat-divider></mat-divider>\\r\\n\\r\\n    <br>\\r\\n    <button *ngIf=\\\"!isConfirmationActive\\\" [disabled]=\\\"booking.status === 'BOOKING_CANCELLED'\\\" (click)=\\\"userConsent()\\\" style=\\\"width: 320px\\\" mat-flat-button color=\\\"warn\\\" >Cancel Booking</button>\\r\\n\\r\\n    <p *ngIf=\\\"isConfirmationActive\\\" align=\\\"center\\\">Are you sure?</p>\\r\\n    <button *ngIf=\\\"isConfirmationActive\\\" (click)=\\\"cancel()\\\" style=\\\"width: 150px\\\" mat-raised-button  color=\\\"warn\\\">Cancel Booking</button>\\r\\n    <span>&nbsp;&nbsp;<button *ngIf=\\\"isConfirmationActive\\\" (click)=\\\"dismiss()\\\" style=\\\"width: 150px\\\" mat-raised-button color=\\\"secondary\\\">Dismiss</button></span>\\r\\n</div>\\r\\n\"","export default \"<div class=\\\"mat-card-style\\\">\\r\\n\\r\\n    <p style=\\\"font-size: x-large\\\">Frequently Asked Questions:</p>\\r\\n\\r\\n    <div *ngFor=\\\"let faq of faqs\\\">\\r\\n        <mat-expansion-panel>\\r\\n            <mat-expansion-panel-header>\\r\\n                <p style=\\\"font-size: small\\\"><b>\\r\\n                        {{faq.q}}\\r\\n                </b></p>\\r\\n            </mat-expansion-panel-header>\\r\\n            <p style=\\\"font-size: small\\\">\\r\\n                Answer: {{faq.a}}\\r\\n            </p>\\r\\n        </mat-expansion-panel>\\r\\n        <br>\\r\\n    </div>\\r\\n</div>\\r\\n\"","export default \"<div class=\\\"app-footer\\\">\\r\\n    <div align=\\\"center\\\">\\r\\n        <span style=\\\"padding-right: 25px\\\">About Us</span>\\r\\n        <span>|</span>\\r\\n        <span style=\\\"padding-left: 25px; padding-right: 25px\\\">Terms & Conditions</span>\\r\\n        <span>|</span>\\r\\n        <span style=\\\"padding-left: 25px; padding-right: 25px\\\">FAQs</span>\\r\\n        <span>|</span>\\r\\n        <span style=\\\"padding-left: 25px;\\\">Contact Us</span>\\r\\n        <br>\\r\\n        <br>\\r\\n        <img src=\\\"./assets/img/payments low footer.png\\\" width=\\\"250px\\\">\\r\\n        <p style=\\\"font-size: small;\\\">Copyright © {{currentYear}} Ez Med. All Rights Reserved</p>\\r\\n        <br>\\r\\n    </div>\\r\\n</div>\\r\\n\"","export default \"\\r\\n<div class=\\\"mat-card-style\\\">\\r\\n    <table>\\r\\n        <tr>\\r\\n            <th style=\\\"width: 250px; padding-bottom: 20px\\\" align=\\\"left\\\">\\r\\n                <img src=\\\"./assets/img/ez_med_logo.png\\\" width=\\\"100\\\" (click)=\\\"goToHomePage()\\\">\\r\\n            </th>\\r\\n            <th style=\\\"width: 100px;\\\" >\\r\\n                <div *ngIf=\\\"!(loggedInUser && firstName)\\\" align=\\\"center\\\">\\r\\n                    <img (click)=\\\"logoClick()\\\" src=\\\"./assets/img/login.png\\\" width=\\\"70px\\\"/>\\r\\n                </div>\\r\\n                <div *ngIf=\\\"loggedInUser && firstName\\\" align=\\\"center\\\">\\r\\n                    <img (click)=\\\"logoClick()\\\" src=\\\"./assets/img/profile_blue1.png\\\" width=\\\"60px\\\"/>\\r\\n                    <p style=\\\"align-content: center; padding-top: 5px; font-size: small\\\">{{firstName}}</p>\\r\\n                </div>\\r\\n            </th>\\r\\n        </tr>\\r\\n    </table>\\r\\n</div>\\r\\n<mat-divider></mat-divider>\\r\\n\"","export default \"<div align=\\\"center\\\" class=\\\"mat-card-style\\\">\\r\\n    <p style=\\\"font-size: medium; line-height:1.6; padding-bottom: 60px;  padding-right: 30px;  padding-left: 30px;\\\">\\r\\n        Ez Med is the <b>FIRST</b> and the <b>ONLY</b>  platform in Sri Lanka that allows you to book an appointment with your doctor online and get your consultation done via video / audio call.\\r\\n    </p>\\r\\n    <img src=\\\"/assets/img/search-doctor.png\\\" width=\\\"100px\\\">\\r\\n    <p style=\\\"font-size: medium; padding-bottom: 40px;\\\">\\r\\n        1. Search for a Doctor\\r\\n    </p>\\r\\n    <img src=\\\"./assets/img/booking.png\\\" width=\\\"100px\\\">\\r\\n\\r\\n    <p style=\\\"font-size: medium; padding-bottom: 40px;\\\">\\r\\n        2. Schedule the appointment\\r\\n    </p>\\r\\n    <img src=\\\"./assets/img/video-chat.png\\\" width=\\\"100px\\\">\\r\\n\\r\\n    <p style=\\\"font-size: medium;\\\">\\r\\n        3. Wait for the doctor's call\\r\\n\\r\\n<!--        <a href=\\\"https://support.skype.com/en/faq/FA11098/how-do-i-get-started-with-skype\\\" style=\\\"color: dodgerblue\\\">Help me set up Skype</a>-->\\r\\n<!--        <br>-->\\r\\n<!--        <a href=\\\"https://www.businessinsider.com/what-is-my-skype-id\\\" style=\\\"color: dodgerblue\\\">What is my Skype ID?</a>-->\\r\\n<!--        <br>-->\\r\\n    </p>\\r\\n    <p style=\\\"font-size: small; padding-bottom: 40px; max-width: 300px\\\">\\r\\n        Once your booking is up, doctor (/professional) will contact you. After several attempts to contact you,\\r\\n        your booking will be automatically cancelled and you will be refunded (cancellation charges apply*).<br>\\r\\n    </p>\\r\\n\\r\\n    <button (click)=\\\"goToSearchPage()\\\" style=\\\"width: 250px; height: 60px\\\" mat-raised-button color=\\\"primary\\\"><b>Make an Appointment</b></button>\\r\\n    <br>\\r\\n\\r\\n<!--    <br>-->\\r\\n<!--    <button style=\\\"width: 180px\\\" mat-raised-button color=\\\"link\\\">I'm a Doctor</button>-->\\r\\n<!--    <br>-->\\r\\n</div>\\r\\n\"","export default \"<div align=\\\"center\\\">\\r\\n    <ng-container *ngIf=\\\"modalType === 'LOADING'\\\">\\r\\n        <mat-spinner></mat-spinner>\\r\\n        <br>\\r\\n        <h5>Loading...</h5>\\r\\n    </ng-container>\\r\\n</div>\\r\\n\"","export default \"<h3 align=\\\"center\\\" style=\\\"color: #b4b2b2\\\">{{title}}</h3><br>\\r\\n<mat-divider></mat-divider>\\r\\n<br>\\r\\n\"","export default \"<div class=\\\"mat-card-style\\\">\\r\\n    <ng-container *ngIf=\\\"!selectedBookingId\\\">\\r\\n\\r\\n        <app-page-title [title]=\\\"title\\\"></app-page-title>\\r\\n\\r\\n<!--        <mat-radio-group aria-label=\\\"Select an option\\\">-->\\r\\n<!--            <mat-radio-button value=\\\"all\\\">All</mat-radio-button>-->\\r\\n<!--            <mat-radio-button value=\\\"new\\\">New</mat-radio-button>-->\\r\\n<!--        </mat-radio-group>-->\\r\\n<!--        <br>-->\\r\\n        <button (click)=\\\"goToUserDashboard()\\\" style=\\\"width: 300px\\\" mat-raised-button color=\\\"secondary\\\">Back</button>\\r\\n         <br>\\r\\n         <br>\\r\\n        <button style=\\\"width: 300px\\\" (click)=\\\"newBooking()\\\" mat-raised-button color=\\\"primary\\\">+ Add New Booking</button>\\r\\n        <br>\\r\\n        <br>\\r\\n        <p style=\\\"font-size: large;\\\">Bookings:</p>\\r\\n<!--        <mat-divider></mat-divider>-->\\r\\n        <div *ngFor=\\\"let booking of bookings; let i=index\\\">\\r\\n            <ng-container *ngIf=\\\"i >= PAGINATION_START && i < PAGINATION_END\\\">\\r\\n                <mat-card (click)=\\\"selectBooking(booking.bookingId)\\\" style=\\\"width: 300px; height: 90px;\\\" [ngStyle]=\\\"{background: getColor(booking.bookingStatus)}\\\">\\r\\n                    <table>\\r\\n                        <tr>\\r\\n                            <td style=\\\"font-size: large\\\" [ngClass]=\\\"booking.bookingStatus === 'BOOKING_COMPLETED' ? 'strikethrough':'null'\\\">{{booking.doctorName}}</td>\\r\\n                        </tr>\\r\\n                        <tr>\\r\\n                            <td style=\\\"font-size: small\\\">Date: {{booking.date}}</td>\\r\\n                        </tr>\\r\\n                        <tr>\\r\\n                            <td style=\\\"font-size: x-small\\\">Booking ID: {{booking.bookingId}}</td>\\r\\n                        </tr>\\r\\n                    </table>\\r\\n                </mat-card>\\r\\n                <br>\\r\\n            </ng-container>\\r\\n        </div>\\r\\n        <mat-paginator [length]=\\\"bookings.length\\\"\\r\\n                       [pageSize]=\\\"RESULTS_PER_PAGE\\\"\\r\\n                       (page)=\\\"goToPage($event)\\\"\\r\\n        >\\r\\n        </mat-paginator>\\r\\n\\r\\n    </ng-container>\\r\\n\\r\\n    <ng-container *ngIf=\\\"selectedBookingId && !isPrescriptionsVisible\\\">\\r\\n        <app-page-title [title]=\\\"titleBooking\\\"></app-page-title>\\r\\n\\r\\n        <h1 style=\\\"font-size: x-large\\\">{{booking.doctorName}}</h1>\\r\\n\\r\\n        <p style=\\\"font-size: small\\\">Professional ID: {{booking.doctorId}}</p>\\r\\n        <p style=\\\"font-size: small\\\">Booking Number: {{booking.bookingId}}</p>\\r\\n\\r\\n        <p style=\\\"font-size: small\\\">Booking Status: {{booking.bookingStatus}}</p>\\r\\n        <mat-divider></mat-divider>\\r\\n\\r\\n<!--        <button (click)=\\\"showPrescriptions(booking.bookingId, true)\\\" style=\\\"width: 320px\\\" color=\\\"accent\\\" mat-flat-button>Prescriptions</button>-->\\r\\n\\r\\n        <br>\\r\\n        <p style=\\\"font-size: large;\\\">Conversation:</p>\\r\\n\\r\\n        <app-chat-section\\r\\n            [messageThread]=\\\"booking.messageThread\\\"\\r\\n            [patientName]=\\\"booking.patientName\\\"\\r\\n        >\\r\\n        </app-chat-section>\\r\\n\\r\\n\\r\\n        <mat-divider></mat-divider>\\r\\n\\r\\n        <br>\\r\\n        <br>\\r\\n        <button *ngIf=\\\"!isConfirmationActive\\\" (click)=\\\"isConfirmationActive = !isConfirmationActive\\\"  [disabled]=\\\"changeRequestSent\\\" style=\\\"width: 320px\\\" mat-raised-button color=\\\"warn\\\">Cancel Booking</button>\\r\\n        <p *ngIf=\\\"isConfirmationActive\\\" align=\\\"center\\\">If you cancel this booking, you will not be able to reactivate this booking again. Are you sure?</p>\\r\\n        <button *ngIf=\\\"isConfirmationActive\\\" (click)=\\\"save()\\\" style=\\\"width: 150px\\\" mat-raised-button color=\\\"warn\\\">Yes</button>\\r\\n        <span>&nbsp;&nbsp;<button *ngIf=\\\"isConfirmationActive\\\" (click)=\\\"cancel()\\\" style=\\\"width: 150px\\\" mat-raised-button color=\\\"secondary\\\">No, Go back</button></span>\\r\\n        <br *ngIf=\\\"isConfirmationActive\\\" >\\r\\n        <br>\\r\\n        <button *ngIf=\\\"!isConfirmationActive\\\" (click)=\\\"selectedBookingId = null\\\" style=\\\"width: 320px\\\" mat-raised-button color=\\\"secondary\\\">Back</button>\\r\\n    </ng-container>\\r\\n    <ng-container *ngIf=\\\"isPrescriptionsVisible && !selectedPrescription\\\">\\r\\n        <div *ngFor=\\\"let prescription of prescriptionList; index as index\\\">\\r\\n            <ng-container>\\r\\n                <mat-card (click)=\\\"selectPrescription(prescription.prescription)\\\" style=\\\"width: 240px; height: 40px;\\\">\\r\\n                    <table>\\r\\n                        <tr>\\r\\n                            <td style=\\\"font-size: small\\\">{{index}}</td>\\r\\n                        </tr>\\r\\n                    </table>\\r\\n                </mat-card>\\r\\n                <br>\\r\\n            </ng-container>\\r\\n        </div>\\r\\n        <br>\\r\\n        <button (click)=\\\"showPrescriptions(null, false)\\\" style=\\\"width: 240px\\\" color=\\\"primary\\\" mat-flat-button>Back</button>\\r\\n    </ng-container>\\r\\n    <ng-container  *ngIf=\\\"isPrescriptionsVisible && selectedPrescription\\\">\\r\\n        <p style=\\\"font-size: small\\\">Date: {{currentDate | date:'yyyy-MM-dd'}}</p>\\r\\n        <p style=\\\"font-size: small\\\">Name: <b>{{booking.patientName}}</b></p>\\r\\n        <p style=\\\"font-size: small\\\">Age: {{booking.patientAge}} yrs</p>\\r\\n        <mat-divider></mat-divider>\\r\\n        <mat-divider></mat-divider>\\r\\n        <div>\\r\\n            <p style=\\\"font-size: small; text-align: center\\\"><b><u>PRESCRIPTION</u></b></p>\\r\\n\\r\\n            <br>\\r\\n            <li  style=\\\"padding-bottom: 10px; font-size: small\\\" *ngFor=\\\"let item of items\\\">{{item}}</li>\\r\\n\\r\\n            <table>\\r\\n                <br>\\r\\n                <tr>\\r\\n                    <th style=\\\"font-size: medium; text-align: left\\\">\\r\\n                        {{doctor.name}}\\r\\n                    </th>\\r\\n                </tr>\\r\\n                <tr>\\r\\n                    <td style=\\\"font-size: x-small; text-align: left\\\">\\r\\n                        {{doctor.bio}}\\r\\n                    </td>\\r\\n                </tr>\\r\\n            </table>\\r\\n            <p style=\\\"font-size: x-small\\\">** No signature required. This is a electronically generated document that could only be edited by the prescriber **</p>\\r\\n\\r\\n            <mat-divider></mat-divider>\\r\\n            <mat-divider></mat-divider>\\r\\n            <br>\\r\\n            <button (click)=\\\"selectPrescription(null)\\\" style=\\\"width: 320px\\\" color=\\\"primary\\\" mat-flat-button>Back</button>\\r\\n\\r\\n        </div>\\r\\n    </ng-container>\\r\\n</div>\\r\\n\"","export default \"<div class=\\\"mat-card-style\\\">\\r\\n\\r\\n    <app-page-title [title]=\\\"title\\\"></app-page-title>\\r\\n    <h5 *ngIf=\\\"!editable\\\">Name: {{patient.title}} {{patient.name}}</h5>\\r\\n    <h6 *ngIf=\\\"!editable\\\">Age: {{patient.age}}</h6>\\r\\n    <br>\\r\\n\\r\\n    <ng-container *ngIf=\\\"editable\\\">\\r\\n        <mat-form-field style=\\\"width: 240px\\\" class=\\\"example-full-width\\\">\\r\\n            <mat-label>Title</mat-label>\\r\\n            <mat-select [(value)]=\\\"patient.title\\\">\\r\\n                <ng-container *ngFor=\\\"let title of titles\\\" >\\r\\n                    <mat-option value=\\\"{{title.value}}\\\">\\r\\n                        {{title.value}}\\r\\n                    </mat-option>\\r\\n                </ng-container>\\r\\n            </mat-select>\\r\\n        </mat-form-field>\\r\\n\\r\\n        <mat-form-field style=\\\"width: 240px\\\" class=\\\"example-full-width\\\">\\r\\n            <mat-label>Name: {{patient.name}}</mat-label>\\r\\n            <input matInput placeholder=\\\"\\\" [value]=\\\"patient.name\\\">\\r\\n        </mat-form-field>\\r\\n\\r\\n        <mat-form-field  style=\\\"width: 240px\\\" class=\\\"example-full-width\\\">\\r\\n            <mat-label>Birthday:</mat-label>\\r\\n            <input matInput placeholder=\\\"\\\"  value=\\\"{{patient.birthday}}\\\">\\r\\n        </mat-form-field>\\r\\n\\r\\n        <mat-form-field  style=\\\"width: 240px\\\" class=\\\"example-full-width\\\">\\r\\n            <mat-label>Allergies:</mat-label>\\r\\n            <textarea matInput placeholder=\\\"\\\" value=\\\"{{patient.allergies}}\\\"></textarea>\\r\\n        </mat-form-field>\\r\\n\\r\\n        <mat-form-field  style=\\\"width: 240px\\\" class=\\\"example-full-width\\\">\\r\\n            <mat-label>Medical History:</mat-label>\\r\\n            <textarea matInput placeholder=\\\"\\\" value=\\\"{{patient.medicalHistory}}\\\"></textarea>\\r\\n        </mat-form-field>\\r\\n\\r\\n        <br>\\r\\n        <br>\\r\\n        <button style=\\\"width: 240px\\\" mat-raised-button color=\\\"primary\\\" (click)=\\\"toggleEditable(false)\\\">Save</button>\\r\\n        <br>\\r\\n        <br>\\r\\n        <button style=\\\"width: 240px\\\" mat-raised-button color=\\\"secondary\\\" (click)=\\\"toggleEditable(false)\\\">Back</button>\\r\\n        <br>\\r\\n    </ng-container>\\r\\n\\r\\n    <ng-container *ngIf=\\\"!editable\\\">\\r\\n\\r\\n        <button style=\\\"width: 320px\\\" (click)=\\\"goToMyAppointments()\\\" mat-raised-button color=\\\"primary\\\">My Bookings</button>\\r\\n        <br>\\r\\n        <br>\\r\\n        <button style=\\\"width: 320px\\\" mat-raised-button (click)=\\\"toggleEditable(true)\\\">Edit Profile</button>\\r\\n        <br>\\r\\n        <br>\\r\\n        <button style=\\\"width: 320px\\\" mat-flat-button color=\\\"warn\\\" (click)=\\\"logOut()\\\">Log Out</button>\\r\\n        <br>\\r\\n        <br>\\r\\n<!--        <button style=\\\"width: 320px\\\" mat-stroked-button>My Finances</button>-->\\r\\n<!--        <br>-->\\r\\n<!--        <br>-->\\r\\n\\r\\n    </ng-container>\\r\\n</div>\\r\\n\"","export default \"<div class=\\\"mat-card-style\\\">\\r\\n    <br>\\r\\n    <div align=\\\"center\\\">\\r\\n        <img src=\\\"./assets/img/successfulPayment.png\\\" width=\\\"300px\\\"/>\\r\\n        <br>\\r\\n        <br>\\r\\n        <br>\\r\\n        <br>\\r\\n\\r\\n        <button mat-raised-button color=\\\"secondary\\\" style=\\\"width: 240px\\\" >Go to Profile</button>\\r\\n\\r\\n    </div>\\r\\n\\r\\n</div>\\r\\n\"","export default \"<div class=\\\"mat-card-style\\\">\\n    <p style=\\\"font-size: x-large\\\">List of Prescriptions:</p>\\n    <ng-container *ngFor=\\\"let prescription of prescriptionList; let i = index\\\">\\n        <button (click)=\\\"selectPrescription()\\\" style=\\\"width: 320px\\\" mat-raised-button>Prescription {{i+1}}</button>\\n        <br>\\n        <br>\\n    </ng-container>\\n    <br>\\n    <br>\\n    <button *ngIf=\\\"isDoctor\\\" (click)=\\\"selectPrescription()\\\" style=\\\"width: 320px; height: 50px\\\" color=\\\"accent\\\" mat-raised-button>Add New Prescription</button>\\n</div>\\n\"","export default \"<div class=\\\"mat-card-style\\\">\\r\\n    <div class=\\\"container\\\" id=\\\"test\\\" #test>\\r\\n        <p style=\\\"font-size: small\\\">Date: {{currentDate | date:'yyyy-MM-dd'}}</p>\\r\\n\\r\\n        <p style=\\\"font-size: small\\\">Name: <b>{{booking.patientTitle}}. {{booking.patientName}}</b></p>\\r\\n        <p style=\\\"font-size: small\\\">Age: {{booking.patientAge}} yrs</p>\\r\\n        <mat-divider></mat-divider>\\r\\n        <mat-divider></mat-divider>\\r\\n        <div *ngIf=\\\"preview\\\">\\r\\n\\r\\n            <br>\\r\\n            <p style=\\\"font-size: small; text-align: center\\\"><b><u>PRESCRIPTION</u></b></p>\\r\\n\\r\\n            <br>\\r\\n            <li  style=\\\"padding-bottom: 10px; font-size: small\\\" *ngFor=\\\"let item of items\\\">{{item}}</li>\\r\\n\\r\\n            <br>\\r\\n\\r\\n            <p style=\\\"font-size: x-small\\\">** No signature required. This is a electronically generated document that was prepared by the following prescriber **</p>\\r\\n            <table>\\r\\n                <tr>\\r\\n                    <th style=\\\"font-size: medium; text-align: left\\\">\\r\\n                        {{doctor.name}}\\r\\n                    </th>\\r\\n                </tr>\\r\\n                <tr>\\r\\n                    <td style=\\\"font-size: x-small; text-align: left\\\">\\r\\n                        {{doctor.bio}}\\r\\n                    </td>\\r\\n                </tr>\\r\\n            </table>\\r\\n\\r\\n    <!--        <mat-divider></mat-divider>-->\\r\\n    <!--        <mat-divider></mat-divider>-->\\r\\n            <br>\\r\\n        </div>\\r\\n    </div>\\r\\n    <div *ngIf=\\\"!preview\\\">\\r\\n        <mat-form-field  style=\\\"width: 320px\\\" class=\\\"example-full-width\\\">\\r\\n            <mat-label>Add prescriptions:</mat-label>\\r\\n            <textarea rows=\\\"10\\\" cols=\\\"50\\\" matInput placeholder=\\\"Start typing..\\\"></textarea>\\r\\n        </mat-form-field>\\r\\n<!--        <p>Start adding items below</p>-->\\r\\n<!--        <div *ngFor=\\\"let item of prescriptionList\\\">-->\\r\\n<!--            <table align=\\\"center\\\">-->\\r\\n<!--                <tr>-->\\r\\n<!--                    <td>-->\\r\\n<!--                        <mat-form-field style=\\\"width: 300px\\\">-->\\r\\n<!--                            <input style=\\\"font-size: small\\\" matInput type=\\\"text\\\" placeholder=\\\"Type here..\\\" value=\\\"{{item}}\\\">-->\\r\\n<!--                        </mat-form-field>-->\\r\\n<!--                    </td>-->\\r\\n<!--                </tr>-->\\r\\n<!--            </table>-->\\r\\n<!--        </div>-->\\r\\n<!--        <div align=\\\"center\\\">-->\\r\\n<!--            <button style=\\\"width: 90px\\\" color=\\\"primary\\\" mat-flat-button>Add more</button>-->\\r\\n<!--        </div>-->\\r\\n<!--        <br>-->\\r\\n\\r\\n<!--        <mat-divider></mat-divider>-->\\r\\n<!--        <mat-divider></mat-divider>-->\\r\\n        <br>\\r\\n    </div>\\r\\n\\r\\n    <button (click)=\\\"previewToggle('')\\\" *ngIf=\\\"preview\\\" style=\\\"width: 320px\\\" color=\\\"primary\\\" mat-flat-button>Exit Preview</button>\\r\\n    <input *ngIf=\\\"preview\\\" type=\\\"button\\\" value=\\\"Download PDF\\\" class=\\\"btn btn-success\\\" (click)=\\\"SavePDF()\\\">\\r\\n    <button (click)=\\\"previewToggle('preview')\\\" *ngIf=\\\"!preview\\\" style=\\\"width: 320px\\\" color=\\\"secondary\\\" mat-raised-button>Preview Prescription</button>\\r\\n    <br>\\r\\n    <br>\\r\\n\\r\\n    <button *ngIf=\\\"!preview\\\" style=\\\"width: 320px\\\" color=\\\"primary\\\" mat-flat-button>Save</button>\\r\\n    <br>\\r\\n    <br>\\r\\n    <button  *ngIf=\\\"!preview\\\" mat-raised-button color=\\\"secondary\\\" style=\\\"width: 320px\\\" (click)=\\\"goToAppointmentList(false)\\\">Back</button>\\r\\n\\r\\n</div>\\r\\n\"","export default \"<div [ngClass]=\\\"isOverTheDoctorCard(professional.userName) ? 'shadow' : ''\\\" (mouseenter)=\\\"onMouseEnter(professional.userName)\\\" (mouseleave)=\\\"onMouseLeave()\\\">\\r\\n    <mat-card (click)=\\\"selectProfessional_(professional.userName)\\\" style=\\\"width: 320px; height: auto\\\">\\r\\n        <table>\\r\\n            <tr>\\r\\n                <th style=\\\"width: 120px; height: 100px; align-content: center\\\">\\r\\n                    <img src=\\\"./assets/img/doctor2.jpg\\\" width=\\\"100px\\\" height=\\\"100px\\\">\\r\\n                </th>\\r\\n                <th>\\r\\n                </th>\\r\\n                <th>\\r\\n                    <table>\\r\\n                        <tr>\\r\\n                            <th style=\\\"font-size: medium; text-align: left\\\">\\r\\n                                {{professional.title}} {{professional.firstName}} {{professional.lastName}}\\r\\n                            </th>\\r\\n                        </tr>\\r\\n                        <tr>\\r\\n                            <td style=\\\"font-size: x-small; color: #797D7F;  text-align: left\\\">\\r\\n                                {{professional?.qualifications}}\\r\\n                            </td>\\r\\n                        </tr>\\r\\n                        <tr>\\r\\n                            <mat-divider style=\\\"left: inherit; width: 160px\\\"></mat-divider>\\r\\n                        </tr>\\r\\n                        <tr>\\r\\n                        </tr>\\r\\n                        <tr>\\r\\n                        </tr>\\r\\n                        <tr>\\r\\n                        </tr>\\r\\n                        <tr>\\r\\n                            <td style=\\\"font-size: small; color: #797D7F;  text-align: left\\\">\\r\\n                                Specializations:\\r\\n                            </td>\\r\\n                        </tr>\\r\\n                        <tr>\\r\\n                        </tr>\\r\\n<!--                        <div *ngFor=\\\"let speciality of specialities\\\">-->\\r\\n                            <tr>\\r\\n                                <td style=\\\" color: #797D7F; font-size: x-small; text-align: left\\\">\\r\\n                                    {{professional?.specialityA}}\\r\\n                                </td>\\r\\n                            </tr>\\r\\n                            <tr>\\r\\n                                <td style=\\\" color: #797D7F; font-size: x-small; text-align: left\\\">\\r\\n                                    {{professional?.specialityB}}\\r\\n                                </td>\\r\\n                            </tr>\\r\\n                            <tr>\\r\\n                                <td style=\\\" color: #797D7F; font-size: x-small; text-align: left\\\">\\r\\n                                    {{professional?.specialityC}}\\r\\n                                </td>\\r\\n                            </tr>\\r\\n<!--                        </div>-->\\r\\n                        <tr>\\r\\n                            <mat-divider style=\\\" color: #797D7F; left: inherit; width: 160px\\\"></mat-divider>\\r\\n                        </tr>\\r\\n                        <tr>\\r\\n                        </tr>\\r\\n                        <tr>\\r\\n                        </tr>\\r\\n                        <tr>\\r\\n                        </tr>\\r\\n                        <tr>\\r\\n                            <td style=\\\" color: #797D7F; font-size: small; text-align: left\\\">\\r\\n                                Charge per consultation:\\r\\n                            </td>\\r\\n                        </tr>\\r\\n                        <tr>\\r\\n                        </tr>\\r\\n                        <tr>\\r\\n                            <td style=\\\" color: #797D7F; font-size: x-small; text-align: left\\\">\\r\\n                                {{currency}} {{professional.priceForAppointment}}\\r\\n                            </td>\\r\\n                        </tr>\\r\\n                        <tr>\\r\\n                    </table>\\r\\n                </th>\\r\\n            </tr>\\r\\n        </table>\\r\\n        <table>\\r\\n            <tr>\\r\\n                <th width=\\\"240px\\\">\\r\\n\\r\\n                </th>\\r\\n                <th>\\r\\n                    <ng-container *ngIf=\\\"false && professional.isSkypePreferred\\\">\\r\\n                        <img src=\\\"./assets/img/Icon-Skype.jpg\\\" width=\\\"12px\\\" height=\\\"12px\\\">\\r\\n                    </ng-container>\\r\\n                    <ng-container *ngIf=\\\"false && professional.isWhatsAppPreferred\\\">\\r\\n                        <span style=\\\"padding-left: 7px\\\"><img src=\\\"./assets/img/whatsapp.jpg\\\" width=\\\"15px\\\" height=\\\"15px\\\"></span>\\r\\n                    </ng-container>\\r\\n                </th>\\r\\n            </tr>\\r\\n        </table>\\r\\n    </mat-card>\\r\\n</div>\\r\\n<br>\\r\\n\"","export default \"<div class=\\\"mat-card-style\\\">\\r\\n\\r\\n    <div align=\\\"center\\\">\\r\\n    <mat-form-field style=\\\"width: 250px\\\">\\r\\n        <input matInput type=\\\"text\\\" placeholder=\\\"Search by name (Optional)\\\" [(ngModel)]=\\\"searchString\\\">\\r\\n    </mat-form-field>\\r\\n\\r\\n    <br>\\r\\n    <mat-form-field  style=\\\"width: 240px\\\" >\\r\\n        <mat-label>Category</mat-label>\\r\\n        <mat-select [(value)]=\\\"selectedCategory\\\">\\r\\n            <ng-container *ngFor=\\\"let category of categories\\\">\\r\\n                <mat-option value=\\\"{{category.category}}\\\">{{category.category}}</mat-option>\\r\\n            </ng-container>\\r\\n        </mat-select>\\r\\n    </mat-form-field>\\r\\n    <ng-container *ngIf=\\\"selectedCategory !== undefined && selectedCategory !== null && selectedCategory !== 'General Practitioner'\\\">\\r\\n        <mat-form-field  style=\\\"width: 240px\\\" >\\r\\n            <mat-label>Specialization</mat-label>\\r\\n            <mat-select [(value)]=\\\"selectedSpecialization\\\">\\r\\n                <ng-container *ngFor=\\\"let subCategory of specializations\\\">\\r\\n                    <mat-option value=\\\"{{subCategory}}\\\">{{dataHandlerService.convertCamelCaseToSentence(subCategory)}}</mat-option>\\r\\n                </ng-container>\\r\\n            </mat-select>\\r\\n        </mat-form-field>\\r\\n    </ng-container>\\r\\n\\r\\n        <button (click)=\\\"search(searchString, selectedCategory, selectedSpecialization)\\\" style=\\\"width: 90px\\\" color=\\\"primary\\\" mat-flat-button>Search</button>\\r\\n    </div>\\r\\n    <br>\\r\\n    <mat-divider></mat-divider>\\r\\n    <br>\\r\\n    <p style=\\\"font-size: x-large\\\">Search Results:</p>\\r\\n    <ng-container *ngIf=\\\"professionalList.length === 0\\\">\\r\\n        <br>\\r\\n        <br>\\r\\n\\r\\n        <p style=\\\"color: crimson\\\"><b>------   Sorry, No results found   ------</b></p>\\r\\n        <br>\\r\\n\\r\\n    </ng-container>\\r\\n    <ng-container *ngFor=\\\"let doc of professionalList; let i=index\\\">\\r\\n        <ng-container *ngIf=\\\"i >= PAGINATION_START && i < PAGINATION_END\\\">\\r\\n            <app-professional-card\\r\\n            [professional]=\\\"doc\\\"\\r\\n            (selectProfessional)=\\\"selectProfessional($event)\\\"\\r\\n            ></app-professional-card>\\r\\n        </ng-container>\\r\\n    </ng-container>\\r\\n    <ng-container *ngIf=\\\"professionalList.length > 0\\\">\\r\\n        <mat-paginator [length]=\\\"professionalList.length\\\"\\r\\n                       [pageSize]=\\\"RESULTS_PER_PAGE\\\"\\r\\n                       (page)=\\\"goToPage($event)\\\"\\r\\n        >\\r\\n        </mat-paginator>\\r\\n    </ng-container>\\r\\n</div>\\r\\n\\r\\n\"","export default \"<div class=\\\"mat-card-style\\\">\\r\\n    <table align=\\\"center\\\">\\r\\n        <tr>\\r\\n            <td>\\r\\n                <mat-form-field style=\\\"width: 200px\\\">\\r\\n                    <input matInput type=\\\"text\\\" placeholder=\\\"Search by name\\\" value=\\\"{{searchString}}\\\">\\r\\n                </mat-form-field>\\r\\n            </td>\\r\\n            <td>\\r\\n                &nbsp;\\r\\n            </td>\\r\\n            <td>\\r\\n                <button (click)=\\\"search()\\\" style=\\\"width: 80px\\\" color=\\\"primary\\\" mat-flat-button>Search</button>\\r\\n            </td>\\r\\n        </tr>\\r\\n    </table>\\r\\n    <br>\\r\\n\\r\\n    <div align=\\\"center\\\" *ngIf=\\\"professionalListType==='Consultant'\\\">\\r\\n        <mat-form-field style=\\\"width: 290px\\\">\\r\\n            <mat-label>Select specialization [optional]</mat-label>\\r\\n            <mat-select [(value)]=\\\"selectedProfessionalType\\\">\\r\\n                <mat-option>None</mat-option>\\r\\n                <mat-option value=\\\"option1\\\">Option 1</mat-option>\\r\\n                <mat-option value=\\\"option2\\\">Option 2</mat-option>\\r\\n                <mat-option value=\\\"option3\\\">Option 3</mat-option>\\r\\n            </mat-select>\\r\\n        </mat-form-field>\\r\\n\\r\\n    <mat-divider></mat-divider>\\r\\n    <p style=\\\"font-size: x-large\\\">List of {{professionalListType}}s:</p>\\r\\n\\r\\n    <div *ngFor=\\\"let doc of professionalList\\\">\\r\\n        <mat-card (click)=\\\"selectDoc(doc.id)\\\" style=\\\"width: 320px; height: auto\\\">\\r\\n            <table>\\r\\n                <tr>\\r\\n                    <th style=\\\"width: 120px; height: 100px;\\\">\\r\\n                        <img src=\\\"./assets/img/doctor2.jpg\\\" width=\\\"100px\\\" height=\\\"100px\\\">\\r\\n                    </th>\\r\\n                    <th>\\r\\n                    </th>\\r\\n                    <th>\\r\\n                        <table>\\r\\n                            <tr>\\r\\n                                <th style=\\\"font-size: medium; text-align: left\\\">\\r\\n                                    {{doc.name}}\\r\\n                                </th>\\r\\n                            </tr>\\r\\n                            <tr>\\r\\n                                <td style=\\\"font-size: x-small; text-align: left\\\">\\r\\n                                    {{doc.bio}}\\r\\n                                </td>\\r\\n                            </tr>\\r\\n                            <tr>\\r\\n                                <mat-divider style=\\\"left: inherit; width: 160px\\\"></mat-divider>\\r\\n                            </tr>\\r\\n                            <tr>\\r\\n                            </tr>\\r\\n                            <tr>\\r\\n                            </tr>\\r\\n                            <tr>\\r\\n                            </tr>\\r\\n                            <tr>\\r\\n                                <td style=\\\"font-size: small; text-align: left\\\">\\r\\n                                    Specializations:\\r\\n                                </td>\\r\\n                            </tr>\\r\\n                            <tr>\\r\\n                            </tr>\\r\\n                            <div *ngFor=\\\"let speciality of doc.specialities\\\">\\r\\n                                <tr>\\r\\n                                    <td style=\\\"font-size: x-small; text-align: left\\\">\\r\\n                                        {{speciality}}\\r\\n                                    </td>\\r\\n                                </tr>\\r\\n                            </div>\\r\\n                            <tr>\\r\\n                                <mat-divider style=\\\"left: inherit; width: 160px\\\"></mat-divider>\\r\\n                            </tr>\\r\\n                            <tr>\\r\\n                            </tr>\\r\\n                            <tr>\\r\\n                            </tr>\\r\\n                            <tr>\\r\\n                            </tr>\\r\\n                            <tr>\\r\\n                                <td style=\\\"font-size: small; text-align: left\\\">\\r\\n                                    Charge per consultation:\\r\\n                                </td>\\r\\n                            </tr>\\r\\n                            <tr>\\r\\n                            </tr>\\r\\n                            <tr>\\r\\n                                <td style=\\\"font-size: x-small; text-align: left\\\">\\r\\n                                    {{doc.consultationPrice}}\\r\\n                                </td>\\r\\n                            </tr>\\r\\n                            <tr>\\r\\n                        </table>\\r\\n                    </th>\\r\\n                </tr>\\r\\n            </table>\\r\\n<!--            <table>-->\\r\\n<!--                <tr>-->\\r\\n<!--                    <th width=\\\"240px\\\">-->\\r\\n\\r\\n<!--                    </th>-->\\r\\n<!--                    <th>-->\\r\\n<!--                        <ng-container *ngIf=\\\"doc.isSkypePreferred\\\">-->\\r\\n<!--                            <img src=\\\"./assets/img/Icon-Skype.jpg\\\" width=\\\"12px\\\" height=\\\"12px\\\">-->\\r\\n<!--                        </ng-container>-->\\r\\n<!--                        <ng-container *ngIf=\\\"doc.isWhatsAppPreferred\\\">-->\\r\\n<!--                            <span style=\\\"padding-left: 7px\\\"><img src=\\\"./assets/img/whatsapp.jpg\\\" width=\\\"15px\\\" height=\\\"15px\\\"></span>-->\\r\\n<!--                        </ng-container>-->\\r\\n<!--                    </th>-->\\r\\n<!--                </tr>-->\\r\\n<!--            </table>-->\\r\\n        </mat-card>\\r\\n        <br>\\r\\n    </div>\\r\\n\\r\\n    </div>\\r\\n</div>\\r\\n\"","export default \"<div align=\\\"center\\\">\\r\\n    <br>\\r\\n    <br>\\r\\n    <mat-tab-group style=\\\"width: 320px\\\" mat-align-tabs=\\\"center\\\">\\r\\n        <ng-container>\\r\\n        <mat-tab label=\\\"Existing User\\\">\\r\\n            <div class=\\\"mat-card-style\\\" align=\\\"center\\\">\\r\\n                <div class=\\\"example-container\\\">\\r\\n                    <mat-form-field style=\\\"width: 240px\\\" appearance=\\\"legacy\\\">\\r\\n                        <mat-label>Email</mat-label>\\r\\n                        <input [(ngModel)]=\\\"email\\\" matInput>\\r\\n                    </mat-form-field>\\r\\n                    <br>\\r\\n                    <mat-form-field style=\\\"width: 240px\\\" appearance=\\\"legacy\\\">\\r\\n                        <mat-label>Password</mat-label>\\r\\n                        <input matInput [(ngModel)]=\\\"pass\\\" [type]=\\\"hide ? 'password' : 'text'\\\">\\r\\n                    </mat-form-field>\\r\\n                    <br>\\r\\n                    <br>\\r\\n                    <button [disabled]=\\\"!(email && pass)\\\" (click)=\\\"logIn()\\\" style=\\\"width: 240px\\\" mat-flat-button color=\\\"primary\\\">Log In</button>\\r\\n                    <br>\\r\\n                    <br>\\r\\n                    <button disabled style=\\\"width: 180px\\\"  mat-stroked-button color=\\\"link\\\">Forgot My Password</button>\\r\\n                    <br>\\r\\n                </div>\\r\\n            </div>\\r\\n        </mat-tab>\\r\\n        </ng-container>\\r\\n        <ng-container *ngIf=\\\"isSignUp\\\">\\r\\n            <mat-tab label=\\\"New User\\\">\\r\\n                <div class=\\\"mat-card-style\\\" align=\\\"center\\\">\\r\\n                    <br>\\r\\n                    <p style=\\\"color: crimson\\\" *ngIf=\\\"isIncompleteErrorAvailable\\\">** You have some unfilled fields</p>\\r\\n                    <div align=\\\"left\\\" style=\\\"padding-left: 55px\\\">\\r\\n                        <mat-radio-group aria-label=\\\"Select an option\\\" (change)=\\\"setIsDoctor($event)\\\">\\r\\n                            <mat-radio-button [checked]='true' value=false>I'm a Patient</mat-radio-button>\\r\\n                            <mat-radio-button value=true>I'm a Medical Professional</mat-radio-button>\\r\\n                            <br>\\r\\n                        </mat-radio-group>\\r\\n                    </div>\\r\\n                    <br>\\r\\n                    <div>\\r\\n                        <mat-form-field style=\\\"width: 240px\\\"  appearance=\\\"legacy\\\">\\r\\n                            <mat-label>Title</mat-label>\\r\\n                            <mat-select required [(value)]=\\\"title\\\">\\r\\n                                <ng-container *ngFor=\\\"let title of titles\\\" >\\r\\n                                    <mat-option value=\\\"{{title.value}}\\\">\\r\\n                                        {{title.value}}\\r\\n                                    </mat-option>\\r\\n                                </ng-container>\\r\\n                            </mat-select>\\r\\n<!--                            <input matInput required #input3 [(ngModel)]='title'>-->\\r\\n                        </mat-form-field>\\r\\n                        <br>\\r\\n                    </div>\\r\\n                    <div>\\r\\n                        <mat-form-field style=\\\"width: 240px\\\" appearance=\\\"legacy\\\">\\r\\n                            <mat-label>First Name</mat-label>\\r\\n                            <input required matInput #input1 [(ngModel)]='firstName'>\\r\\n                        </mat-form-field>\\r\\n                        <br>\\r\\n                        <mat-form-field style=\\\"width: 240px\\\" appearance=\\\"legacy\\\">\\r\\n                            <mat-label>Last Name</mat-label>\\r\\n                            <input required matInput #input_ln [(ngModel)]='lastName'>\\r\\n                        </mat-form-field>\\r\\n                        <br>\\r\\n                        <mat-form-field style=\\\"width: 240px\\\"  appearance=\\\"legacy\\\">\\r\\n                            <mat-label>Email</mat-label>\\r\\n                            <input required matInput #input2 [(ngModel)]='email'>\\r\\n                        </mat-form-field>\\r\\n                        <br>\\r\\n                        <mat-form-field style=\\\"width: 240px\\\"  appearance=\\\"legacy\\\">\\r\\n                            <mat-label>Gender *</mat-label>\\r\\n                            <mat-select (selectionChange)=\\\"setGender($event.value)\\\">\\r\\n                                <mat-option required *ngFor=\\\"let gender of genders\\\" [value]=\\\"gender.value\\\">\\r\\n                                    {{gender.viewValue}}\\r\\n                                </mat-option>\\r\\n                            </mat-select>\\r\\n                        </mat-form-field>\\r\\n                        <br>\\r\\n                    </div>\\r\\n                    <div [hidden]=\\\"isDoctor\\\">\\r\\n                        <mat-form-field style=\\\"width: 240px\\\"  appearance=\\\"legacy\\\">\\r\\n                            <mat-label>Birthday</mat-label>\\r\\n                            <input matInput required [(ngModel)]='birthday'>\\r\\n                        </mat-form-field>\\r\\n                        <br>\\r\\n                    </div>\\r\\n                    <div>\\r\\n                        <mat-form-field style=\\\"width: 240px\\\"  appearance=\\\"legacy\\\">\\r\\n                            <mat-label>WhatsApp Number</mat-label>\\r\\n                            <input required matInput #input7 [(ngModel)]='whatsAppNumber'>\\r\\n                        </mat-form-field>\\r\\n                    </div>\\r\\n                    <div>\\r\\n                        <mat-form-field style=\\\"width: 240px\\\"  appearance=\\\"legacy\\\">\\r\\n                            <mat-label>Other Contact Number (Optional)</mat-label>\\r\\n                            <input required matInput #input7 [(ngModel)]='contactNumber'>\\r\\n                        </mat-form-field>\\r\\n                    </div>\\r\\n                    <!--                <div>-->\\r\\n                    <!--                    <mat-form-field style=\\\"width: 240px\\\"  appearance=\\\"legacy\\\">-->\\r\\n                    <!--                        <mat-label>Skype ID [optional]</mat-label>-->\\r\\n                    <!--                        <input matInput #input6 [(ngModel)]='skypeId'>-->\\r\\n                    <!--                    </mat-form-field>-->\\r\\n                    <!--                </div>-->\\r\\n                    <div [hidden]=\\\"isDoctor\\\">\\r\\n                        <mat-form-field style=\\\"width: 240px\\\"  appearance=\\\"legacy\\\">\\r\\n                            <mat-label>Known Allergies</mat-label>\\r\\n                            <textarea type=\\\"text\\\" matInput #input8 [(ngModel)]='knownAllergies'></textarea>\\r\\n                        </mat-form-field>\\r\\n                        <br>\\r\\n                    </div>\\r\\n                    <mat-form-field style=\\\"width: 240px\\\"  appearance=\\\"legacy\\\">\\r\\n                        <mat-label>Preferred Password</mat-label>\\r\\n                        <input matInput required [type]=\\\"hide ? 'password' : 'text'\\\"  #input8 [(ngModel)]='pass'>\\r\\n                    </mat-form-field>\\r\\n                    <br>\\r\\n                    <mat-form-field style=\\\"width: 240px\\\"  appearance=\\\"legacy\\\">\\r\\n                        <mat-label>Confirm Password</mat-label>\\r\\n                        <input matInput required [type]=\\\"hide ? 'password' : 'text'\\\" #input9 [(ngModel)]='conPass'>\\r\\n                    </mat-form-field>\\r\\n                    <br>\\r\\n                    <br>\\r\\n                    <button style=\\\"width: 240px\\\" mat-flat-button color=\\\"primary\\\" (click)=\\\"SignUp()\\\">Sign Up</button>\\r\\n                    <br>\\r\\n                    <br>\\r\\n                    <p style=\\\"color: crimson\\\" *ngIf=\\\"isIncompleteErrorAvailable\\\">** You have some unfilled fields</p>\\r\\n                </div>\\r\\n            </mat-tab>\\r\\n        </ng-container>\\r\\n\\r\\n    </mat-tab-group>\\r\\n</div>\\r\\n\"","export default \"<div class=\\\"mat-card-style\\\" align=\\\"center\\\">\\n    <ng-container *ngIf=\\\"modalType === 'LOGIN_REDIRECT'\\\">\\n        <h6 *ngIf=\\\"dismissible\\\" style=\\\"color: crimson\\\">Sorry, You have to log in to confirm the appointment!</h6>\\n        <h6 *ngIf=\\\"!dismissible\\\" style=\\\"color: crimson\\\">Please Log In !</h6>\\n        <br>\\n        <button (click)=\\\"logIn()\\\" mat-raised-button color=\\\"primary\\\" style=\\\"width: 240px\\\">Log In</button>\\n        <br>\\n        <br>\\n        <button *ngIf=\\\"dismissible\\\" mat-raised-button color=\\\"secondary\\\" style=\\\"width: 240px\\\" (click)=\\\"dismiss()\\\">Back</button>\\n    </ng-container>\\n    <br>\\n    <br>\\n</div>\\n\"","/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation.\r\n\r\nPermission to use, copy, modify, and/or distribute this software for any\r\npurpose with or without fee is hereby granted.\r\n\r\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\r\nREGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\r\nAND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\r\nINDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\r\nLOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\r\nOTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\r\nPERFORMANCE OF THIS SOFTWARE.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __createBinding(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    o[k2] = m[k];\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (p !== \"default\" && !exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var s = typeof Symbol === \"function\" && Symbol.iterator, m = s && o[s], i = 0;\r\n    if (m) return m.call(o);\r\n    if (o && typeof o.length === \"number\") return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n    throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __spreadArrays() {\r\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n            r[k] = a[j];\r\n    return r;\r\n};\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n\r\nexport function __classPrivateFieldGet(receiver, privateMap) {\r\n    if (!privateMap.has(receiver)) {\r\n        throw new TypeError(\"attempted to get private field on non-instance\");\r\n    }\r\n    return privateMap.get(receiver);\r\n}\r\n\r\nexport function __classPrivateFieldSet(receiver, privateMap, value) {\r\n    if (!privateMap.has(receiver)) {\r\n        throw new TypeError(\"attempted to set private field on non-instance\");\r\n    }\r\n    privateMap.set(receiver, value);\r\n    return value;\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport {SignUpComponent} from './components/signup/sign-up.component';\r\nimport {LandingPageComponent} from './components/landing-page/landing-page.component';\r\nimport {SearchProfessionalsMainComponent} from './components/search-professionals-main/search-professionals-main.component';\r\nimport {BookingEnterTimeComponent} from './components/booking-enter-time/booking-enter-time.component';\r\nimport {BookingEnterComponent} from './components/booking-enter/booking-enter.component';\r\nimport {PaymentSuccessComponent} from './components/payment-success/payment-success.component';\r\nimport {PatientProfileComponent} from './components/patient-profile/patient-profile.component';\r\nimport {PatientBookingListComponent} from './components/patient-booking-list/patient-booking-list.component';\r\nimport {DoctorProfileComponent} from './components/doctor-profile/doctor-profile.component';\r\nimport {DoctorScheduleComponent} from './components/doctor-schedule/doctor-schedule.component';\r\nimport {DoctorSideBookingListComponent} from './components/doctor-side-booking-list/doctor-side-booking-list.component';\r\nimport {DoctorSideBookingComponent} from './components/doctor-side-booking/doctor-side-booking.component';\r\nimport {PrescriptionComponent} from './components/prescription/prescription.component';\r\nimport {PrescriptionListComponent} from './components/prescription-list/prescription-list.component';\r\n\r\nconst routes: Routes = [\r\n    { path: '', component: LandingPageComponent },\r\n    { path: 'index', component: LandingPageComponent },\r\n    { path: 'signup', component: SignUpComponent },\r\n    { path: 'searchProfessionals', component: SearchProfessionalsMainComponent },\r\n    { path: 'appointmentTime', component: BookingEnterTimeComponent },\r\n    { path: 'confirmation', component: BookingEnterComponent },\r\n    { path: 'success', component: PaymentSuccessComponent },\r\n    { path: 'user/dashboard', component: PatientProfileComponent },\r\n    { path: 'user/appointments', component: PatientBookingListComponent },\r\n    { path: 'doctor/dashboard', component: DoctorProfileComponent },\r\n    { path: 'doctor/schedule', component: DoctorScheduleComponent },\r\n    { path: 'doctor/appointments', component: DoctorSideBookingListComponent },\r\n    { path: 'appointment', component: DoctorSideBookingComponent },\r\n    { path: 'appointment/prescriptionList', component: PrescriptionListComponent },\r\n    { path: 'appointment/prescription', component: PrescriptionComponent }\r\n    ];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forRoot(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class AppRoutingModule { }\r\n","export default \".app-header-div {\\r\\n    min-width: 320px;\\r\\n    height: available;\\r\\n    /*background-color: red; !* For browsers that do not support gradients *!*/\\r\\n    /*background-image: linear-gradient(#E0C3FC, #ffffff); !* Standard syntax (must be last) *!*/\\r\\n}\\r\\n\\r\\n.app-body-div {\\r\\n    min-width: 320px;\\r\\n    padding-bottom: 100px;\\r\\n    /*background-color: red; !* For browsers that do not support gradients *!*/\\r\\n    /*background-image: linear-gradient(#ffffff, #E0C3FC); !* Standard syntax (must be last) *!*/\\r\\n}\\r\\n\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvYXBwLmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7SUFDSSxnQkFBZ0I7SUFDaEIsaUJBQWlCO0lBQ2pCLDBFQUEwRTtJQUMxRSw0RkFBNEY7QUFDaEc7O0FBRUE7SUFDSSxnQkFBZ0I7SUFDaEIscUJBQXFCO0lBQ3JCLDBFQUEwRTtJQUMxRSw0RkFBNEY7QUFDaEciLCJmaWxlIjoic3JjL2FwcC9hcHAuY29tcG9uZW50LmNzcyIsInNvdXJjZXNDb250ZW50IjpbIi5hcHAtaGVhZGVyLWRpdiB7XHJcbiAgICBtaW4td2lkdGg6IDMyMHB4O1xyXG4gICAgaGVpZ2h0OiBhdmFpbGFibGU7XHJcbiAgICAvKmJhY2tncm91bmQtY29sb3I6IHJlZDsgISogRm9yIGJyb3dzZXJzIHRoYXQgZG8gbm90IHN1cHBvcnQgZ3JhZGllbnRzICohKi9cclxuICAgIC8qYmFja2dyb3VuZC1pbWFnZTogbGluZWFyLWdyYWRpZW50KCNFMEMzRkMsICNmZmZmZmYpOyAhKiBTdGFuZGFyZCBzeW50YXggKG11c3QgYmUgbGFzdCkgKiEqL1xyXG59XHJcblxyXG4uYXBwLWJvZHktZGl2IHtcclxuICAgIG1pbi13aWR0aDogMzIwcHg7XHJcbiAgICBwYWRkaW5nLWJvdHRvbTogMTAwcHg7XHJcbiAgICAvKmJhY2tncm91bmQtY29sb3I6IHJlZDsgISogRm9yIGJyb3dzZXJzIHRoYXQgZG8gbm90IHN1cHBvcnQgZ3JhZGllbnRzICohKi9cclxuICAgIC8qYmFja2dyb3VuZC1pbWFnZTogbGluZWFyLWdyYWRpZW50KCNmZmZmZmYsICNFMEMzRkMpOyAhKiBTdGFuZGFyZCBzeW50YXggKG11c3QgYmUgbGFzdCkgKiEqL1xyXG59XHJcbiJdfQ== */\"","import { Component } from '@angular/core';\r\nimport './app.component.css';\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.css']\r\n})\r\nexport class AppComponent {\r\n  title = 'WellBeey-FE';\r\n  onActivate(event) {\r\n    window.scroll(0, 0);\r\n  }\r\n}\r\n","import { BrowserModule } from '@angular/platform-browser';\r\nimport {APP_INITIALIZER, NgModule} from '@angular/core';\r\nimport { AppRoutingModule } from './app-routing.module';\r\nimport { AppComponent } from './app.component';\r\nimport { SignUpComponent } from './components/signup/sign-up.component';\r\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\r\nimport {\r\n    MatBadgeModule,\r\n    MatButtonModule, MatButtonToggleModule,\r\n    MatCardModule,\r\n    MatChipsModule, MatDatepickerModule,\r\n    MatDividerModule, MatExpansionModule,\r\n    MatIconModule, MatNativeDateModule,\r\n    MatInputModule, MatListModule, MatOptionModule, MatRadioModule, MatSelectModule,\r\n    MatTabsModule, MatCheckboxModule, MatDialogModule, MatPaginatorModule, MatSlideToggleModule, MatProgressSpinnerModule\r\n} from '@angular/material';\r\nimport { HeaderComponent } from './components/header/header.component';\r\nimport { FooterComponent } from './components/footer/footer.component';\r\nimport { CommonBodyComponent } from './components/common-body/common-body.component';\r\nimport { LandingPageComponent } from './components/landing-page/landing-page.component';\r\nimport {FormsModule, ReactiveFormsModule} from '@angular/forms';\r\nimport { DoctorScheduleComponent } from './components/doctor-schedule/doctor-schedule.component';\r\nimport { DoctorProfileComponent } from './components/doctor-profile/doctor-profile.component';\r\nimport { SearchProfessionalsMainComponent } from './components/search-professionals-main/search-professionals-main.component';\r\nimport { DoctorSideBookingListComponent } from './components/doctor-side-booking-list/doctor-side-booking-list.component';\r\nimport { DoctorSideBookingComponent } from './components/doctor-side-booking/doctor-side-booking.component';\r\nimport { SearchProfessionalsComponent } from './components/search-professionals/search-professionals.component';\r\nimport { ContactPageComponent } from './components/contact-page/contact-page.component';\r\nimport { FaqsComponent } from './components/faqs/faqs.component';\r\nimport { PrescriptionComponent } from './components/prescription/prescription.component';\r\nimport { BookingEnterComponent } from './components/booking-enter/booking-enter.component';\r\nimport { BookingEnterTimeComponent } from './components/booking-enter-time/booking-enter-time.component';\r\nimport { PaymentSuccessComponent } from './components/payment-success/payment-success.component';\r\nimport { DoctorFinanceComponent } from './components/doctor-finance/doctor-finance.component';\r\nimport {NgbAlertModule, NgbTimepickerModule} from '@ng-bootstrap/ng-bootstrap';\r\nimport { PatientProfileComponent } from './components/patient-profile/patient-profile.component';\r\nimport { PageTitleComponent } from './components/page-title/page-title.component';\r\nimport { PatientBookingListComponent } from './components/patient-booking-list/patient-booking-list.component';\r\nimport { ModalComponent } from './components/modal/modal.component';\r\nimport {HttpClientModule} from '@angular/common/http';\r\nimport { ProfessionalCardComponent } from './components/professional-card/professional-card.component';\r\nimport { ChatSectionComponent } from './components/chat-section/chat-section.component';\r\nimport { PrescriptionListComponent } from './components/prescription-list/prescription-list.component';\r\nimport {AppService} from './app.service';\r\nimport {DatePipe} from '@angular/common';\r\nimport { TransitionPageComponent } from './components/transition-page/transition-page.component';\r\n\r\nexport function initialize(app: AppService) {\r\n    return async () => {\r\n        await app.loadModuleConfigurations();\r\n        await app.loadPermissions();\r\n        await app.userLogin();\r\n        // await app.loadUserDetails();\r\n    };\r\n}\r\n\r\n@NgModule({\r\n    declarations: [\r\n        AppComponent,\r\n        SignUpComponent,\r\n        HeaderComponent,\r\n        FooterComponent,\r\n        CommonBodyComponent,\r\n        LandingPageComponent,\r\n        DoctorScheduleComponent,\r\n        DoctorProfileComponent,\r\n        DoctorSideBookingListComponent,\r\n        DoctorSideBookingComponent,\r\n        SearchProfessionalsComponent,\r\n        ContactPageComponent,\r\n        FaqsComponent,\r\n        PrescriptionComponent,\r\n        BookingEnterComponent,\r\n        BookingEnterTimeComponent,\r\n        PaymentSuccessComponent,\r\n        DoctorFinanceComponent,\r\n        PatientProfileComponent,\r\n        SearchProfessionalsMainComponent,\r\n        PageTitleComponent,\r\n        PatientBookingListComponent,\r\n        ModalComponent,\r\n        ProfessionalCardComponent,\r\n        ChatSectionComponent,\r\n        PrescriptionListComponent,\r\n        TransitionPageComponent\r\n    ],\r\n    imports: [\r\n        BrowserModule,\r\n        AppRoutingModule,\r\n        BrowserAnimationsModule,\r\n        MatChipsModule,\r\n        MatIconModule,\r\n        MatDividerModule,\r\n        MatButtonModule,\r\n        MatTabsModule,\r\n        MatInputModule,\r\n        MatCardModule,\r\n        MatOptionModule,\r\n        MatSelectModule,\r\n        MatListModule,\r\n        ReactiveFormsModule,\r\n        FormsModule,\r\n        MatExpansionModule,\r\n        MatRadioModule,\r\n        MatBadgeModule,\r\n        MatNativeDateModule,\r\n        MatButtonToggleModule,\r\n        MatDatepickerModule,\r\n        MatCheckboxModule,\r\n        NgbTimepickerModule,\r\n        NgbAlertModule,\r\n        MatDialogModule,\r\n        HttpClientModule,\r\n        MatPaginatorModule,\r\n        MatSlideToggleModule,\r\n        MatProgressSpinnerModule\r\n    ],\r\n  providers: [\r\n      DatePipe,\r\n      {\r\n          provide: APP_INITIALIZER,\r\n          useFactory: initialize,\r\n          deps: [AppService],\r\n          multi: true\r\n      }\r\n  ],\r\n  bootstrap: [AppComponent],\r\n  entryComponents: [ ModalComponent ]\r\n})\r\nexport class AppModule { }\r\n","import { Injectable } from '@angular/core';\nimport {Constants, currencyCodes, DoctorTitles, DoctorType} from './utils/Constants';\nimport {DataKey, DataStoreService, SessionStorageKeys} from './services/data-store.service';\nimport {UserData} from './models/user-data';\nimport {HttpHeaders, HttpParams} from '@angular/common/http';\nimport {DataLoaderService} from './services/data-loader.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AppService {\n\n  constructor(\n      private dataStore: DataStoreService,\n      private dataLoaderService: DataLoaderService\n  ) { }\n\n  public loadModuleConfigurations() {\n  }\n\n  public loadPermissions() {\n  }\n\n  public userLogin() {\n  }\n\n  public loadUserDetails() {\n    this.dataStore.set(DataKey.loggedInUser, this.loadUserData(), true);\n    sessionStorage.setItem(SessionStorageKeys.loggedInUser, JSON.stringify(this.loadUserData()));\n  }\n\n  private loadUserDataFromMock() {\n    const data = {\n      doctor: true,\n      patientData: null,\n      doctorData: {\n        userName: 'johndoe@gmail.com',\n        title: DoctorTitles.DR,\n        firstName: 'John',\n        lastName: 'Doe',\n        contactNumber: '+94773092323',\n        whatsAppNumber: '+94773092323',\n        regNo: 'reg/34234235',\n        priceForAppointment: '1650',\n        priceCurrency: currencyCodes.LKR,\n        qualifications: 'MBBS (India), MS, MCh, MChir, FLT-HPBS, FACS, Kozhikode, India',\n        professionalType: DoctorType.CON,\n        specialityA: 'Pulmonologist',\n        specialityB: 'Dermatologist',\n        specialityC: '',\n        availableForAppointment: 'true'\n      }\n    };\n    return data;\n  }\n\n  private loadUserData() {\n    let userData = null;\n    const url = Constants.BASE_URL + Constants.GET_USER_DATA + 'dfg';\n    this.dataLoaderService.get<UserData>(url, new HttpParams(), new HttpHeaders(), DataKey.loggedInUser)\n        .then((data: any) => {\n          if (data && data.status && data.status.code === 1) {\n            userData = data.data[0];\n            return userData;\n          } else if (data && data.status && data.status.code === -1) {\n            return null;\n\n            return {\n              \"patientData\": null,\n              \"doctorData\": {\n                \"userName\": \"dfg\",\n                \"title\": \"Dr\",\n                \"firstName\": \"John\",\n                \"lastName\": \"Doe\",\n                \"professionalType\": \"CON\",\n                \"specialityA\": \"Pulmonologist\",\n                \"specialityB\": \"Dermatologist\",\n                \"specialityC\": \"\",\n                \"regNo\": \"reg/34234235\",\n                \"qualifications\": \"MBBS (India), MS, MCh, MChir, FLT-HPBS, FACS, Kozhikode, India\",\n                \"priceForAppointment\": '',\n                \"availableForAppointment\": false\n              },\n              \"doctor\": true\n            };\n            return {\n              \"patientData\": {\n                \"userName\": \"kavin88@abc.com\",\n                \"title\": \"Mr\",\n                \"firstName\": \"Milinda\",\n                \"lastName\": \"Sandaruwan\",\n                \"birthday\": \"1994-12-31T00:00:00.000+0000\",\n                \"address\": null,\n                \"contactNumber\": \"0123456789\",\n                \"whatsAppNumber\": \"0123456789\",\n                \"userAllergies\": \"mata allergies nehe\",\n                \"male\": false\n              },\n              \"doctorData\": null,\n              \"doctor\": false\n            };\n          }\n        });\n  }\n}\n","export default \".mat-card-style {\\r\\n    margin-left: auto;\\r\\n    margin-right: auto;\\r\\n    margin-top: 30px;\\r\\n    min-width: 320px;\\r\\n    max-width: 320px;\\r\\n}\\r\\n\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvY29tcG9uZW50cy9ib29raW5nLWVudGVyLXRpbWUvYm9va2luZy1lbnRlci10aW1lLmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7SUFDSSxpQkFBaUI7SUFDakIsa0JBQWtCO0lBQ2xCLGdCQUFnQjtJQUNoQixnQkFBZ0I7SUFDaEIsZ0JBQWdCO0FBQ3BCIiwiZmlsZSI6InNyYy9hcHAvY29tcG9uZW50cy9ib29raW5nLWVudGVyLXRpbWUvYm9va2luZy1lbnRlci10aW1lLmNvbXBvbmVudC5jc3MiLCJzb3VyY2VzQ29udGVudCI6WyIubWF0LWNhcmQtc3R5bGUge1xyXG4gICAgbWFyZ2luLWxlZnQ6IGF1dG87XHJcbiAgICBtYXJnaW4tcmlnaHQ6IGF1dG87XHJcbiAgICBtYXJnaW4tdG9wOiAzMHB4O1xyXG4gICAgbWluLXdpZHRoOiAzMjBweDtcclxuICAgIG1heC13aWR0aDogMzIwcHg7XHJcbn1cclxuIl19 */\"","import { Component, OnInit } from '@angular/core';\r\nimport {Router} from '@angular/router';\r\nimport {DoctorType, MODAL_TYPES, TRANSITION_PAGE_TYPE} from '../../utils/Constants';\r\nimport {DataKey, DataStoreService, SessionStorageKeys} from '../../services/data-store.service';\r\nimport {DatePipe} from '@angular/common';\r\nimport {timeout} from 'rxjs/operators';\r\nimport {DataLoaderService} from '../../services/data-loader.service';\r\n\r\n@Component({\r\n  selector: 'app-booking-enter-time',\r\n  templateUrl: './booking-enter-time.component.html',\r\n  styleUrls: ['./booking-enter-time.component.css']\r\n})\r\nexport class BookingEnterTimeComponent implements OnInit {\r\n\r\n  transitionType = null;\r\n  doctor = {\r\n    id: 1,\r\n    name: 'Dr. Nuwan Chinthaka',\r\n    professionalType: DoctorType.CON,\r\n    bio: 'MD [NIZHNY NOVGOROD STATE MED ACA] RUSSIA(2008)',\r\n    specialities: [\r\n      'Consultant Neurologist',\r\n      'Consultant Pediatrician'\r\n    ],\r\n    consultationPrice: 'Rs. 2000.00'\r\n  };\r\n  availableAppointmentsForProfessional = [];\r\n\r\n  isScheduleVisible = false;\r\n\r\n  days = [\r\n    {\r\n      date: this.getDate(0).date,\r\n      day: this.getDate(0).day,\r\n      available: true\r\n    },\r\n    {\r\n      date: this.getDate(1).date,\r\n      day: this.getDate(1).day,\r\n      available: true\r\n    },\r\n    {\r\n      date: this.getDate(2).date,\r\n      day: this.getDate(2).day,\r\n      available: true\r\n    },\r\n    {\r\n      date: this.getDate(3).date,\r\n      day: this.getDate(3).day,\r\n      available: true\r\n    },\r\n    {\r\n      date: this.getDate(4).date,\r\n      day: this.getDate(4).day,\r\n      available: true\r\n    },\r\n    {\r\n      date: this.getDate(5).date,\r\n      day: this.getDate(5).day,\r\n      available: true\r\n    },\r\n    {\r\n      date: this.getDate(6).date,\r\n      day: this.getDate(6).day,\r\n      available: true\r\n    },\r\n  ];\r\n\r\n  selectedDate: any;\r\n  selectedAppointmentId = '';\r\n  consultationTime = '8.00 P.M.';\r\n  summaryShown = false;\r\n  loggedInUser = null;\r\n  showRedirectionMessage = false;\r\n\r\n  constructor(\r\n      private router: Router,\r\n      private datePipe: DatePipe,\r\n      private dataStore: DataStoreService,\r\n      private dataLoaderService: DataLoaderService\r\n  ) { }\r\n\r\n  ngOnInit() {\r\n    this.loggedInUser = JSON.parse(sessionStorage.getItem(SessionStorageKeys.loggedInUser));\r\n    this.loadProfessional();\r\n    this.loadAvailableAppointmentsForProfessional();\r\n  }\r\n\r\n  getDate(apart: number) {\r\n    const today = new Date();\r\n    today.setDate(today.getDate() + apart);\r\n    const dd = String(today.getDate()).padStart(2, '0');\r\n    const mm = String(today.getMonth() + 1).padStart(2, '0'); // January is 0!\r\n    const yyyy = today.getFullYear();\r\n    const date = mm + '/' + dd + '/' + yyyy;\r\n\r\n    const dayNum = today.getDay();\r\n    let day: string;\r\n    switch (dayNum) {\r\n      case 0:\r\n        day = 'Sunday';\r\n        break;\r\n      case 1:\r\n        day = 'Monday';\r\n        break;\r\n      case 2:\r\n        day = 'Tuesday';\r\n        break;\r\n      case 3:\r\n        day = 'Wednesday';\r\n        break;\r\n      case 4:\r\n        day = 'Thursday';\r\n        break;\r\n      case 5:\r\n        day = 'Friday';\r\n        break;\r\n      case 6:\r\n        day = 'Saturday';\r\n        break;\r\n    }\r\n    return {\r\n      date,\r\n      day\r\n    };\r\n  }\r\n\r\n  scheduleVisibilityToggle($event: boolean) {\r\n    this.isScheduleVisible = $event;\r\n  }\r\n\r\n  navigateToPaymentOrLogIn() {\r\n    if (!this.loggedInUser) {\r\n      this.transitionType = TRANSITION_PAGE_TYPE.LOGIN_REDIRECT;\r\n      this.showRedirectionMessage = true;\r\n    } else {\r\n      this.router.navigate(['confirmation']).then(r => {\r\n      });\r\n    }\r\n  }\r\n\r\n  getTimeSlots(selectedDate: any) {\r\n    const selectedFullDate = new Date(selectedDate);\r\n\r\n    let dummyAppointments = [];\r\n    const found = this.availableAppointmentsForProfessional.find((appointmentTime: any) => {\r\n      const appointmentDate = new Date(appointmentTime.date);\r\n      return appointmentDate.getFullYear() === selectedFullDate.getFullYear() &&\r\n          appointmentDate.getMonth() === selectedFullDate.getMonth() &&\r\n          appointmentDate.getDate() === selectedFullDate.getDate();\r\n    });\r\n    if (found && found.dummyAppointments) {\r\n      dummyAppointments = found.dummyAppointments;\r\n      dummyAppointments.forEach((app) => {\r\n        if (app && app.appointmentTime) {\r\n          const dummyDate = new Date();\r\n          const h = JSON.parse(JSON.stringify(parseInt(app.appointmentTime.toString().split(':')[0], 10)));\r\n          const m = JSON.parse(JSON.stringify(parseInt(app.appointmentTime.toString().split(':')[1], 10)));\r\n          dummyDate.setHours(h);\r\n          dummyDate.setMinutes(m);\r\n          app.displayAppointmentTime = dummyDate;\r\n        }\r\n      });\r\n    }\r\n    return dummyAppointments;\r\n  }\r\n\r\n  continueClicked($event: boolean) {\r\n    this.summaryShown = $event;\r\n  }\r\n\r\n  private loadAvailableAppointmentsForProfessional() {\r\n    this.availableAppointmentsForProfessional = [\r\n      {\r\n        date: '2020-12-26T20:30:00.000+0000',\r\n        dummyAppointments: [\r\n          {\r\n            appointmentId: 16,\r\n            appointmentTime: '08:00:00',\r\n            timeSlotId: null\r\n          }\r\n        ]\r\n      },\r\n      {\r\n        date: '2020-12-27T20:30:00.000+0000',\r\n        dummyAppointments: [\r\n          {\r\n            appointmentId: 21,\r\n            appointmentTime: '10:00:00',\r\n            timeSlotId: null\r\n          }\r\n        ]\r\n      },\r\n      {\r\n        date: '2020-12-25T20:30:00.000+0000',\r\n        dummyAppointments: [\r\n          {\r\n            appointmentId: 12,\r\n            appointmentTime: '10:00:00',\r\n            timeSlotId: null\r\n          }\r\n        ]\r\n      }\r\n    ];\r\n    if (this.dataStore.get(DataKey.availableAppointmentsForProfessional).getValue()) {\r\n      this.availableAppointmentsForProfessional = this.dataStore.get(DataKey.availableAppointmentsForProfessional).getValue();\r\n    }\r\n    this.filterOutUnavailableDays(this.days);\r\n  }\r\n\r\n  // Todo: complete\r\n  private loadProfessional() {\r\n  }\r\n\r\n  private filterOutUnavailableDays(days: any[]) {\r\n    days.forEach((day: any) => {\r\n      if (this.getTimeSlots(day.date) && this.getTimeSlots(day.date).length > 0) {\r\n        day.available = true;\r\n      } else {\r\n        day.available = false;\r\n      }\r\n    });\r\n  }\r\n\r\n  getDisplaySelectedTime(appointmentId: any) {\r\n    let displaySelectedTime = '';\r\n    if (appointmentId) {\r\n      this.availableAppointmentsForProfessional.forEach((appointmentArray) => {\r\n        if (appointmentArray.dummyAppointments) {\r\n          appointmentArray.dummyAppointments.forEach((appointment) => {\r\n            if (appointment && appointment.appointmentId && appointment.appointmentId === parseInt(appointmentId, 10)) {\r\n              displaySelectedTime = this.datePipe.transform(appointment.displayAppointmentTime, 'shortTime');\r\n            }\r\n          });\r\n        }\r\n      });\r\n    }\r\n    return displaySelectedTime;\r\n  }\r\n\r\n  goToSearchProfessionals() {\r\n    this.router.navigate(['searchProfessionals']).then(r => {\r\n    });\r\n  }\r\n\r\n  logIn() {\r\n    this.router.navigate(['signup']).then(r => {\r\n    });\r\n  }\r\n\r\n  clickFromTransitionPage($event: string) {\r\n    switch ($event) {\r\n      case 'back':\r\n        this.showRedirectionMessage = false;\r\n        break;\r\n      case 'logIn':\r\n        this.logIn();\r\n        this.showRedirectionMessage = false;\r\n        break;\r\n    }\r\n  }\r\n}\r\n","export default \".mat-card-style {\\r\\n    margin-left: auto;\\r\\n    margin-right: auto;\\r\\n    margin-top: 30px;\\r\\n    min-width: 320px;\\r\\n    max-width: 320px;\\r\\n}\\r\\n\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvY29tcG9uZW50cy9ib29raW5nLWVudGVyL2Jvb2tpbmctZW50ZXIuY29tcG9uZW50LmNzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtJQUNJLGlCQUFpQjtJQUNqQixrQkFBa0I7SUFDbEIsZ0JBQWdCO0lBQ2hCLGdCQUFnQjtJQUNoQixnQkFBZ0I7QUFDcEIiLCJmaWxlIjoic3JjL2FwcC9jb21wb25lbnRzL2Jvb2tpbmctZW50ZXIvYm9va2luZy1lbnRlci5jb21wb25lbnQuY3NzIiwic291cmNlc0NvbnRlbnQiOlsiLm1hdC1jYXJkLXN0eWxlIHtcclxuICAgIG1hcmdpbi1sZWZ0OiBhdXRvO1xyXG4gICAgbWFyZ2luLXJpZ2h0OiBhdXRvO1xyXG4gICAgbWFyZ2luLXRvcDogMzBweDtcclxuICAgIG1pbi13aWR0aDogMzIwcHg7XHJcbiAgICBtYXgtd2lkdGg6IDMyMHB4O1xyXG59XHJcbiJdfQ== */\"","import { Component, OnInit } from '@angular/core';\r\nimport {DoctorType} from '../../utils/Constants';\r\nimport {Router} from '@angular/router';\r\nimport {DataLoaderService} from '../../services/data-loader.service';\r\n\r\n@Component({\r\n  selector: 'app-booking-enter',\r\n  templateUrl: './booking-enter.component.html',\r\n  styleUrls: ['./booking-enter.component.css']\r\n})\r\nexport class BookingEnterComponent implements OnInit {\r\n\r\n  doctor = {\r\n    id: 1,\r\n    name: 'Dr. Nuwan chinthaka',\r\n    professionalType: DoctorType.CON,\r\n    bio: 'MD [NIZHNY NOVGOROD STATE MED ACA] RUSSIA(2008)',\r\n    specialities: [\r\n      'Consultant Neurologist',\r\n      'Consultant Pediatrician'\r\n    ],\r\n    consultationPrice: 'Rs. 2000.00',\r\n    isSkypePreferred: true,\r\n    isWhatsAppPreferred: false\r\n  };\r\n\r\n  isScheduleVisible = false;\r\n  isPatientSkypeAvailable = false;\r\n  media = [\r\n    {value: 'skype', viewValue: 'Skype'},\r\n    {value: 'whatsapp', viewValue: 'Whatsapp'}\r\n  ];\r\n  skypeID: any;\r\n  constructor(\r\n      private router: Router\r\n  ) { }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n  scheduleVisibilityToggle($event: boolean) {\r\n      this.isScheduleVisible = $event;\r\n  }\r\n\r\n  saveSkype(b: boolean) {\r\n    //\r\n  }\r\n\r\n    goBack() {\r\n      this.router.navigate(['appointmentTime']).then(r => {\r\n      });\r\n    }\r\n}\r\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NvbXBvbmVudHMvY2hhdC1zZWN0aW9uL2NoYXQtc2VjdGlvbi5jb21wb25lbnQuY3NzIn0= */\"","import {Component, Input, OnInit} from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-chat-section',\r\n  templateUrl: './chat-section.component.html',\r\n  styleUrls: ['./chat-section.component.css']\r\n})\r\nexport class ChatSectionComponent implements OnInit {\r\n\r\n  @Input() messageThread;\r\n  @Input() patientName;\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n}\r\n","export default \".mat-tab-group {\\r\\n    margin-bottom: 48px;\\r\\n}\\r\\n.mat-card-style {\\r\\n    margin-left: auto;\\r\\n    margin-right: auto;\\r\\n    margin-top: 30px;\\r\\n    min-width: 320px;\\r\\n\\r\\n}\\r\\n\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvY29tcG9uZW50cy9jb21tb24tYm9keS9jb21tb24tYm9keS5jb21wb25lbnQuY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0lBQ0ksbUJBQW1CO0FBQ3ZCO0FBQ0E7SUFDSSxpQkFBaUI7SUFDakIsa0JBQWtCO0lBQ2xCLGdCQUFnQjtJQUNoQixnQkFBZ0I7O0FBRXBCIiwiZmlsZSI6InNyYy9hcHAvY29tcG9uZW50cy9jb21tb24tYm9keS9jb21tb24tYm9keS5jb21wb25lbnQuY3NzIiwic291cmNlc0NvbnRlbnQiOlsiLm1hdC10YWItZ3JvdXAge1xyXG4gICAgbWFyZ2luLWJvdHRvbTogNDhweDtcclxufVxyXG4ubWF0LWNhcmQtc3R5bGUge1xyXG4gICAgbWFyZ2luLWxlZnQ6IGF1dG87XHJcbiAgICBtYXJnaW4tcmlnaHQ6IGF1dG87XHJcbiAgICBtYXJnaW4tdG9wOiAzMHB4O1xyXG4gICAgbWluLXdpZHRoOiAzMjBweDtcclxuXHJcbn1cclxuIl19 */\"","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-common-body',\r\n  templateUrl: './common-body.component.html',\r\n  styleUrls: ['./common-body.component.css']\r\n})\r\nexport class CommonBodyComponent implements OnInit {\r\n\r\n  flow = 2;\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n  onFlowChange($event) {\r\n    this.flow = $event;\r\n  }\r\n\r\n}\r\n","export default \".mat-card-style {\\r\\n    margin-left: auto;\\r\\n    margin-right: auto;\\r\\n    margin-top: 30px;\\r\\n    min-width: 320px;\\r\\n    max-width: 320px;\\r\\n}\\r\\n\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvY29tcG9uZW50cy9jb250YWN0LXBhZ2UvY29udGFjdC1wYWdlLmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7SUFDSSxpQkFBaUI7SUFDakIsa0JBQWtCO0lBQ2xCLGdCQUFnQjtJQUNoQixnQkFBZ0I7SUFDaEIsZ0JBQWdCO0FBQ3BCIiwiZmlsZSI6InNyYy9hcHAvY29tcG9uZW50cy9jb250YWN0LXBhZ2UvY29udGFjdC1wYWdlLmNvbXBvbmVudC5jc3MiLCJzb3VyY2VzQ29udGVudCI6WyIubWF0LWNhcmQtc3R5bGUge1xyXG4gICAgbWFyZ2luLWxlZnQ6IGF1dG87XHJcbiAgICBtYXJnaW4tcmlnaHQ6IGF1dG87XHJcbiAgICBtYXJnaW4tdG9wOiAzMHB4O1xyXG4gICAgbWluLXdpZHRoOiAzMjBweDtcclxuICAgIG1heC13aWR0aDogMzIwcHg7XHJcbn1cclxuIl19 */\"","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-contact-page',\r\n  templateUrl: './contact-page.component.html',\r\n  styleUrls: ['./contact-page.component.css']\r\n})\r\nexport class ContactPageComponent implements OnInit {\r\n  phoneNumber = '0773092511';\r\n  email = 'kavin256@gmail.com';\r\n  facebook = 'https://www.facebook.com';\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n}\r\n","export default \".mat-card-style {\\r\\n    margin-left: auto;\\r\\n    margin-right: auto;\\r\\n    margin-top: 30px;\\r\\n    min-width: 320px;\\r\\n    max-width: 320px;\\r\\n\\r\\n}\\r\\n\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvY29tcG9uZW50cy9kb2N0b3ItZmluYW5jZS9kb2N0b3ItZmluYW5jZS5jb21wb25lbnQuY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0lBQ0ksaUJBQWlCO0lBQ2pCLGtCQUFrQjtJQUNsQixnQkFBZ0I7SUFDaEIsZ0JBQWdCO0lBQ2hCLGdCQUFnQjs7QUFFcEIiLCJmaWxlIjoic3JjL2FwcC9jb21wb25lbnRzL2RvY3Rvci1maW5hbmNlL2RvY3Rvci1maW5hbmNlLmNvbXBvbmVudC5jc3MiLCJzb3VyY2VzQ29udGVudCI6WyIubWF0LWNhcmQtc3R5bGUge1xyXG4gICAgbWFyZ2luLWxlZnQ6IGF1dG87XHJcbiAgICBtYXJnaW4tcmlnaHQ6IGF1dG87XHJcbiAgICBtYXJnaW4tdG9wOiAzMHB4O1xyXG4gICAgbWluLXdpZHRoOiAzMjBweDtcclxuICAgIG1heC13aWR0aDogMzIwcHg7XHJcblxyXG59XHJcbiJdfQ== */\"","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-doctor-finance',\r\n  templateUrl: './doctor-finance.component.html',\r\n  styleUrls: ['./doctor-finance.component.css']\r\n})\r\nexport class DoctorFinanceComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n}\r\n","export default \".mat-card-style {\\r\\n    margin-left: auto;\\r\\n    margin-right: auto;\\r\\n    margin-top: 30px;\\r\\n    min-width: 320px;\\r\\n    max-width: 320px;\\r\\n\\r\\n}\\r\\n\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvY29tcG9uZW50cy9kb2N0b3ItcHJvZmlsZS9kb2N0b3ItcHJvZmlsZS5jb21wb25lbnQuY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0lBQ0ksaUJBQWlCO0lBQ2pCLGtCQUFrQjtJQUNsQixnQkFBZ0I7SUFDaEIsZ0JBQWdCO0lBQ2hCLGdCQUFnQjs7QUFFcEIiLCJmaWxlIjoic3JjL2FwcC9jb21wb25lbnRzL2RvY3Rvci1wcm9maWxlL2RvY3Rvci1wcm9maWxlLmNvbXBvbmVudC5jc3MiLCJzb3VyY2VzQ29udGVudCI6WyIubWF0LWNhcmQtc3R5bGUge1xyXG4gICAgbWFyZ2luLWxlZnQ6IGF1dG87XHJcbiAgICBtYXJnaW4tcmlnaHQ6IGF1dG87XHJcbiAgICBtYXJnaW4tdG9wOiAzMHB4O1xyXG4gICAgbWluLXdpZHRoOiAzMjBweDtcclxuICAgIG1heC13aWR0aDogMzIwcHg7XHJcblxyXG59XHJcbiJdfQ== */\"","import {Component, OnInit} from '@angular/core';\r\nimport {Router} from '@angular/router';\r\nimport {DataLoaderService} from '../../services/data-loader.service';\r\nimport {Constants, currencyCodes, DoctorTitles, DoctorType, specializations} from '../../utils/Constants';\r\nimport {DataKey, DataStoreService, SessionStorageKeys} from '../../services/data-store.service';\r\nimport {HttpHeaders, HttpParams} from '@angular/common/http';\r\nimport {DoctorSpecificData, UserData} from '../../models/user-data';\r\nimport {DataHandlerService} from '../../services/data-handler.service';\r\n\r\n@Component({\r\n  selector: 'app-doctor-profile',\r\n  templateUrl: './doctor-profile.component.html',\r\n  styleUrls: ['./doctor-profile.component.css']\r\n})\r\nexport class DoctorProfileComponent implements OnInit {\r\n  selectedImage: File;\r\n  // profileUsername = 'dfg';\r\n  editable = false;\r\n  loggedInUser = null;\r\n  userData: DoctorSpecificData;\r\n\r\n  titles = [\r\n    {value: DoctorTitles.DR},\r\n    {value: DoctorTitles.MR},\r\n    {value: DoctorTitles.MRS},\r\n    {value: DoctorTitles.MS},\r\n    {value: DoctorTitles.PROF},\r\n  ];\r\n\r\n  doctorTypes = [\r\n    {value: DoctorType.CON},\r\n    {value: DoctorType.GEN},\r\n    {value: DoctorType.OTH}\r\n  ];\r\n\r\n  // todo: find a better solution. this is just a duplication. So not good\r\n  specializations = specializations;\r\n\r\n  constructor(\r\n      private router: Router,\r\n      private dataStore: DataStoreService,\r\n      private dataHandlerService: DataHandlerService,\r\n      private dataLoaderService: DataLoaderService\r\n  ) { }\r\n\r\n  ngOnInit() {\r\n    this.loggedInUser = JSON.parse(sessionStorage.getItem(SessionStorageKeys.loggedInUser));\r\n    // todo: resolve this commented\r\n    // if (this.loggedInUser && this.loggedInUser.doctorData) {\r\n    //   this.userData = this.loggedInUser.doctorData;\r\n    // }\r\n    if (this.loggedInUser && this.loggedInUser) {\r\n      this.userData = this.loggedInUser;\r\n    }\r\n\r\n    // converting professionalType to a user friendly readable format\r\n    if (this.userData && this.userData.professionalType) {\r\n      this.userData.professionalType = this.dataHandlerService.convertProfessionalTypeFromDBFormat(\r\n          JSON.parse(JSON.stringify(this.userData.professionalType)));\r\n    }\r\n  }\r\n\r\n  getColor(state: string) {\r\n    return '#000000';\r\n  }\r\n\r\n  toggleEditable(editable: boolean) {\r\n    this.editable = editable;\r\n  }\r\n\r\n  saveData() {\r\n    // converting professionalType to a database readable format\r\n    if (this.userData && this.userData.professionalType) {\r\n      this.userData.professionalType = this.dataHandlerService.convertProfessionalTypeToDBFormat(\r\n          JSON.parse(JSON.stringify(this.userData.professionalType)));\r\n    }\r\n\r\n    const url = Constants.BASE_URL + Constants.UPDATE_PROFESSIONAL_SPECIFIC_DATA + this.userData.userName;\r\n    this.dataLoaderService.put<UserData>(url, new HttpParams(), new HttpHeaders(), DataKey.uploadImage, this.userData )\r\n        .then((data: any) => {\r\n          if (data && data.status && data.status.code === 1) {\r\n            // console.log('data');\r\n            // console.log(data.data);\r\n            this.toggleEditable(false);\r\n\r\n          } else if (data && data.status && data.status.code === -1) {\r\n            // console.log('data null');\r\n            // console.log(data.data);\r\n          }\r\n        });\r\n  }\r\n\r\n  isConsultant(type: string) {\r\n    return type === DoctorType.CON;\r\n  }\r\n\r\n  goToMyAppointments() {\r\n    this.router.navigate(['doctor/appointments']).then(r => {\r\n    });\r\n  }\r\n\r\n  editSchedule() {\r\n    this.router.navigate(['doctor/schedule']).then(r => {\r\n    });\r\n  }\r\n\r\n  uploadImage(event) {\r\n    this.selectedImage = event.target.file;\r\n    const formData = new FormData();\r\n    formData.append('image', this.selectedImage);\r\n    formData.append( 'username', this.userData.userName);\r\n\r\n    // sent request\r\n    const url = Constants.BASE_URL + Constants.UPLOAD_USER_IMAGE;\r\n    this.dataLoaderService.post<UserData>(url, new HttpParams(), new HttpHeaders(), DataKey.uploadImage, formData )\r\n        .then((data: any) => {\r\n          if (data && data.status && data.status.code === 1) {\r\n            // console.log('data');\r\n            // console.log(data.data);\r\n          } else if (data && data.status && data.status.code === -1) {\r\n            // console.log('data null');\r\n            // console.log(data.data);\r\n          }\r\n        });\r\n  }\r\n\r\n  checkForMandatoryFieldsToActivateProfile(userData: DoctorSpecificData) {\r\n    // currently only the userData.priceForAppointment is checked as a requirement\r\n    return userData &&\r\n        userData.priceForAppointment !== null &&\r\n        userData.priceForAppointment !== undefined &&\r\n        userData.priceForAppointment !== '' &&\r\n        parseInt(userData.priceForAppointment, 10) &&\r\n        parseInt(userData.priceForAppointment, 10) > 0;\r\n  }\r\n}\r\n","export default \".mat-card-style {\\r\\n    margin-left: auto;\\r\\n    margin-right: auto;\\r\\n    margin-top: 30px;\\r\\n    min-width: 320px;\\r\\n    max-width: 320px;\\r\\n\\r\\n}\\r\\n\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvY29tcG9uZW50cy9kb2N0b3Itc2NoZWR1bGUvZG9jdG9yLXNjaGVkdWxlLmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7SUFDSSxpQkFBaUI7SUFDakIsa0JBQWtCO0lBQ2xCLGdCQUFnQjtJQUNoQixnQkFBZ0I7SUFDaEIsZ0JBQWdCOztBQUVwQiIsImZpbGUiOiJzcmMvYXBwL2NvbXBvbmVudHMvZG9jdG9yLXNjaGVkdWxlL2RvY3Rvci1zY2hlZHVsZS5jb21wb25lbnQuY3NzIiwic291cmNlc0NvbnRlbnQiOlsiLm1hdC1jYXJkLXN0eWxlIHtcclxuICAgIG1hcmdpbi1sZWZ0OiBhdXRvO1xyXG4gICAgbWFyZ2luLXJpZ2h0OiBhdXRvO1xyXG4gICAgbWFyZ2luLXRvcDogMzBweDtcclxuICAgIG1pbi13aWR0aDogMzIwcHg7XHJcbiAgICBtYXgtd2lkdGg6IDMyMHB4O1xyXG5cclxufVxyXG4iXX0= */\"","import { Component, OnInit } from '@angular/core';\r\nimport {DataKey, DataStoreService} from '../../services/data-store.service';\r\nimport {DoctorScheduleData, UserData} from '../../models/user-data';\r\nimport {DataHandlerService} from '../../services/data-handler.service';\r\nimport {Router} from '@angular/router';\r\nimport {Constants} from '../../utils/Constants';\r\nimport {HttpHeaders, HttpParams} from '@angular/common/http';\r\nimport {DataLoaderService} from '../../services/data-loader.service';\r\n\r\n@Component({\r\n  selector: 'app-doctor-schedule',\r\n  templateUrl: './doctor-schedule.component.html',\r\n  styleUrls: ['./doctor-schedule.component.css']\r\n})\r\nexport class DoctorScheduleComponent implements OnInit {\r\n  profileUsername = 'dfg';\r\n  availableForAppointment = true;\r\n\r\n  constructor(\r\n      private router: Router,\r\n      private dataStore: DataStoreService,\r\n      private dataLoaderService: DataLoaderService,\r\n      private dataHandlerService: DataHandlerService\r\n  ) {}\r\n\r\n  DAY_TITLES = new Map(\r\n      [\r\n        [1, 'Sunday'],\r\n        [2, 'Monday'],\r\n        [3, 'Tuesday'],\r\n        [4, 'Wednesday'],\r\n        [5, 'Thursday'],\r\n        [6, 'Friday'],\r\n        [7, 'Saturday'],\r\n      ]\r\n  );\r\n  DEFAULT_AVERAGE_TIME_FOR_APPOINTMENT = 20;\r\n  meridian = true;\r\n  changeRequestSent = false;\r\n  isConfirmationActive = false;\r\n  doctorScheduleData: DoctorScheduleData;\r\n\r\n  ngOnInit() {\r\n    // this.populateDoctorScheduleData();\r\n    this.populateDoctorScheduleDataByMock();\r\n  }\r\n\r\n  save() {\r\n    this.updateSchedule();\r\n    const url = Constants.BASE_URL + Constants.UPDATE_PROFESSIONAL_WORK_DATA + this.profileUsername;\r\n    if (this.availableForAppointment) {\r\n      this.dataLoaderService.put<UserData>(url, new HttpParams(), new HttpHeaders(),\r\n          DataKey.uploadImage, this.doctorScheduleData)\r\n          .then((data: any) => {\r\n            if (data && data.status && data.status.code === 1) {\r\n              // console.log('data');\r\n              // console.log(data.data);\r\n              this.isConfirmationActive = false;\r\n              this.changeRequestSent = true;\r\n            } else if (data && data.status && data.status.code === -1) {\r\n              // console.log('data null');\r\n              // console.log(data.data);\r\n            }\r\n          });\r\n    } else {\r\n      this.dataLoaderService.post<UserData>(url, new HttpParams(), new HttpHeaders(),\r\n          DataKey.uploadImage, this.doctorScheduleData)\r\n          .then((data: any) => {\r\n            if (data && data.status && data.status.code === 1) {\r\n              // console.log('data');\r\n              // console.log(data.data);\r\n              this.isConfirmationActive = false;\r\n              this.changeRequestSent = true;\r\n            } else if (data && data.status && data.status.code === -1) {\r\n              // console.log('data null');\r\n              // console.log(data.data);\r\n            }\r\n          });\r\n    }\r\n  }\r\n\r\n  cancel() {\r\n    this.isConfirmationActive = false;\r\n    this.changeRequestSent = false;\r\n  }\r\n\r\n  private populateDoctorScheduleData() {\r\n    this.doctorScheduleData = this.dataStore.get(DataKey.doctorScheduleData).getValue() as DoctorScheduleData;\r\n    if (this.doctorScheduleData) {\r\n      this.doctorScheduleData.averageTimeForAppointment = this.doctorScheduleData.averageTimeForAppointment ?\r\n          this.doctorScheduleData.averageTimeForAppointment : this.DEFAULT_AVERAGE_TIME_FOR_APPOINTMENT;\r\n      this.doctorScheduleData.fixedDoctorDates.forEach((doctorDate) => {\r\n        doctorDate.title = this.DAY_TITLES.get(doctorDate.day);\r\n        if (doctorDate.workingTimePeriods) {\r\n          doctorDate.workingTimePeriods.forEach((workingTimePeriod) => {\r\n            workingTimePeriod.endTimeSelected = this.dataHandlerService.convertTimeToHoursAndMinutes(\r\n                workingTimePeriod.endTime);\r\n            workingTimePeriod.startTimeSelected = this.dataHandlerService.convertTimeToHoursAndMinutes(\r\n                workingTimePeriod.startTime);\r\n          });\r\n        }\r\n      });\r\n    }\r\n  }\r\n\r\n  private populateDoctorScheduleDataByMock() {\r\n    this.doctorScheduleData = {\r\n      averageTimeForAppointment: 30,\r\n      fixedDoctorDates: [\r\n        {\r\n          day: 1,\r\n          workingTimePeriods: [\r\n            {\r\n              startTime: '08:00:00',\r\n              endTime: '10:00:00',\r\n              isActive: true\r\n            },\r\n            {\r\n              startTime: '14:00:00',\r\n              endTime: '16:00:00',\r\n              isActive: false\r\n            },\r\n            {\r\n              startTime: '17:00:00',\r\n              endTime: '18:00:00',\r\n              isActive: true\r\n            }\r\n          ]\r\n        },\r\n        {\r\n          day: 2,\r\n          workingTimePeriods: [\r\n            {\r\n              startTime: '10:00:00',\r\n              endTime: '11:45:00',\r\n              isActive: true\r\n            }\r\n          ]\r\n        },\r\n        {\r\n          day: 3,\r\n          workingTimePeriods: null\r\n        },\r\n        {\r\n          day: 4,\r\n          workingTimePeriods: null\r\n        },\r\n        {\r\n          day: 5,\r\n          workingTimePeriods: null\r\n        },\r\n        {\r\n          day: 6,\r\n          workingTimePeriods: null\r\n        },\r\n        {\r\n          day: 7,\r\n          workingTimePeriods: [\r\n            {\r\n              startTime: '10:00:00',\r\n              endTime: '12:10:00',\r\n              isActive: true\r\n            },\r\n            {\r\n              startTime: '13:00:00',\r\n              endTime: '15:10:00',\r\n              isActive: false\r\n            }\r\n          ]\r\n        }\r\n      ]\r\n    };\r\n\r\n    if (this.doctorScheduleData) {\r\n      this.doctorScheduleData.averageTimeForAppointment = this.doctorScheduleData.averageTimeForAppointment ?\r\n          this.doctorScheduleData.averageTimeForAppointment : this.DEFAULT_AVERAGE_TIME_FOR_APPOINTMENT;\r\n      this.doctorScheduleData.fixedDoctorDates.forEach((doctorDate) => {\r\n        doctorDate.title = this.DAY_TITLES.get(doctorDate.day);\r\n        if (doctorDate.workingTimePeriods) {\r\n          doctorDate.workingTimePeriods.forEach((workingTimePeriod) => {\r\n            workingTimePeriod.endTimeSelected = this.dataHandlerService.convertTimeToHoursAndMinutes(\r\n                workingTimePeriod.endTime);\r\n            workingTimePeriod.startTimeSelected = this.dataHandlerService.convertTimeToHoursAndMinutes(\r\n                workingTimePeriod.startTime);\r\n          });\r\n        }\r\n      });\r\n    }\r\n  }\r\n\r\n  private updateSchedule() {\r\n    // from hours and minutes to date\r\n    if (this.doctorScheduleData) {\r\n      this.doctorScheduleData.fixedDoctorDates.forEach((doctorDate) => {\r\n        if (doctorDate.workingTimePeriods) {\r\n          doctorDate.workingTimePeriods.forEach((workingTimePeriod) => {\r\n            workingTimePeriod.endTime = this.dataHandlerService.convertHoursAndMinutesToTime(\r\n                workingTimePeriod.endTimeSelected);\r\n            workingTimePeriod.startTime = this.dataHandlerService.convertHoursAndMinutesToTime(\r\n                workingTimePeriod.startTimeSelected);\r\n          });\r\n        }\r\n      });\r\n    }\r\n  }\r\n\r\n  userConsent() {\r\n    this.isConfirmationActive = !this.isConfirmationActive;\r\n  }\r\n\r\n  goToProfessionalDashboard() {\r\n    this.router.navigate(['doctor/dashboard']).then(r => {\r\n    });\r\n  }\r\n}\r\n","export default \".mat-card-style {\\r\\n    margin-left: auto;\\r\\n    margin-right: auto;\\r\\n    margin-top: 30px;\\r\\n    min-width: 320px;\\r\\n    max-width: 320px;\\r\\n}\\r\\n.strikethrough {\\r\\n    text-decoration: line-through;\\r\\n}\\r\\n\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvY29tcG9uZW50cy9kb2N0b3Itc2lkZS1ib29raW5nLWxpc3QvZG9jdG9yLXNpZGUtYm9va2luZy1saXN0LmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7SUFDSSxpQkFBaUI7SUFDakIsa0JBQWtCO0lBQ2xCLGdCQUFnQjtJQUNoQixnQkFBZ0I7SUFDaEIsZ0JBQWdCO0FBQ3BCO0FBQ0E7SUFDSSw2QkFBNkI7QUFDakMiLCJmaWxlIjoic3JjL2FwcC9jb21wb25lbnRzL2RvY3Rvci1zaWRlLWJvb2tpbmctbGlzdC9kb2N0b3Itc2lkZS1ib29raW5nLWxpc3QuY29tcG9uZW50LmNzcyIsInNvdXJjZXNDb250ZW50IjpbIi5tYXQtY2FyZC1zdHlsZSB7XHJcbiAgICBtYXJnaW4tbGVmdDogYXV0bztcclxuICAgIG1hcmdpbi1yaWdodDogYXV0bztcclxuICAgIG1hcmdpbi10b3A6IDMwcHg7XHJcbiAgICBtaW4td2lkdGg6IDMyMHB4O1xyXG4gICAgbWF4LXdpZHRoOiAzMjBweDtcclxufVxyXG4uc3RyaWtldGhyb3VnaCB7XHJcbiAgICB0ZXh0LWRlY29yYXRpb246IGxpbmUtdGhyb3VnaDtcclxufVxyXG4iXX0= */\"","import { Component, OnInit } from '@angular/core';\r\nimport {PageEvent} from '@angular/material';\r\n\r\n@Component({\r\n  selector: 'app-doctor-side-booking-list',\r\n  templateUrl: './doctor-side-booking-list.component.html',\r\n  styleUrls: ['./doctor-side-booking-list.component.css']\r\n})\r\nexport class DoctorSideBookingListComponent implements OnInit {\r\n\r\n  RESULTS_PER_PAGE = 5;\r\n  PAGINATION_START = 0;\r\n  PAGINATION_END = this.RESULTS_PER_PAGE;\r\n\r\n  bookingListSlot1 = {\r\n    startTime: '07.00 A.M.',\r\n    endTime: '12.00 P.M.',\r\n    bookings: [\r\n      {\r\n        bookingId: 2387,\r\n        patientId: '76531',\r\n        patientName: 'John Doe',\r\n        bookingStatus: BookingStatus.BOOKING_COMPLETED\r\n      },\r\n      {\r\n        bookingId: 2387,\r\n        patientId: '76531',\r\n        patientName: 'John Doe',\r\n        bookingStatus: BookingStatus.BOOKING_COMPLETED\r\n      },\r\n      {\r\n        bookingId: 2387,\r\n        patientId: '76531',\r\n        patientName: 'John Doe',\r\n        bookingStatus: BookingStatus.BOOKING_COMPLETED\r\n      },\r\n      {\r\n        bookingId: 1196,\r\n        patientId: '65456',\r\n        patientName: 'Sumanasiri',\r\n        bookingStatus: BookingStatus.BOOKING_COMPLETED\r\n      },\r\n      {\r\n        bookingId: 2387,\r\n        patientId: '76531',\r\n        patientName: 'John Doe',\r\n        bookingStatus: BookingStatus.BOOKING_COMPLETED\r\n      }\r\n    ]\r\n  };\r\n\r\n  bookingListSlot2 = {\r\n    startTime: '02.00 P.M.',\r\n    endTime: '04.00 P.M.',\r\n    bookings: [\r\n      {\r\n        bookingId: 2387,\r\n        patientId: '76531',\r\n        patientName: 'John Doe',\r\n        bookingStatus: BookingStatus.BOOKING_COMPLETED\r\n      },\r\n      {\r\n        bookingId: 1196,\r\n        patientId: '65456',\r\n        patientName: 'Sumanasiri',\r\n        bookingStatus: BookingStatus.BOOKING_COMPLETED\r\n      },\r\n      {\r\n        bookingId: 2387,\r\n        patientId: '76531',\r\n        patientName: 'John Doe',\r\n        bookingStatus: BookingStatus.BOOKING_COMPLETED\r\n      },\r\n      {\r\n        bookingId: 2387,\r\n        patientId: '76531',\r\n        patientName: 'John Doe',\r\n        bookingStatus: BookingStatus.BOOKING_COMPLETED\r\n      },\r\n      {\r\n        bookingId: 1196,\r\n        patientId: '65456',\r\n        patientName: 'Sumanasiri',\r\n        bookingStatus: BookingStatus.BOOKING_CANCELLED\r\n      },\r\n      {\r\n        bookingId: 2387,\r\n        patientId: '76531',\r\n        patientName: 'John Doe',\r\n        bookingStatus: BookingStatus.BOOKING_COMPLETED\r\n      }\r\n    ]\r\n  };\r\n\r\n  bookingListSlot3 = {\r\n    startTime: '08.00 P.M.',\r\n    endTime: '10.00 P.M.',\r\n    bookings: [\r\n      {\r\n        bookingId: 2387,\r\n        patientId: '76531',\r\n        patientName: 'John Doe',\r\n        bookingStatus: BookingStatus.BOOKING_COMPLETED\r\n      },\r\n      {\r\n        bookingId: 1196,\r\n        patientId: '65456',\r\n        patientName: 'Sumanasiri',\r\n        bookingStatus: BookingStatus.BOOKING_CURRENT\r\n      },\r\n      {\r\n        bookingId: 2383,\r\n        patientId: '76531',\r\n        patientName: 'John Doe',\r\n        bookingStatus: BookingStatus.BOOKING_NOT_STARTED\r\n      },\r\n      {\r\n        bookingId: 2367,\r\n        patientId: '76531',\r\n        patientName: 'John Doe',\r\n        bookingStatus: BookingStatus.BOOKING_NOT_STARTED\r\n      },\r\n      {\r\n        bookingId: 1156,\r\n        patientId: '65456',\r\n        patientName: 'Sumanasiri',\r\n        bookingStatus: BookingStatus.BOOKING_NOT_STARTED\r\n      },\r\n      {\r\n        bookingId: 4387,\r\n        patientId: '76531',\r\n        patientName: 'John Doe',\r\n        bookingStatus: BookingStatus.BOOKING_NOT_STARTED\r\n      }\r\n    ]\r\n  };\r\n  visible = false;\r\n  bookingSlotListVisible = true;\r\n  selectedSlot: any;\r\n  overTheAppointmentCard = null;\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit() {\r\n    this.selectedSlot = this.bookingListSlot2;\r\n  }\r\n\r\n  selectBooking($event: string) {\r\n    console.log($event);\r\n  }\r\n\r\n  onMouseEnter($event: number) {\r\n    this.overTheAppointmentCard = $event;\r\n  }\r\n\r\n  onMouseLeave() {\r\n    this.overTheAppointmentCard = null;\r\n  }\r\n\r\n  isOverTheAppointmentCard($event: number) {\r\n    return $event === this.overTheAppointmentCard;\r\n  }\r\n\r\n  // selectProfessional_($event: number) {\r\n  //   this.selectProfessional.emit($event);\r\n  // }\r\n\r\n  getColor($event) {\r\n    switch ($event) {\r\n      case BookingStatus.BOOKING_CANCELLED:\r\n        return Colors.BOOKING_CANCELLED;\r\n      case BookingStatus.BOOKING_NOT_STARTED:\r\n        return Colors.BOOKING_NOT_STARTED;\r\n      case BookingStatus.BOOKING_COMPLETED:\r\n        return Colors.BOOKING_COMPLETED;\r\n      case BookingStatus.BOOKING_CURRENT:\r\n        return Colors.BOOKING_CURRENT;\r\n      default:\r\n        return Colors.BOOKING_NOT_STARTED;\r\n    }\r\n  }\r\n\r\n  selectSlot(slot: any) {\r\n    this.selectedSlot = slot;\r\n    this.bookingSlotListVisible = !this.bookingSlotListVisible;\r\n\r\n  }\r\n\r\n  goToPage($event: PageEvent) {\r\n    this.PAGINATION_START = $event.pageIndex * $event.pageSize;\r\n    this.PAGINATION_END = this.PAGINATION_START + $event.pageSize;\r\n  }\r\n}\r\n\r\nexport enum BookingStatus {\r\n  BOOKING_CANCELLED = 'BOOKING_CANCELLED',\r\n  BOOKING_COMPLETED = 'BOOKING_COMPLETED',\r\n  BOOKING_CURRENT = 'BOOKING_CURRENT',\r\n  BOOKING_NOT_STARTED = 'BOOKING_NOT_STARTED'\r\n}\r\n\r\nexport enum Colors {\r\n  BOOKING_CANCELLED = '#ff6666',\r\n  BOOKING_COMPLETED = '#e6e6e6',\r\n  BOOKING_CURRENT = '#99ccff',\r\n  BOOKING_NOT_STARTED = '#d5ff80'\r\n}\r\n","export default \".mat-card-style {\\r\\n    margin-left: auto;\\r\\n    margin-right: auto;\\r\\n    margin-top: 30px;\\r\\n    min-width: 320px;\\r\\n    max-width: 320px;\\r\\n\\r\\n}\\r\\n\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvY29tcG9uZW50cy9kb2N0b3Itc2lkZS1ib29raW5nL2RvY3Rvci1zaWRlLWJvb2tpbmcuY29tcG9uZW50LmNzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtJQUNJLGlCQUFpQjtJQUNqQixrQkFBa0I7SUFDbEIsZ0JBQWdCO0lBQ2hCLGdCQUFnQjtJQUNoQixnQkFBZ0I7O0FBRXBCIiwiZmlsZSI6InNyYy9hcHAvY29tcG9uZW50cy9kb2N0b3Itc2lkZS1ib29raW5nL2RvY3Rvci1zaWRlLWJvb2tpbmcuY29tcG9uZW50LmNzcyIsInNvdXJjZXNDb250ZW50IjpbIi5tYXQtY2FyZC1zdHlsZSB7XHJcbiAgICBtYXJnaW4tbGVmdDogYXV0bztcclxuICAgIG1hcmdpbi1yaWdodDogYXV0bztcclxuICAgIG1hcmdpbi10b3A6IDMwcHg7XHJcbiAgICBtaW4td2lkdGg6IDMyMHB4O1xyXG4gICAgbWF4LXdpZHRoOiAzMjBweDtcclxuXHJcbn1cclxuIl19 */\"","import { Component, OnInit } from '@angular/core';\r\nimport {BookingStatus} from '../doctor-side-booking-list/doctor-side-booking-list.component';\r\nimport {MatSnackBar} from '@angular/material';\r\n\r\n@Component({\r\n  selector: 'app-doctor-side-booking',\r\n  templateUrl: './doctor-side-booking.component.html',\r\n  styleUrls: ['./doctor-side-booking.component.css']\r\n})\r\nexport class DoctorSideBookingComponent implements OnInit {\r\n\r\n    inProgress = false;\r\n    isConfirmationActive = false;\r\n    changeRequestSent = false;\r\n    booking = {\r\n      id: 2387,\r\n      createdDateTime: new Date(2020, 4, 20, 10, 45),\r\n      appointmentDateTime: new Date(2020, 4, 21, 10, 0),\r\n      durationInMinutes: 15,\r\n      status: BookingStatus.BOOKING_NOT_STARTED,\r\n      price: 'Rs. 2000.00',\r\n      doctorNotes: [],\r\n      userNotes: [],\r\n      cancellationRule: '',\r\n      messageThread:\r\n          [\r\n              {\r\n                  sender: 'doctor',\r\n                  message: 'jhbsdkcsd'\r\n              },\r\n              {\r\n                  sender: 'patient',\r\n                  message: 'jhbsdddfdfdkcsd'\r\n              },\r\n              {\r\n                  sender: 'doctor',\r\n                  message: 'hgvbhashjd'\r\n              }\r\n          ]\r\n  };\r\n  patient = {patientId: '76531', patientName: 'Mr. John Doe',\r\n      contactNumber: '0773092511', whatsAppNumber: '0773092511', email: 'kavin256@gmail.com',\r\n      birthday: new Date(1993, 4, 21).toLocaleDateString('en-US'),\r\n      age: 33,\r\n      knownAllergies: 'allergic to bad music, allergic to negative people'};\r\n  doctor = {doctorId: '4352545235', doctorName: 'Dr. Tim Cook'};\r\n  isPatientDetailsShown = true;\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n  userConsent() {\r\n      this.isConfirmationActive = !this.isConfirmationActive;\r\n  }\r\n\r\n  cancel() {\r\n      // this.updateSchedule();\r\n      this.isConfirmationActive = false;\r\n      this.changeRequestSent = true;\r\n      this.booking.status = BookingStatus.BOOKING_CANCELLED;\r\n  }\r\n\r\n  dismiss() {\r\n      this.isConfirmationActive = false;\r\n      this.changeRequestSent = false;\r\n  }\r\n}\r\n","export default \".mat-card-style {\\r\\n    margin-left: auto;\\r\\n    margin-right: auto;\\r\\n    margin-top: 30px;\\r\\n    min-width: 320px;\\r\\n    max-width: 320px;\\r\\n\\r\\n}\\r\\n\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvY29tcG9uZW50cy9mYXFzL2ZhcXMuY29tcG9uZW50LmNzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtJQUNJLGlCQUFpQjtJQUNqQixrQkFBa0I7SUFDbEIsZ0JBQWdCO0lBQ2hCLGdCQUFnQjtJQUNoQixnQkFBZ0I7O0FBRXBCIiwiZmlsZSI6InNyYy9hcHAvY29tcG9uZW50cy9mYXFzL2ZhcXMuY29tcG9uZW50LmNzcyIsInNvdXJjZXNDb250ZW50IjpbIi5tYXQtY2FyZC1zdHlsZSB7XHJcbiAgICBtYXJnaW4tbGVmdDogYXV0bztcclxuICAgIG1hcmdpbi1yaWdodDogYXV0bztcclxuICAgIG1hcmdpbi10b3A6IDMwcHg7XHJcbiAgICBtaW4td2lkdGg6IDMyMHB4O1xyXG4gICAgbWF4LXdpZHRoOiAzMjBweDtcclxuXHJcbn1cclxuIl19 */\"","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-faqs',\r\n  templateUrl: './faqs.component.html',\r\n  styleUrls: ['./faqs.component.css']\r\n})\r\nexport class FaqsComponent implements OnInit {\r\n  faqs = [\r\n      {\r\n        q: 'How can I contact the doctor after placing a booking successfully?',\r\n        a: 'Doctor will call you via Skype. When your booking number is near, make sure the doctor can reach you via Skype'\r\n      },\r\n      {\r\n        q: 'How can I contact the doctor after placing a booking successfully?',\r\n        a: 'Doctor will call you via Skype. When your booking number is near, make sure the doctor can reach you via Skype'\r\n      },\r\n      {\r\n        q: 'How can I contact the doctor after placing a booking successfully?',\r\n        a: 'Doctor will call you via Skype. When your booking number is near, make sure the doctor can reach you via Skype'\r\n      }\r\n    ];\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n}\r\n","export default \".app-footer {\\r\\n    min-height: 150px;\\r\\n    min-width: 320px;\\r\\n    width: 100%;\\r\\n    bottom: 0;\\r\\n    /*background: #d3d1d1;*/\\r\\n    /*background-color: #d3d1d1; !* For browsers that do not support gradients *!*/\\r\\n    background-image: linear-gradient(#ffffff, #b4b2b2); /* Standard syntax (must be last) */\\r\\n}\\r\\n\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvY29tcG9uZW50cy9mb290ZXIvZm9vdGVyLmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7SUFDSSxpQkFBaUI7SUFDakIsZ0JBQWdCO0lBQ2hCLFdBQVc7SUFDWCxTQUFTO0lBQ1QsdUJBQXVCO0lBQ3ZCLDhFQUE4RTtJQUM5RSxtREFBbUQsRUFBRSxtQ0FBbUM7QUFDNUYiLCJmaWxlIjoic3JjL2FwcC9jb21wb25lbnRzL2Zvb3Rlci9mb290ZXIuY29tcG9uZW50LmNzcyIsInNvdXJjZXNDb250ZW50IjpbIi5hcHAtZm9vdGVyIHtcclxuICAgIG1pbi1oZWlnaHQ6IDE1MHB4O1xyXG4gICAgbWluLXdpZHRoOiAzMjBweDtcclxuICAgIHdpZHRoOiAxMDAlO1xyXG4gICAgYm90dG9tOiAwO1xyXG4gICAgLypiYWNrZ3JvdW5kOiAjZDNkMWQxOyovXHJcbiAgICAvKmJhY2tncm91bmQtY29sb3I6ICNkM2QxZDE7ICEqIEZvciBicm93c2VycyB0aGF0IGRvIG5vdCBzdXBwb3J0IGdyYWRpZW50cyAqISovXHJcbiAgICBiYWNrZ3JvdW5kLWltYWdlOiBsaW5lYXItZ3JhZGllbnQoI2ZmZmZmZiwgI2I0YjJiMik7IC8qIFN0YW5kYXJkIHN5bnRheCAobXVzdCBiZSBsYXN0KSAqL1xyXG59XHJcbiJdfQ== */\"","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-footer',\r\n  templateUrl: './footer.component.html',\r\n  styleUrls: ['./footer.component.css']\r\n})\r\nexport class FooterComponent implements OnInit {\r\n  currentYear: number;\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit() {\r\n    this.currentYear = new Date().getFullYear();\r\n  }\r\n}\r\n","export default \".header-logo {\\r\\n    padding-top: 60px;\\r\\n    padding-bottom: 50px;\\r\\n}\\r\\nbutton.link { background:none; border:none; }\\r\\n.mat-card-style {\\r\\n    margin-left: auto;\\r\\n    margin-right: auto;\\r\\n    margin-top: 30px;\\r\\n    min-width: 320px;\\r\\n    max-width: 320px;\\r\\n}\\r\\n\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvY29tcG9uZW50cy9oZWFkZXIvaGVhZGVyLmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7SUFDSSxpQkFBaUI7SUFDakIsb0JBQW9CO0FBQ3hCO0FBQ0EsY0FBYyxlQUFlLEVBQUUsV0FBVyxFQUFFO0FBQzVDO0lBQ0ksaUJBQWlCO0lBQ2pCLGtCQUFrQjtJQUNsQixnQkFBZ0I7SUFDaEIsZ0JBQWdCO0lBQ2hCLGdCQUFnQjtBQUNwQiIsImZpbGUiOiJzcmMvYXBwL2NvbXBvbmVudHMvaGVhZGVyL2hlYWRlci5jb21wb25lbnQuY3NzIiwic291cmNlc0NvbnRlbnQiOlsiLmhlYWRlci1sb2dvIHtcclxuICAgIHBhZGRpbmctdG9wOiA2MHB4O1xyXG4gICAgcGFkZGluZy1ib3R0b206IDUwcHg7XHJcbn1cclxuYnV0dG9uLmxpbmsgeyBiYWNrZ3JvdW5kOm5vbmU7IGJvcmRlcjpub25lOyB9XHJcbi5tYXQtY2FyZC1zdHlsZSB7XHJcbiAgICBtYXJnaW4tbGVmdDogYXV0bztcclxuICAgIG1hcmdpbi1yaWdodDogYXV0bztcclxuICAgIG1hcmdpbi10b3A6IDMwcHg7XHJcbiAgICBtaW4td2lkdGg6IDMyMHB4O1xyXG4gICAgbWF4LXdpZHRoOiAzMjBweDtcclxufVxyXG4iXX0= */\"","import {Component, Inject, Input, OnInit} from '@angular/core';\r\nimport './header.component.css';\r\nimport {Router} from '@angular/router';\r\nimport {DataKey, DataStoreService, SessionStorageKeys} from '../../services/data-store.service';\r\nimport {DataHandlerService} from '../../services/data-handler.service';\r\n\r\n@Component({\r\n  selector: 'app-header',\r\n  templateUrl: './header.component.html',\r\n  styleUrls: ['./header.component.css']\r\n})\r\n\r\nexport class HeaderComponent implements OnInit {\r\n\r\n  signUpResultObject = {\r\n    isSignUp: undefined,\r\n    userType: undefined\r\n  };\r\n  loggedInUser = null;\r\n  user = null;\r\n  firstName: string;\r\n  isSignUp = true;\r\n\r\n  userType;\r\n\r\n  constructor(\r\n              private dataHandlerService: DataHandlerService,\r\n              private router: Router,\r\n              private dataStore: DataStoreService\r\n  ) {}\r\n\r\n  ngOnInit() {\r\n    if (sessionStorage.getItem(SessionStorageKeys.loggedInUser)) {\r\n      this.loggedInUser = JSON.parse(sessionStorage.getItem(SessionStorageKeys.loggedInUser));\r\n    }\r\n    this.firstName = null;\r\n    if (this.loggedInUser) {\r\n      this.firstName = this.setFirstName(this.loggedInUser);\r\n    }\r\n    if (this.dataStore.get(DataKey.signUpResultObject).getValue()) {\r\n      this.signUpResultObject = this.dataStore.get(DataKey.signUpResultObject).getValue();\r\n      this.userType = this.signUpResultObject.userType;\r\n      this.isSignUp = this.signUpResultObject.isSignUp;\r\n    }\r\n  }\r\n\r\n  logoClick(): void {\r\n    if (this.dataStore.get(DataKey.signUpResultObject).getValue()) {\r\n      this.signUpResultObject = this.dataStore.get(DataKey.signUpResultObject).getValue();\r\n      this.userType = this.signUpResultObject.userType;\r\n      this.isSignUp = this.signUpResultObject.isSignUp;\r\n    }\r\n    if (this.loggedInUser && this.loggedInUser.doctor !== null && this.loggedInUser.doctor) {\r\n      this.router.navigate(['doctor/dashboard']).then(r => {\r\n      });\r\n    } else if (this.loggedInUser && this.loggedInUser.doctor !== null && !this.loggedInUser.doctor) {\r\n      this.router.navigate(['user/dashboard']).then(r => {\r\n      });\r\n    } else {\r\n      this.router.navigate(['signup']).then(r => {\r\n      });\r\n    }\r\n  }\r\n\r\n  goToHomePage() {\r\n    this.router.navigate(['/']).then(r => {\r\n    });\r\n  }\r\n\r\n  private setFirstName(loggedInUser: any): string {\r\n    let fName = null;\r\n    if (loggedInUser && loggedInUser.doctor) {\r\n      // todo: uncomment\r\n      // fName = loggedInUser.doctorData.firstName;\r\n      fName = loggedInUser.firstName;\r\n    } else if (loggedInUser && !loggedInUser.doctor) {\r\n      // todo: uncomment\r\n      // fName = loggedInUser.patientData.firstName;\r\n      fName = loggedInUser.firstName;\r\n    }\r\n    return fName;\r\n  }\r\n}\r\n","export default \".mat-card-style {\\r\\n    margin-left: auto;\\r\\n    margin-right: auto;\\r\\n    margin-top: 30px;\\r\\n    max-width: 640px;\\r\\n\\r\\n}\\r\\n\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvY29tcG9uZW50cy9sYW5kaW5nLXBhZ2UvbGFuZGluZy1wYWdlLmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7SUFDSSxpQkFBaUI7SUFDakIsa0JBQWtCO0lBQ2xCLGdCQUFnQjtJQUNoQixnQkFBZ0I7O0FBRXBCIiwiZmlsZSI6InNyYy9hcHAvY29tcG9uZW50cy9sYW5kaW5nLXBhZ2UvbGFuZGluZy1wYWdlLmNvbXBvbmVudC5jc3MiLCJzb3VyY2VzQ29udGVudCI6WyIubWF0LWNhcmQtc3R5bGUge1xyXG4gICAgbWFyZ2luLWxlZnQ6IGF1dG87XHJcbiAgICBtYXJnaW4tcmlnaHQ6IGF1dG87XHJcbiAgICBtYXJnaW4tdG9wOiAzMHB4O1xyXG4gICAgbWF4LXdpZHRoOiA2NDBweDtcclxuXHJcbn1cclxuIl19 */\"","import {Component, EventEmitter, Input, OnChanges, OnInit, Output, SimpleChanges} from '@angular/core';\r\nimport {Router} from '@angular/router';\r\nimport {DataLoaderService} from '../../services/data-loader.service';\r\nimport {AuthModel} from '../../models/auth-model';\r\nimport {DataKey, DataStoreService} from '../../services/data-store.service';\r\nimport {RequestOptions} from '../../models/request-options';\r\nimport {HttpHeaders, HttpParams} from '@angular/common/http';\r\nimport {AuthResponse} from '../../models/auth-response';\r\nimport {Constants} from '../../utils/Constants';\r\n\r\n@Component({\r\n  selector: 'app-landing-page',\r\n  templateUrl: './landing-page.component.html',\r\n  styleUrls: ['./landing-page.component.css']\r\n})\r\nexport class LandingPageComponent implements OnInit, OnChanges {\r\n\r\n  @Input() flow: number;\r\n  @Output() emitFlowChange = new EventEmitter();\r\n\r\n  constructor(private router: Router,\r\n              private dataLoader: DataLoaderService,\r\n              private dataStore: DataStoreService) {}\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n  ngOnChanges(changes: SimpleChanges): void {\r\n    if (changes.flow && changes.flow.currentValue) {\r\n      this.flow = changes.flow.currentValue;\r\n    }\r\n  }\r\n\r\n  goToSearchPage() {\r\n    this.router.navigate(['searchProfessionals']).then(r => {\r\n    });\r\n\r\n    const obj: AuthModel = new AuthModel();\r\n    obj.username = 'foo12345';\r\n    obj.password = 'foo';\r\n    this.dataLoader.login<AuthResponse>(Constants.BASE_URL + '/authenticate', new RequestOptions(), obj, DataKey.authKey);\r\n\r\n    this.dataStore.get(DataKey.authKey, true).subscribe(\r\n        (data) => {\r\n          console.log(data);\r\n        }\r\n    );\r\n  }\r\n}\r\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NvbXBvbmVudHMvbW9kYWwvbW9kYWwuY29tcG9uZW50LmNzcyJ9 */\"","import {Component, EventEmitter, Inject, Input, OnInit, Output} from '@angular/core';\r\nimport {MAT_DIALOG_DATA} from '@angular/material/dialog';\r\nimport {Router} from '@angular/router';\r\n\r\n@Component({\r\n  selector: 'app-modal',\r\n  templateUrl: './modal.component.html',\r\n  styleUrls: ['./modal.component.css']\r\n})\r\nexport class ModalComponent implements OnInit {\r\n\r\n  @Input() modalType;\r\n  @Output() clickEmitter = new EventEmitter<string>();\r\n\r\n  constructor(\r\n      private router: Router,\r\n      @Inject(MAT_DIALOG_DATA) data) {\r\n    this.modalType = data.modalType;\r\n  }\r\n\r\n  ngOnInit() {\r\n  }\r\n}\r\n","export default \".mat-card-style {\\r\\n    margin-left: auto;\\r\\n    margin-right: auto;\\r\\n    margin-top: 30px;\\r\\n    min-width: 320px;\\r\\n    max-width: 320px;\\r\\n\\r\\n}\\r\\n\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvY29tcG9uZW50cy9wYWdlLXRpdGxlL3BhZ2UtdGl0bGUuY29tcG9uZW50LmNzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtJQUNJLGlCQUFpQjtJQUNqQixrQkFBa0I7SUFDbEIsZ0JBQWdCO0lBQ2hCLGdCQUFnQjtJQUNoQixnQkFBZ0I7O0FBRXBCIiwiZmlsZSI6InNyYy9hcHAvY29tcG9uZW50cy9wYWdlLXRpdGxlL3BhZ2UtdGl0bGUuY29tcG9uZW50LmNzcyIsInNvdXJjZXNDb250ZW50IjpbIi5tYXQtY2FyZC1zdHlsZSB7XHJcbiAgICBtYXJnaW4tbGVmdDogYXV0bztcclxuICAgIG1hcmdpbi1yaWdodDogYXV0bztcclxuICAgIG1hcmdpbi10b3A6IDMwcHg7XHJcbiAgICBtaW4td2lkdGg6IDMyMHB4O1xyXG4gICAgbWF4LXdpZHRoOiAzMjBweDtcclxuXHJcbn1cclxuIl19 */\"","import {Component, Input, OnInit} from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-page-title',\r\n  templateUrl: './page-title.component.html',\r\n  styleUrls: ['./page-title.component.css']\r\n})\r\nexport class PageTitleComponent implements OnInit {\r\n\r\n  @Input() title;\r\n  constructor() { }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n}\r\n","export default \".mat-card-style {\\r\\n    margin-left: auto;\\r\\n    margin-right: auto;\\r\\n    margin-top: 30px;\\r\\n    min-width: 320px;\\r\\n    max-width: 320px;\\r\\n}\\r\\n.strikethrough {\\r\\n    text-decoration: line-through;\\r\\n}\\r\\n.mat-radio-button ~ .mat-radio-button {\\r\\n    margin-left: 16px;\\r\\n}\\r\\n\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvY29tcG9uZW50cy9wYXRpZW50LWJvb2tpbmctbGlzdC9wYXRpZW50LWJvb2tpbmctbGlzdC5jb21wb25lbnQuY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0lBQ0ksaUJBQWlCO0lBQ2pCLGtCQUFrQjtJQUNsQixnQkFBZ0I7SUFDaEIsZ0JBQWdCO0lBQ2hCLGdCQUFnQjtBQUNwQjtBQUNBO0lBQ0ksNkJBQTZCO0FBQ2pDO0FBQ0E7SUFDSSxpQkFBaUI7QUFDckIiLCJmaWxlIjoic3JjL2FwcC9jb21wb25lbnRzL3BhdGllbnQtYm9va2luZy1saXN0L3BhdGllbnQtYm9va2luZy1saXN0LmNvbXBvbmVudC5jc3MiLCJzb3VyY2VzQ29udGVudCI6WyIubWF0LWNhcmQtc3R5bGUge1xyXG4gICAgbWFyZ2luLWxlZnQ6IGF1dG87XHJcbiAgICBtYXJnaW4tcmlnaHQ6IGF1dG87XHJcbiAgICBtYXJnaW4tdG9wOiAzMHB4O1xyXG4gICAgbWluLXdpZHRoOiAzMjBweDtcclxuICAgIG1heC13aWR0aDogMzIwcHg7XHJcbn1cclxuLnN0cmlrZXRocm91Z2gge1xyXG4gICAgdGV4dC1kZWNvcmF0aW9uOiBsaW5lLXRocm91Z2g7XHJcbn1cclxuLm1hdC1yYWRpby1idXR0b24gfiAubWF0LXJhZGlvLWJ1dHRvbiB7XHJcbiAgICBtYXJnaW4tbGVmdDogMTZweDtcclxufVxyXG4iXX0= */\"","import { Component, OnInit } from '@angular/core';\r\nimport {BookingStatus, Colors} from '../doctor-side-booking-list/doctor-side-booking-list.component';\r\nimport {DoctorType} from '../../utils/Constants';\r\nimport {Router} from '@angular/router';\r\nimport {PageEvent} from '@angular/material';\r\n\r\n@Component({\r\n  selector: 'app-patient-booking-list',\r\n  templateUrl: './patient-booking-list.component.html',\r\n  styleUrls: ['./patient-booking-list.component.css']\r\n})\r\nexport class PatientBookingListComponent implements OnInit {\r\n\r\n  currentDate = new Date();\r\n  RESULTS_PER_PAGE = 5;\r\n  PAGINATION_START = 0;\r\n  PAGINATION_END = this.RESULTS_PER_PAGE;\r\n\r\n  bookings = [\r\n    {\r\n      bookingId: 2387,\r\n      doctorId: '76531',\r\n      date: '03-04-2020',\r\n      doctorName: 'Dr. John Doe',\r\n      bookingStatus: BookingStatus.BOOKING_COMPLETED\r\n    },\r\n    {\r\n      bookingId: 1196,\r\n      doctorId: '65456',\r\n      date: '18-05-2020',\r\n      doctorName: 'Dr. Sumanasiri',\r\n      bookingStatus: BookingStatus.BOOKING_CANCELLED\r\n    },\r\n    {\r\n      bookingId: 5729,\r\n      doctorId: '76537',\r\n      date: '02-05-2020',\r\n      doctorName: 'Dr. Tom Harrison',\r\n      bookingStatus: BookingStatus.BOOKING_NOT_STARTED\r\n    }\r\n  ];\r\n\r\n  title = 'MY BOOKINGS';\r\n  titleBooking = 'BOOKING';\r\n  selectedBookingId = null;\r\n  showBookings = 'all'; // 'new' or 'all'\r\n\r\n  doctor = {\r\n    id: 2,\r\n    name: 'Dr. Punya Anupama',\r\n    professionalType: DoctorType.GEN,\r\n    bio: 'MBBS [COLOMBO](1998)',\r\n    specialities: [\r\n      'Consultant Pathologist'\r\n    ],\r\n    consultationPrice: 'Rs. 1500.00'\r\n  };\r\n\r\n  booking = {\r\n    bookingId: 2387,\r\n    doctorId: '4352545235',\r\n    patientId: '76531',\r\n    doctorName: 'Dr. Tim Cook',\r\n    patientName: 'John Doe',\r\n    patientAge: 29,\r\n    skypeID: 'kafkjnf34',\r\n    phoneNumber: '0773092511',\r\n    bookingStatus: BookingStatus.BOOKING_NOT_STARTED,\r\n    messageThread: [\r\n      {\r\n        sender: 'patient',\r\n        message: 'Hi doctor, I have a headache and a cough.'\r\n      },\r\n      {\r\n        sender: 'doctor',\r\n        message: 'Hi John, do you have any allergies?'\r\n      },\r\n      {\r\n        sender: 'patient',\r\n        message: 'I\\'m allergic to panadol'\r\n      },\r\n      {\r\n        sender: 'doctor',\r\n        message: 'Thanks.'\r\n      },\r\n      {\r\n        sender: 'patient',\r\n        message: 'THANK YOU DOC!.'\r\n      },\r\n      {\r\n        sender: 'patient',\r\n        message: 'Can you send me a prescription btw?'\r\n      },\r\n      {\r\n        sender: 'doctor',\r\n        message: 'Sure. I will send you.'\r\n      },\r\n      {\r\n        sender: 'patient',\r\n        message: 'Awesome. Thanks'\r\n      }\r\n    ],\r\n    bookingPrice: 'Rs. 2000.00',\r\n    doctorCharge: 'Rs. 1800.00'\r\n  };\r\n  isConfirmationActive = false;\r\n  changeRequestSent = false;\r\n\r\n  items = [\r\n    'Augmentine 625mg bd - 5 days',\r\n    'Omeprazole 20mg bd - 5 days',\r\n    'Fexofenadine 180mg 1 night - 5 days'\r\n  ];\r\n\r\n  prescriptionList = [\r\n    {\r\n      prescription: ['Augmentine 625mg bd - 5 days',\r\n      'Omeprazole 20mg bd - 5 days',\r\n      'Fexofenadine 180mg 1 night - 5 days']\r\n    },\r\n    {\r\n      prescription: ['Augmentine 625mg bd - 5 days',\r\n        'Omeprazole 20mg bd - 5 days',\r\n      'Fexofenadine 180mg 1 night - 5 days']\r\n    }\r\n  ];\r\n  isPrescriptionsVisible = false;\r\n  selectedPrescription = null;\r\n\r\n  constructor(\r\n      private router: Router\r\n  ) { }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n  selectBooking($event: string) {\r\n    this.selectedBookingId = $event;\r\n  }\r\n\r\n  getColor($event) {\r\n    switch ($event) {\r\n      case BookingStatus.BOOKING_CANCELLED:\r\n        return Colors.BOOKING_CANCELLED;\r\n      case BookingStatus.BOOKING_NOT_STARTED:\r\n        return Colors.BOOKING_NOT_STARTED;\r\n      case BookingStatus.BOOKING_COMPLETED:\r\n        return Colors.BOOKING_COMPLETED;\r\n      case BookingStatus.BOOKING_CURRENT:\r\n        return Colors.BOOKING_CURRENT;\r\n      default:\r\n        return Colors.BOOKING_NOT_STARTED;\r\n    }\r\n  }\r\n\r\n  save() {\r\n    this.isConfirmationActive = false;\r\n    this.changeRequestSent = true;\r\n  }\r\n\r\n  cancel() {\r\n    this.isConfirmationActive = false;\r\n    this.changeRequestSent = false;\r\n  }\r\n\r\n  selectPrescription(prescription: string[]) {\r\n    this.selectedPrescription = prescription;\r\n  }\r\n\r\n  showPrescriptions(bookingId: number, action?) {\r\n    this.isPrescriptionsVisible = action;\r\n  }\r\n\r\n  goToUserDashboard() {\r\n    this.PAGINATION_START = 0;\r\n    this.PAGINATION_END = this.RESULTS_PER_PAGE;\r\n    this.router.navigate(['user/dashboard']).then(r => {\r\n    });\r\n  }\r\n\r\n  goToPage($event: PageEvent) {\r\n    this.PAGINATION_START = $event.pageIndex * $event.pageSize;\r\n    this.PAGINATION_END = this.PAGINATION_START + $event.pageSize;\r\n  }\r\n\r\n  newBooking() {\r\n    this.router.navigate(['searchProfessionals']).then(r => {\r\n    });\r\n  }\r\n}\r\n","export default \".mat-card-style {\\r\\n    margin-left: auto;\\r\\n    margin-right: auto;\\r\\n    margin-top: 30px;\\r\\n    min-width: 320px;\\r\\n    max-width: 320px;\\r\\n\\r\\n}\\r\\n\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvY29tcG9uZW50cy9wYXRpZW50LXByb2ZpbGUvcGF0aWVudC1wcm9maWxlLmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7SUFDSSxpQkFBaUI7SUFDakIsa0JBQWtCO0lBQ2xCLGdCQUFnQjtJQUNoQixnQkFBZ0I7SUFDaEIsZ0JBQWdCOztBQUVwQiIsImZpbGUiOiJzcmMvYXBwL2NvbXBvbmVudHMvcGF0aWVudC1wcm9maWxlL3BhdGllbnQtcHJvZmlsZS5jb21wb25lbnQuY3NzIiwic291cmNlc0NvbnRlbnQiOlsiLm1hdC1jYXJkLXN0eWxlIHtcclxuICAgIG1hcmdpbi1sZWZ0OiBhdXRvO1xyXG4gICAgbWFyZ2luLXJpZ2h0OiBhdXRvO1xyXG4gICAgbWFyZ2luLXRvcDogMzBweDtcclxuICAgIG1pbi13aWR0aDogMzIwcHg7XHJcbiAgICBtYXgtd2lkdGg6IDMyMHB4O1xyXG5cclxufVxyXG4iXX0= */\"","import { Component, OnInit } from '@angular/core';\r\nimport {Router} from '@angular/router';\r\n\r\n@Component({\r\n  selector: 'app-patient-profile',\r\n  templateUrl: './patient-profile.component.html',\r\n  styleUrls: ['./patient-profile.component.css']\r\n})\r\nexport class PatientProfileComponent implements OnInit {\r\n\r\n  patient = {\r\n    id: 1,\r\n    title: 'Mr.',\r\n    birthday: '03-05-1994',\r\n    age: 31,\r\n    name: 'John Doe',\r\n    medicalHistory: 'long term gastritis patient',\r\n    allergies: 'allergic to hindi songs',\r\n  };\r\n\r\n  titles = [\r\n    {value: 'Dr.'},\r\n    {value: 'Mr.'},\r\n    {value: 'Mrs.'},\r\n    {value: 'Ms.'},\r\n    {value: 'Prof.'}\r\n  ];\r\n\r\n  title = 'MY PROFILE';\r\n  editable = false;\r\n\r\n  constructor(\r\n      private router: Router\r\n  ) { }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n  goToMyAppointments() {\r\n    this.router.navigate(['user/appointments']).then(r => {\r\n    });\r\n  }\r\n\r\n  toggleEditable(editable: boolean) {\r\n    this.editable = editable;\r\n  }\r\n\r\n  logOut() {\r\n    sessionStorage.clear();\r\n    // location.reload();\r\n    this.router.navigate(['signup']).then(r => {});\r\n  }\r\n}\r\n","export default \".mat-card-style {\\r\\n    margin-left: auto;\\r\\n    margin-right: auto;\\r\\n    margin-top: 30px;\\r\\n    min-width: 320px;\\r\\n    max-width: 320px;\\r\\n\\r\\n}\\r\\n\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvY29tcG9uZW50cy9wYXltZW50LXN1Y2Nlc3MvcGF5bWVudC1zdWNjZXNzLmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7SUFDSSxpQkFBaUI7SUFDakIsa0JBQWtCO0lBQ2xCLGdCQUFnQjtJQUNoQixnQkFBZ0I7SUFDaEIsZ0JBQWdCOztBQUVwQiIsImZpbGUiOiJzcmMvYXBwL2NvbXBvbmVudHMvcGF5bWVudC1zdWNjZXNzL3BheW1lbnQtc3VjY2Vzcy5jb21wb25lbnQuY3NzIiwic291cmNlc0NvbnRlbnQiOlsiLm1hdC1jYXJkLXN0eWxlIHtcclxuICAgIG1hcmdpbi1sZWZ0OiBhdXRvO1xyXG4gICAgbWFyZ2luLXJpZ2h0OiBhdXRvO1xyXG4gICAgbWFyZ2luLXRvcDogMzBweDtcclxuICAgIG1pbi13aWR0aDogMzIwcHg7XHJcbiAgICBtYXgtd2lkdGg6IDMyMHB4O1xyXG5cclxufVxyXG4iXX0= */\"","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-payment-success',\r\n  templateUrl: './payment-success.component.html',\r\n  styleUrls: ['./payment-success.component.css']\r\n})\r\nexport class PaymentSuccessComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n}\r\n","export default \".mat-card-style {\\r\\n    margin-left: auto;\\r\\n    margin-right: auto;\\r\\n    margin-top: 30px;\\r\\n    min-width: 320px;\\r\\n    max-width: 320px;\\r\\n\\r\\n}\\r\\n\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvY29tcG9uZW50cy9wcmVzY3JpcHRpb24tbGlzdC9wcmVzY3JpcHRpb24tbGlzdC5jb21wb25lbnQuY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0lBQ0ksaUJBQWlCO0lBQ2pCLGtCQUFrQjtJQUNsQixnQkFBZ0I7SUFDaEIsZ0JBQWdCO0lBQ2hCLGdCQUFnQjs7QUFFcEIiLCJmaWxlIjoic3JjL2FwcC9jb21wb25lbnRzL3ByZXNjcmlwdGlvbi1saXN0L3ByZXNjcmlwdGlvbi1saXN0LmNvbXBvbmVudC5jc3MiLCJzb3VyY2VzQ29udGVudCI6WyIubWF0LWNhcmQtc3R5bGUge1xyXG4gICAgbWFyZ2luLWxlZnQ6IGF1dG87XHJcbiAgICBtYXJnaW4tcmlnaHQ6IGF1dG87XHJcbiAgICBtYXJnaW4tdG9wOiAzMHB4O1xyXG4gICAgbWluLXdpZHRoOiAzMjBweDtcclxuICAgIG1heC13aWR0aDogMzIwcHg7XHJcblxyXG59XHJcbiJdfQ== */\"","import { Component, OnInit } from '@angular/core';\nimport {Router} from '@angular/router';\n\n@Component({\n  selector: 'app-prescription-list',\n  templateUrl: './prescription-list.component.html',\n  styleUrls: ['./prescription-list.component.css']\n})\nexport class PrescriptionListComponent implements OnInit {\n\n  isDoctor: boolean;\n  prescriptionList: any [];\n\n  constructor(\n      private router: Router\n  ) { }\n\n  ngOnInit() {\n    this.isDoctor = true;\n    // this.isDoctor = false;\n\n    this.prescriptionList = new Array<any>()\n    this.prescriptionList.push(\n        {\n          appointmentNumber: 356,\n          prescriptionTimeStamp: new Date(2020, 3, 2, 9, 45)\n        }\n    );\n    this.prescriptionList.push(\n        {\n          appointmentNumber: 423,\n          prescriptionTimeStamp: new Date(2020, 3, 2, 10, 30)\n        }\n    );\n    this.prescriptionList.push(\n        {\n          appointmentNumber: 987,\n          prescriptionTimeStamp: new Date(2020, 3, 2, 11, 20)\n        }\n    );\n  }\n\n    selectPrescription() {\n      this.router.navigate(['appointment/prescription']).then(r => {\n      });\n    }\n}\n","export default \".mat-card-style {\\r\\n    margin-left: auto;\\r\\n    margin-right: auto;\\r\\n    margin-top: 30px;\\r\\n    min-width: 320px;\\r\\n    max-width: 320px;\\r\\n}\\r\\n\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvY29tcG9uZW50cy9wcmVzY3JpcHRpb24vcHJlc2NyaXB0aW9uLmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7SUFDSSxpQkFBaUI7SUFDakIsa0JBQWtCO0lBQ2xCLGdCQUFnQjtJQUNoQixnQkFBZ0I7SUFDaEIsZ0JBQWdCO0FBQ3BCIiwiZmlsZSI6InNyYy9hcHAvY29tcG9uZW50cy9wcmVzY3JpcHRpb24vcHJlc2NyaXB0aW9uLmNvbXBvbmVudC5jc3MiLCJzb3VyY2VzQ29udGVudCI6WyIubWF0LWNhcmQtc3R5bGUge1xyXG4gICAgbWFyZ2luLWxlZnQ6IGF1dG87XHJcbiAgICBtYXJnaW4tcmlnaHQ6IGF1dG87XHJcbiAgICBtYXJnaW4tdG9wOiAzMHB4O1xyXG4gICAgbWluLXdpZHRoOiAzMjBweDtcclxuICAgIG1heC13aWR0aDogMzIwcHg7XHJcbn1cclxuIl19 */\"","import {Component, ElementRef, OnInit, ViewChild} from '@angular/core';\r\nimport {BookingStatus} from '../doctor-side-booking-list/doctor-side-booking-list.component';\r\nimport {DoctorType} from '../../utils/Constants';\r\nimport {Router} from '@angular/router';\r\nimport jsPDF from 'jspdf';\r\nimport html2canvas from 'html2canvas';\r\nimport {$} from 'protractor';\r\n\r\n@Component({\r\n  selector: 'app-prescription',\r\n  templateUrl: './prescription.component.html',\r\n  styleUrls: ['./prescription.component.css']\r\n})\r\n\r\nexport class PrescriptionComponent implements OnInit {\r\n  @ViewChild('test', {static: true}) el: ElementRef;\r\n\r\n  currentDate = new Date();\r\n\r\n  doctor = {\r\n    id: 2,\r\n    name: 'Dr. Punya Anupama',\r\n    professionalType: DoctorType.GEN,\r\n    bio: 'MBBS [COLOMBO](1998)',\r\n    specialities: [\r\n      'Consultant Pathologist'\r\n    ],\r\n    consultationPrice: 'Rs. 1500.00'\r\n  };\r\n\r\n  booking = {\r\n    bookingId: 2387,\r\n    doctorId: '4352545235',\r\n    patientId: '76531',\r\n    doctorName: 'Dr. Tim Cook',\r\n    patientTitle: 'Mr',\r\n    patientAge: 29,\r\n    patientName: 'John Doe',\r\n    skypeID: 'kafkjnf34',\r\n    phoneNumber: '0773092511',\r\n    bookingStatus: BookingStatus.BOOKING_NOT_STARTED,\r\n    messageThread: [\r\n      {\r\n        sender: 'patient',\r\n        message: 'Hi doctor, I have a headache and a cough.'\r\n      },\r\n      {\r\n        sender: 'doctor',\r\n        message: 'Hi John, do you have any allergies?'\r\n      },\r\n      {\r\n        sender: 'patient',\r\n        message: 'I\\'m allergic to panadol'\r\n      },\r\n      {\r\n        sender: 'doctor',\r\n        message: 'Thanks.'\r\n      },\r\n      {\r\n        sender: 'patient',\r\n        message: 'THANK YOU DOC!.'\r\n      },\r\n      {\r\n        sender: 'patient',\r\n        message: 'Can you send me a prescription btw?'\r\n      },\r\n      {\r\n        sender: 'doctor',\r\n        message: 'Sure. I will send you.'\r\n      },\r\n      {\r\n        sender: 'patient',\r\n        message: 'Awesome. Thanks'\r\n      }\r\n    ],\r\n    bookingPrice: 'Rs. 2000.00',\r\n    doctorCharge: 'Rs. 1800.00'\r\n  };\r\n\r\n  items = [\r\n      'Augmentine 625mg bd - 5 days',\r\n      'Omeprazole 20mg bd - 5 days',\r\n      'Fexofenadine 180mg 1 night - 5 days'\r\n  ];\r\n\r\n  preview = false;\r\n  prescriptionList: any [] = [\r\n      '',\r\n      ''\r\n  ];\r\n\r\n  constructor(\r\n      private router: Router\r\n  ) { }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n  copyToClipBoard() {\r\n    const copyText = document.getElementById('skypeId');\r\n    // @ts-ignore\r\n    copyText.select();\r\n    document.execCommand('copy');\r\n    // @ts-ignore\r\n    alert('Copied the text: ' + copyText.value);\r\n  }\r\n\r\n    previewToggle($event: string) {\r\n        if ($event === 'preview') {\r\n          this.preview = true;\r\n        } else {\r\n          this.preview = false;\r\n        }\r\n    }\r\n  public SavePDF(): void {\r\n    // var pdf = new jsPDF('p','pt','a4');\r\n    // pdf.html2pdf(document.getElementById('pdfTable'), function() {\r\n    //   pdf.save('pdfTable.pdf');\r\n    // });\r\n  }\r\n\r\n  goToAppointmentList(b: boolean) {\r\n      this.router.navigate(['appointment/prescriptionList']).then(r => {\r\n      });\r\n    }\r\n}\r\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NvbXBvbmVudHMvcHJvZmVzc2lvbmFsLWNhcmQvcHJvZmVzc2lvbmFsLWNhcmQuY29tcG9uZW50LmNzcyJ9 */\"","import {Component, EventEmitter, Input, OnInit, Output} from '@angular/core';\r\nimport {currencyCodes} from '../../utils/Constants';\r\n\r\n@Component({\r\n  selector: 'app-professional-card',\r\n  templateUrl: './professional-card.component.html',\r\n  styleUrls: ['./professional-card.component.css']\r\n})\r\nexport class ProfessionalCardComponent implements OnInit {\r\n  @Input() professional: any;\r\n  @Output() selectProfessional: EventEmitter<string> = new EventEmitter<string>();\r\n\r\n  overTheDoctorCard = null;\r\n  currency = currencyCodes.LKR;\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit() {}\r\n\r\n  onMouseEnter($event: number) {\r\n    this.overTheDoctorCard = $event;\r\n  }\r\n\r\n  onMouseLeave() {\r\n    this.overTheDoctorCard = null;\r\n  }\r\n\r\n  isOverTheDoctorCard($event: number) {\r\n    return $event === this.overTheDoctorCard;\r\n  }\r\n\r\n  selectProfessional_($event: string) {\r\n    this.selectProfessional.emit($event);\r\n  }\r\n}\r\n","export default \".mat-card-style {\\r\\n    margin-left: auto;\\r\\n    margin-right: auto;\\r\\n    margin-top: 30px;\\r\\n    min-width: 320px;\\r\\n    max-width: 320px;\\r\\n\\r\\n}\\r\\n\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvY29tcG9uZW50cy9zZWFyY2gtcHJvZmVzc2lvbmFscy1tYWluL3NlYXJjaC1wcm9mZXNzaW9uYWxzLW1haW4uY29tcG9uZW50LmNzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtJQUNJLGlCQUFpQjtJQUNqQixrQkFBa0I7SUFDbEIsZ0JBQWdCO0lBQ2hCLGdCQUFnQjtJQUNoQixnQkFBZ0I7O0FBRXBCIiwiZmlsZSI6InNyYy9hcHAvY29tcG9uZW50cy9zZWFyY2gtcHJvZmVzc2lvbmFscy1tYWluL3NlYXJjaC1wcm9mZXNzaW9uYWxzLW1haW4uY29tcG9uZW50LmNzcyIsInNvdXJjZXNDb250ZW50IjpbIi5tYXQtY2FyZC1zdHlsZSB7XHJcbiAgICBtYXJnaW4tbGVmdDogYXV0bztcclxuICAgIG1hcmdpbi1yaWdodDogYXV0bztcclxuICAgIG1hcmdpbi10b3A6IDMwcHg7XHJcbiAgICBtaW4td2lkdGg6IDMyMHB4O1xyXG4gICAgbWF4LXdpZHRoOiAzMjBweDtcclxuXHJcbn1cclxuIl19 */\"","import { Component, OnInit } from '@angular/core';\r\nimport {Router} from '@angular/router';\r\nimport {specializations, Constants, DoctorType} from '../../utils/Constants';\r\nimport {DataHandlerService} from '../../services/data-handler.service';\r\nimport {UserData} from '../../models/user-data';\r\nimport {HttpHeaders, HttpParams} from '@angular/common/http';\r\nimport {DataKey, DataStoreService} from '../../services/data-store.service';\r\nimport {DataLoaderService} from '../../services/data-loader.service';\r\nimport {PageEvent} from '@angular/material';\r\n\r\n@Component({\r\n  selector: 'app-search-professionals-main',\r\n  templateUrl: './search-professionals-main.component.html',\r\n  styleUrls: ['./search-professionals-main.component.css']\r\n})\r\nexport class SearchProfessionalsMainComponent implements OnInit {\r\n\r\n  searchString = null;\r\n  professionalList = null;\r\n  RESULTS_PER_PAGE = 10;\r\n  PAGINATION_START = 0;\r\n  PAGINATION_END = this.RESULTS_PER_PAGE;\r\n  selectedCategory: any = null;\r\n  selectedSpecialization: any = null;\r\n\r\n  categories = [\r\n    {\r\n      category: DoctorType.CON\r\n    },\r\n    {\r\n      category: DoctorType.GEN\r\n    },\r\n    {\r\n      category: DoctorType.COUN\r\n    },\r\n    {\r\n      category: DoctorType.OTH\r\n    }\r\n  ];\r\n\r\n  specializations = specializations;\r\n\r\n  constructor(\r\n      private router: Router,\r\n      private dataStore: DataStoreService,\r\n      private dataLoaderService: DataLoaderService,\r\n      private dataHandlerService: DataHandlerService\r\n  ) { }\r\n\r\n  ngOnInit() {\r\n    this.InitialSearch();\r\n  }\r\n\r\n  search(searchString: string, selectedCategory: string, selectedSpecialization: string) {\r\n    this.PAGINATION_START = 0;\r\n    this.PAGINATION_END = this.RESULTS_PER_PAGE;\r\n    if (\r\n        !this.searchString &&\r\n        !this.selectedCategory &&\r\n        !this.selectedSpecialization\r\n    ) {\r\n      this.InitialSearch();\r\n    } else {\r\n      // General Practitioners don't have a specialization\r\n      if (this.selectedCategory === DoctorType.GEN) {\r\n        this.selectedSpecialization = null;\r\n      }\r\n\r\n      // converting professionalType to a database readable format\r\n      if (this.selectedCategory) {\r\n        this.selectedCategory = this.dataHandlerService.convertProfessionalTypeToDBFormat(\r\n            JSON.parse(JSON.stringify(this.selectedCategory)));\r\n      }\r\n\r\n      // making 'Any' option null\r\n      if (this.selectedSpecialization === 'Any') {\r\n        this.selectedSpecialization = null;\r\n      }\r\n\r\n      // create url and send request\r\n      const url = Constants.BASE_URL + Constants.PROFESSIONAL_SEARCH;\r\n      let httpParams = new HttpParams();\r\n      if (this.searchString) {\r\n        httpParams = httpParams.append('name', this.searchString);\r\n      }\r\n      if (this.selectedCategory) {\r\n        httpParams = httpParams.append('professionalType', this.selectedCategory);\r\n      }\r\n      if (this.selectedSpecialization && this.selectedSpecialization !== 'Any') {\r\n        httpParams = httpParams.append('specialization', this.selectedSpecialization);\r\n      }\r\n      this.dataLoaderService.get<UserData>(url, httpParams, new HttpHeaders(), DataKey.createdUser)\r\n          .then((data: any) => {\r\n            if (data && data.status && data.status.code === 1) {\r\n              this.resetVariables();\r\n              this.professionalList = data.data[0];\r\n            } else if (data && data.status && data.status.code === -1) {\r\n              this.resetVariables();\r\n            }\r\n          });\r\n    }\r\n  }\r\n\r\n  private resetVariables() {\r\n    this.professionalList = [];\r\n    // this.searchString = null;\r\n    this.selectedCategory = null;\r\n    this.selectedSpecialization = null;\r\n  }\r\n\r\n  selectProfessional($event: string) {\r\n    this.PAGINATION_START = 0;\r\n    this.PAGINATION_END = this.RESULTS_PER_PAGE;\r\n    this.loadProfessionalData($event);\r\n    this.router.navigate(['appointmentTime']).then(r => {\r\n    });\r\n  }\r\n\r\n  goToPage($event: PageEvent) {\r\n    this.PAGINATION_START = $event.pageIndex * $event.pageSize;\r\n    this.PAGINATION_END = this.PAGINATION_START + $event.pageSize;\r\n  }\r\n\r\n  private loadProfessionalData($event: string) {\r\n    // create url and send request\r\n    const url = Constants.BASE_URL + Constants.AVAILABLE_APPOINTMENTS_FOR_A_PROFESSIONAL + $event;\r\n    this.dataLoaderService.get<UserData>(url, new HttpParams(), new HttpHeaders(), DataKey.createdUser)\r\n        .then((data: any) => {\r\n          if (data && data.status && data.status.code === 1) {\r\n            this.dataStore.set(DataKey.availableAppointmentsForProfessional, data.data[0]);\r\n          } else if (data && data.status && data.status.code === -1) {\r\n            this.dataStore.set(DataKey.availableAppointmentsForProfessional, null);\r\n          }\r\n        });\r\n  }\r\n\r\n  private InitialSearch() {\r\n    // todo: uncomment\r\n    // this.search(null, null, null);\r\n    this.professionalList = [\r\n      {\r\n        id: 1,\r\n        title: 'Dr.',\r\n        firstName: 'Dummy',\r\n        lastName: 'One',\r\n        professionalType: DoctorType.CON,\r\n        qualifications: 'MD [NIZHNY NOVGOROD STATE MED ACA] RUSSIA(2008)',\r\n        specialityA: 'Neurologist',\r\n        specialityB: 'Pediatrician',\r\n        specialityC: '',\r\n        priceForAppointment: '2000',\r\n        isSkypePreferred: true,\r\n        isWhatsAppPreferred: true\r\n      },\r\n      {\r\n        id: 2,\r\n        title: 'Dr.',\r\n        firstName: 'Dummy',\r\n        lastName: 'Two',\r\n        professionalType: DoctorType.GEN,\r\n        qualifications: 'MBBS [COLOMBO](1998)',\r\n        specialityA: 'Pathologist',\r\n        specialityB: '',\r\n        specialityC: '',\r\n        priceForAppointment: '1500',\r\n        isSkypePreferred: false,\r\n        isWhatsAppPreferred: true\r\n      },\r\n      {\r\n        id: 3,\r\n        title: 'Dr.',\r\n        firstName: 'Dummy',\r\n        lastName: 'Three',\r\n        professionalType: DoctorType.OTH,\r\n        qualifications: 'MBBS [RUHUNA](2000)',\r\n        specialityA: 'Clinical Nutritionist',\r\n        specialityB: '',\r\n        specialityC: '',\r\n        priceForAppointment: '2500',\r\n        isSkypePreferred: true,\r\n        isWhatsAppPreferred: false\r\n      }\r\n    ];\r\n  }\r\n}\r\n","export default \".mat-card-style {\\r\\n    margin-left: auto;\\r\\n    margin-right: auto;\\r\\n    margin-top: 30px;\\r\\n    min-width: 320px;\\r\\n    max-width: 320px;\\r\\n}\\r\\n\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvY29tcG9uZW50cy9zZWFyY2gtcHJvZmVzc2lvbmFscy9zZWFyY2gtcHJvZmVzc2lvbmFscy5jb21wb25lbnQuY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0lBQ0ksaUJBQWlCO0lBQ2pCLGtCQUFrQjtJQUNsQixnQkFBZ0I7SUFDaEIsZ0JBQWdCO0lBQ2hCLGdCQUFnQjtBQUNwQiIsImZpbGUiOiJzcmMvYXBwL2NvbXBvbmVudHMvc2VhcmNoLXByb2Zlc3Npb25hbHMvc2VhcmNoLXByb2Zlc3Npb25hbHMuY29tcG9uZW50LmNzcyIsInNvdXJjZXNDb250ZW50IjpbIi5tYXQtY2FyZC1zdHlsZSB7XHJcbiAgICBtYXJnaW4tbGVmdDogYXV0bztcclxuICAgIG1hcmdpbi1yaWdodDogYXV0bztcclxuICAgIG1hcmdpbi10b3A6IDMwcHg7XHJcbiAgICBtaW4td2lkdGg6IDMyMHB4O1xyXG4gICAgbWF4LXdpZHRoOiAzMjBweDtcclxufVxyXG4iXX0= */\"","import { Component, OnInit } from '@angular/core';\r\nimport {DoctorType} from '../../utils/Constants';\r\n\r\n@Component({\r\n  selector: 'app-search-professionals',\r\n  templateUrl: './search-professionals.component.html',\r\n  styleUrls: ['./search-professionals.component.css']\r\n})\r\nexport class SearchProfessionalsComponent implements OnInit {\r\n\r\n  professionalListType = DoctorType.CON;\r\n  selectedProfessionalType = 'option2';\r\n  searchString = null;\r\n\r\n  professionalList = [\r\n    {\r\n      id: 1,\r\n      name: 'Dr. Nuwan Chinthaka',\r\n      professionalType: DoctorType.CON,\r\n      bio: 'MD [NIZHNY NOVGOROD STATE MED ACA] RUSSIA(2008)',\r\n      specialities: [\r\n        'Consultant Neurologist',\r\n        'Consultant Pediatrician'\r\n      ],\r\n      consultationPrice: 'Rs. 2000.00',\r\n      isSkypePreferred: true,\r\n      isWhatsAppPreferred: true\r\n    },\r\n    {\r\n      id: 2,\r\n      name: 'Dr. Punya Anupama',\r\n      professionalType: DoctorType.CON,\r\n      bio: 'MBBS [COLOMBO](1998)',\r\n      specialities: [\r\n        'Consultant Pathologist'\r\n      ],\r\n      consultationPrice: 'Rs. 1500.00',\r\n      isSkypePreferred: true,\r\n      isWhatsAppPreferred: false\r\n    },\r\n    {\r\n      id: 3,\r\n      name: 'Dr. Eric Deepal',\r\n      professionalType: DoctorType.CON,\r\n      bio: 'MBBS [RUHUNA](2000)',\r\n      specialities: [\r\n        'Consultant Clinical Nutritionist'\r\n      ],\r\n      consultationPrice: 'Rs. 2500.00',\r\n      isSkypePreferred: false,\r\n      isWhatsAppPreferred: true\r\n    }\r\n  ];\r\n\r\n  specializations = [\r\n\r\n  ];\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n  selectDoc($event: number) {\r\n    console.log($event);\r\n  }\r\n\r\n  search() {\r\n      console.log('jhbrch');\r\n  }\r\n}\r\n\r\n","export default \".mat-tab-group {\\r\\n    margin-bottom: 48px;\\r\\n}\\r\\n.mat-card-style {\\r\\n    margin-left: auto;\\r\\n    margin-right: auto;\\r\\n    margin-top: 30px;\\r\\n    min-width: 320px;\\r\\n\\r\\n}\\r\\n\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvY29tcG9uZW50cy9zaWdudXAvc2lnbi11cC5jb21wb25lbnQuY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0lBQ0ksbUJBQW1CO0FBQ3ZCO0FBQ0E7SUFDSSxpQkFBaUI7SUFDakIsa0JBQWtCO0lBQ2xCLGdCQUFnQjtJQUNoQixnQkFBZ0I7O0FBRXBCIiwiZmlsZSI6InNyYy9hcHAvY29tcG9uZW50cy9zaWdudXAvc2lnbi11cC5jb21wb25lbnQuY3NzIiwic291cmNlc0NvbnRlbnQiOlsiLm1hdC10YWItZ3JvdXAge1xyXG4gICAgbWFyZ2luLWJvdHRvbTogNDhweDtcclxufVxyXG4ubWF0LWNhcmQtc3R5bGUge1xyXG4gICAgbWFyZ2luLWxlZnQ6IGF1dG87XHJcbiAgICBtYXJnaW4tcmlnaHQ6IGF1dG87XHJcbiAgICBtYXJnaW4tdG9wOiAzMHB4O1xyXG4gICAgbWluLXdpZHRoOiAzMjBweDtcclxuXHJcbn1cclxuIl19 */\"","import {Component, EventEmitter, Input, OnInit, Output} from '@angular/core';\r\nimport './sign-up.component.css';\r\nimport * as CryptoJS from 'crypto-js';\r\nimport {UserData} from '../../models/user-data';\r\nimport {Constants, DoctorTitles, MODAL_TYPES} from '../../utils/Constants';\r\nimport {DataLoaderService} from '../../services/data-loader.service';\r\nimport {AuthResponse} from '../../models/auth-response';\r\nimport {RequestOptions} from '../../models/request-options';\r\nimport {DataKey, DataStoreService, SessionStorageKeys} from '../../services/data-store.service';\r\nimport {HttpHeaders, HttpParams} from '@angular/common/http';\r\nimport {Router} from '@angular/router';\r\nimport {MatDialogConfig, MatRadioChange} from '@angular/material';\r\nimport {ModalComponent} from '../modal/modal.component';\r\nimport {MatDialog} from '@angular/material/dialog';\r\n\r\n@Component({\r\n  selector: 'app-signup',\r\n  templateUrl: './sign-up.component.html',\r\n  styleUrls: ['./sign-up.component.css']\r\n})\r\nexport class SignUpComponent implements OnInit {\r\n  @Input() flow: number;\r\n  @Output() emitFlowChange = new EventEmitter();\r\n\r\n  isDoctor = false;\r\n  encryptionKey = 'ezmed';\r\n  hide = true;\r\n  // logInType = 'doctor';\r\n  logInType = 'patient';\r\n  firstName: string;\r\n  lastName: string;\r\n  email: string;\r\n  isSignUp = true;\r\n  title: any;\r\n  birthday: any;\r\n  contactNumber: any;\r\n  whatsAppNumber: any;\r\n  pass: any;\r\n  conPass: any;\r\n  genders = [\r\n    {value: 'male', viewValue: 'Male'},\r\n    {value: 'female', viewValue: 'Female'}\r\n  ];\r\n  isMale = true;\r\n  knownAllergies: any;\r\n  isIncompleteErrorAvailable = false;\r\n  signUpResultObject = {\r\n    isSignUp: undefined,\r\n    userType: undefined\r\n  };\r\n  titles = [\r\n    {value: DoctorTitles.DR},\r\n    {value: DoctorTitles.MR},\r\n    {value: DoctorTitles.MRS},\r\n    {value: DoctorTitles.MS},\r\n    {value: DoctorTitles.PROF},\r\n  ];\r\n\r\n  constructor(\r\n      public dialog: MatDialog,\r\n      private router: Router,\r\n      private dataLoaderService: DataLoaderService,\r\n      private dataStore: DataStoreService\r\n  ) { }\r\n\r\n  ngOnInit() {\r\n    // this.resetFields();\r\n\r\n    // if (this.dataStore.get(DataKey.signUpResultObject).getValue()) {\r\n    //   this.signUpResultObject = this.dataStore.get(DataKey.signUpResultObject).getValue();\r\n    //   this.logInType = this.signUpResultObject.userType;\r\n    // }\r\n\r\n    // console.log(this.encryptPassword('milinda'));\r\n  }\r\n\r\n  registerNewUser(user: UserData) {\r\n    user.password = this.encryptPassword(user.password);\r\n    // create url and send request\r\n    const url = Constants.BASE_URL + Constants.CREATE_NEW_USER;\r\n    this.dataLoaderService.post<UserData>(url, new HttpParams(), new HttpHeaders(), DataKey.createdUser, user )\r\n        .then((data: any) => {\r\n          if (data && data.status && data.status.code === 1 && data.data && data.data.length > 0) {\r\n            sessionStorage.setItem(SessionStorageKeys.loggedInUser, JSON.stringify(data.data[0]));\r\n            if (data.data[0].doctor) {\r\n              // location.reload();\r\n              sessionStorage.setItem(SessionStorageKeys.userId, null);\r\n              // todo: uncomment\r\n              // sessionStorage.setItem(SessionStorageKeys.userName, JSON.stringify(data.data[0].doctorData.userName));\r\n              sessionStorage.setItem(SessionStorageKeys.userName, JSON.stringify(data.data[0].userName));\r\n              this.router.navigate(['doctor/dashboard']).then(r => {\r\n                location.reload();\r\n              });\r\n            } else if (!data.data[0].doctor) {\r\n              // location.reload();\r\n              sessionStorage.setItem(SessionStorageKeys.userId, null);\r\n              // todo: uncomment\r\n              // sessionStorage.setItem(SessionStorageKeys.userName, JSON.stringify(data.data[0].patientData.userName));\r\n              sessionStorage.setItem(SessionStorageKeys.userName, JSON.stringify(data.data[0].userName));\r\n              this.router.navigate(['user/dashboard']).then(r => {\r\n                location.reload();\r\n              });\r\n            }\r\n          } else if (data && data.status && data.status.code === -1) {\r\n            alert('Something went wrong. Please contact support !!');\r\n          }\r\n        });\r\n  }\r\n\r\n  encryptPassword(password: string): string {\r\n    password =  CryptoJS.AES.encrypt(password, this.encryptionKey).toString();\r\n    // console.log(CryptoJS.AES.decrypt(password, this.encryptionKey).toString(CryptoJS.enc.Utf8));\r\n    return password;\r\n  }\r\n\r\n  validateInput(): boolean {\r\n    return false;\r\n  }\r\n\r\n  SignUp() {\r\n    if ( this.validateInput() ) {\r\n      this.isIncompleteErrorAvailable = true;\r\n    } else {\r\n      this.isIncompleteErrorAvailable = false;\r\n\r\n      const userObj = new UserData();\r\n      userObj.userName = this.email;\r\n      userObj.password = this.pass;\r\n      userObj.firstName = this.firstName;\r\n      userObj.lastName = this.lastName;\r\n      userObj.title = this.title;\r\n      userObj.isMale = this.isMale;\r\n      userObj.birthday = this.birthday;\r\n      userObj.contactNumber = this.contactNumber;\r\n      userObj.whatsAppNumber = this.whatsAppNumber;\r\n      userObj.doctor = this.isDoctor;\r\n      userObj.userAllergies = this.knownAllergies;\r\n\r\n      this.registerNewUser(userObj);\r\n    }\r\n  }\r\n\r\n  setGender(value: any) {\r\n    switch (value) {\r\n      case 'female': {\r\n        this.isMale = false;\r\n        break;\r\n      }\r\n      case 'male': {\r\n        this.isMale = true;\r\n        break;\r\n      }\r\n    }\r\n  }\r\n\r\n  setIsDoctor($event: MatRadioChange) {\r\n    this.isDoctor = JSON.parse($event.value);\r\n    this.resetFields();\r\n  }\r\n\r\n  private resetFields() {\r\n    this.birthday = null;\r\n    this.pass = null;\r\n    this.conPass = null;\r\n    this.knownAllergies = '';\r\n    this.isIncompleteErrorAvailable = false;\r\n  }\r\n\r\n  logIn() {\r\n    this.dataLoaderService.activateLoader(true, MODAL_TYPES.LOADING, false);\r\n    setTimeout(() => { this.dataLoaderService.activateLoader(false, MODAL_TYPES.LOADING); }, 1000);\r\n    // todo: location.reload(); to update the header\r\n  }\r\n}\r\n","export default \".mat-card-style {\\r\\n    margin-left: auto;\\r\\n    margin-right: auto;\\r\\n    margin-top: 30px;\\r\\n    min-width: 320px;\\r\\n    max-width: 320px;\\r\\n}\\r\\n\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvY29tcG9uZW50cy90cmFuc2l0aW9uLXBhZ2UvdHJhbnNpdGlvbi1wYWdlLmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7SUFDSSxpQkFBaUI7SUFDakIsa0JBQWtCO0lBQ2xCLGdCQUFnQjtJQUNoQixnQkFBZ0I7SUFDaEIsZ0JBQWdCO0FBQ3BCIiwiZmlsZSI6InNyYy9hcHAvY29tcG9uZW50cy90cmFuc2l0aW9uLXBhZ2UvdHJhbnNpdGlvbi1wYWdlLmNvbXBvbmVudC5jc3MiLCJzb3VyY2VzQ29udGVudCI6WyIubWF0LWNhcmQtc3R5bGUge1xyXG4gICAgbWFyZ2luLWxlZnQ6IGF1dG87XHJcbiAgICBtYXJnaW4tcmlnaHQ6IGF1dG87XHJcbiAgICBtYXJnaW4tdG9wOiAzMHB4O1xyXG4gICAgbWluLXdpZHRoOiAzMjBweDtcclxuICAgIG1heC13aWR0aDogMzIwcHg7XHJcbn1cclxuIl19 */\"","import {Component, EventEmitter, Input, OnInit, Output} from '@angular/core';\n\n@Component({\n  selector: 'app-transition-page',\n  templateUrl: './transition-page.component.html',\n  styleUrls: ['./transition-page.component.css']\n})\nexport class TransitionPageComponent implements OnInit {\n  @Input() modalType;\n  @Input() dismissible = true;\n  @Output() clickEmitter = new EventEmitter<string>();\n\n  constructor() { }\n\n  ngOnInit() {}\n\n  logIn() {\n    // this.router.navigate(['signup']).then(r => {\n    // });\n    this.clickEmitter.emit('logIn');\n  }\n\n  dismiss() {\n    this.clickEmitter.emit('back');\n  }\n}\n","export class AuthModel {\r\n    username: string;\r\n    password: string;\r\n}\r\n","import {HttpHeaders, HttpParams} from '@angular/common/http';\r\n\r\nexport class RequestOptions { \r\n    headers?: HttpHeaders;\r\n    params?: HttpParams;\r\n}\r\n","export class UserData {\r\n    userName: string;\r\n    password: string;\r\n    firstName: string;\r\n    lastName: string;\r\n    title: string;\r\n    isMale: boolean;\r\n    birthday: any;\r\n    contactNumber: string;\r\n    whatsAppNumber: string;\r\n    doctor: boolean;\r\n    userAllergies: string;\r\n}\r\n\r\nexport class WorkingTimePeriod {\r\n    startTime: string;\r\n    endTime: string;\r\n    isActive?: boolean;\r\n    startTimeSelected?: { hour: number; minute: number };\r\n    endTimeSelected?: { hour: number; minute: number };\r\n}\r\n\r\nexport class FixedDoctorDate {\r\n    day: number;\r\n    workingTimePeriods: WorkingTimePeriod [];\r\n    title?: string;\r\n}\r\n\r\nexport class DoctorScheduleData {\r\n    averageTimeForAppointment: number;\r\n    fixedDoctorDates: FixedDoctorDate [];\r\n}\r\n\r\nexport class DoctorSpecificData {\r\n    userName?: string;\r\n    title: string;\r\n    firstName: string;\r\n    lastName: string;\r\n    contactNumber: string;\r\n    whatsAppNumber: string;\r\n    regNo: string;\r\n    priceForAppointment: string;\r\n    priceCurrency: string;\r\n    qualifications: string;\r\n    professionalType?: string;\r\n    specialityA?: string;\r\n    specialityB?: string;\r\n    specialityC?: string;\r\n    availableForAppointment?: string;\r\n}\r\n\r\n","import { Injectable } from '@angular/core';\r\nimport {DoctorType} from '../utils/Constants';\r\nimport {startCase, camelCase} from 'lodash';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class DataHandlerService {\r\n\r\n  constructor() { }\r\n\r\n  convertTimeToHoursAndMinutes(time: string) {\r\n    const timeObj = {\r\n      hour: parseInt(time.split(':')[0], 10),\r\n      minute: parseInt(time.split(':')[1], 10)\r\n    };\r\n    return timeObj;\r\n  }\r\n\r\n  convertHoursAndMinutesToTime(time: { hour: number; minute: number }) {\r\n    const timeString = time.hour.toString().padStart(2, '0') + ':' + time.minute.toString().padStart(2, '0') + ':00';\r\n    return timeString;\r\n  }\r\n\r\n  convertCamelCaseToSentence(str: string) {\r\n    return startCase(camelCase(str));\r\n  }\r\n\r\n  convertToCamelCase(str: string) {\r\n    return camelCase(str);\r\n  }\r\n\r\n  convertProfessionalTypeToDBFormat(professionalType: string) {\r\n    switch (professionalType) {\r\n      case DoctorType.CON:\r\n        professionalType = 'CON';\r\n        break;\r\n      case DoctorType.COUN:\r\n        professionalType = 'COUN';\r\n        break;\r\n      case DoctorType.GEN:\r\n        professionalType = 'GEN';\r\n        break;\r\n      case DoctorType.OTH:\r\n        professionalType = 'OTH';\r\n        break;\r\n      default:\r\n        break;\r\n    }\r\n    return professionalType;\r\n  }\r\n\r\n  convertProfessionalTypeFromDBFormat(professionalType: string) {\r\n    switch (professionalType) {\r\n      case 'CON':\r\n        professionalType = DoctorType.CON;\r\n        break;\r\n      case 'COUN':\r\n        professionalType = DoctorType.COUN;\r\n        break;\r\n      case 'GEN':\r\n        professionalType = DoctorType.GEN;\r\n        break;\r\n      case 'OTH':\r\n        professionalType = DoctorType.OTH;\r\n        break;\r\n      default:\r\n        break;\r\n    }\r\n    return professionalType;\r\n  }\r\n\r\n}\r\n","import {Injectable} from '@angular/core';\r\nimport {HttpClient, HttpHeaders, HttpParams} from '@angular/common/http';\r\nimport {RequestOptions} from '../models/request-options';\r\nimport {DataKey, DataStoreService} from './data-store.service';\r\nimport {BehaviorSubject} from 'rxjs';\r\nimport {Constants, MODAL_TYPES} from '../utils/Constants';\r\nimport {take} from 'rxjs/operators';\r\nimport {MatDialogConfig} from '@angular/material';\r\nimport {ModalComponent} from '../components/modal/modal.component';\r\nimport {MatDialog} from '@angular/material/dialog';\r\n\r\n@Injectable({\r\n    providedIn: 'root'\r\n})\r\nexport class DataLoaderService {\r\n\r\n    constructor(\r\n        public dialog: MatDialog,\r\n        private http: HttpClient,\r\n        private dataStore: DataStoreService\r\n    ) {}\r\n\r\n    // make a GET request\r\n    public get<T>(url: string, param: HttpParams, headers: HttpHeaders, dataKey: DataKey) {\r\n        const options: RequestOptions = this.makeOptions(param, headers);\r\n        this.dataStore.set(DataKey.error, {});\r\n\r\n        if (this.dataStore.has(dataKey, true)) {\r\n            this.dataStore.set(dataKey, new BehaviorSubject(null));\r\n        }\r\n\r\n        return new Promise(resolve => {\r\n            this.http.get<T>(url, {\r\n                headers: options.headers,\r\n                params: options.params\r\n            }).subscribe(\r\n                // tslint:disable-next-line:no-shadowed-variable\r\n                ( data) => {\r\n                    resolve(data);\r\n                    // @ts-ignore\r\n                    // this.dataStore.set(dataKey, data.data, true);\r\n                });\r\n        });\r\n    }\r\n\r\n    // make a POST request\r\n    public post<T>(url: string, param: HttpParams, headers: HttpHeaders, dataKey: DataKey, data: any) {\r\n        const options: RequestOptions = this.makeOptions(param, headers);\r\n        this.dataStore.set(DataKey.error, {});\r\n\r\n        if (this.dataStore.has(dataKey, true)) {\r\n            this.dataStore.set(dataKey, new BehaviorSubject(null));\r\n        }\r\n\r\n        return new Promise(resolve => {\r\n            this.http.post<T>(url, data, {\r\n                headers: options.headers,\r\n                params: options.params\r\n            }).subscribe(\r\n                // tslint:disable-next-line:no-shadowed-variable\r\n                ( data) => {\r\n                    resolve(data);\r\n                    // @ts-ignore\r\n                    this.dataStore.set(dataKey, data.data, true);\r\n                });\r\n        });\r\n    }\r\n\r\n    // make a PUT request\r\n    public put<T>(url: string, param: HttpParams, headers: HttpHeaders, dataKey: DataKey, data: any) {\r\n        const options: RequestOptions = this.makeOptions(param, headers);\r\n        this.dataStore.set(DataKey.error, {});\r\n\r\n        if (this.dataStore.has(dataKey, true)) {\r\n            this.dataStore.set(dataKey, new BehaviorSubject(null));\r\n        }\r\n        return new Promise(resolve => {\r\n            this.http.put<T>(url, data, {\r\n                headers: options.headers,\r\n                params: options.params\r\n            }).subscribe(\r\n                // tslint:disable-next-line:no-shadowed-variable\r\n                ( data) => {\r\n                    resolve(data);\r\n                    // @ts-ignore\r\n                    this.dataStore.set(dataKey, data.data, true);\r\n                });\r\n        });\r\n        // this.http.put<T>(url, data, {\r\n        //     headers: options.headers,\r\n        //     params: options.params\r\n        // }).subscribe(\r\n        //     result => {\r\n        //         this.dataStore.set(dataKey, result, true);\r\n        //     },\r\n        //     error => {\r\n        //         this.dataStore.set(DataKey.error, error, true);\r\n        //     }\r\n        // );\r\n    }\r\n\r\n    // make a DELETE request\r\n    public delete<T>(url: string, param: HttpParams, headers: HttpHeaders, dataKey: DataKey) {\r\n        const options: RequestOptions = this.makeOptions(param, headers);\r\n        this.dataStore.set(DataKey.error, {});\r\n\r\n        if (this.dataStore.has(dataKey, true)) {\r\n            this.dataStore.set(dataKey, new BehaviorSubject(null));\r\n        }\r\n\r\n        this.http.delete<T>(url, {\r\n            headers: options.headers,\r\n            params: options.params\r\n        }).subscribe(\r\n            result => {\r\n                this.dataStore.set(dataKey, result, true);\r\n            },\r\n            error => {\r\n                this.dataStore.set(DataKey.error, error, true);\r\n            }\r\n        );\r\n    }\r\n\r\n    // make request params and headers for request\r\n    private makeOptions(param: HttpParams, headers: HttpHeaders): RequestOptions {\r\n        const options: RequestOptions = new RequestOptions();\r\n        options.params = param;\r\n        options.headers = headers;\r\n        options.headers = options.headers.append('Content-Type', 'application/json');\r\n\r\n        // get auth key for authorization\r\n        if (localStorage.getItem(Constants.EZMED_AUTH) != null) {\r\n            let authKey = 'Bearer ';\r\n            authKey = authKey + localStorage.getItem(Constants.EZMED_AUTH);\r\n            options.headers = options.headers.append('Authorization', authKey);\r\n        }\r\n        return options;\r\n    }\r\n\r\n    // user login and get JWT token\r\n    public login<T>(url: string, options: RequestOptions, data: any, dataKey: DataKey) {\r\n        this.dataStore.set(DataKey.error, {});\r\n\r\n        if (this.dataStore.has(dataKey, true)) {\r\n            this.dataStore.set(dataKey, new BehaviorSubject(null));\r\n        }\r\n\r\n        this.http.post<T>(url, data, {\r\n            headers: options.headers,\r\n            params: options.params\r\n        }).subscribe(\r\n            result => {\r\n                this.dataStore.set(DataKey.loggedUser, data, true);\r\n                // @ts-ignore\r\n                localStorage.setItem(Constants.EZMED_AUTH, result.jwt);\r\n            },\r\n            error => {\r\n                this.dataStore.set(DataKey.error, error, true);\r\n            });\r\n    }\r\n\r\n    // logout from the app\r\n    public logOut() {\r\n        localStorage.removeItem(Constants.EZMED_AUTH);\r\n    }\r\n\r\n    public activateLoader(activate: boolean, MODAL_TYPE: MODAL_TYPES, disableClose?: boolean) {\r\n        const dialogConfig = new MatDialogConfig();\r\n\r\n        dialogConfig.data = {\r\n            modalType: MODAL_TYPE\r\n        };\r\n        dialogConfig.disableClose = disableClose;\r\n        dialogConfig.width = '300px';\r\n\r\n        let dialogRef;\r\n        if (activate) {\r\n            dialogRef = this.dialog.open(ModalComponent, dialogConfig);\r\n            dialogRef.afterClosed().subscribe(result => {\r\n                // console.log('dialogRef.afterClosed().subscribe');\r\n            });\r\n        } else {\r\n            dialogRef = this.dialog.closeAll();\r\n        }\r\n    }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport {BehaviorSubject} from 'rxjs';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class DataStoreService {\r\n\r\n  private data: Map<string, any> = new Map();\r\n  private asyncData: Map<DataKey, BehaviorSubject<any>> = new Map();\r\n\r\n  constructor() {\r\n    for (const key in DataKey) {\r\n      if (parseInt(key, 10) >= 0) {\r\n        if (!this.asyncData.has(DataKey[DataKey[key]])) {\r\n          this.asyncData.set(DataKey[DataKey[key]], new BehaviorSubject(null));\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  public get(key: any, isAsync: boolean = true) {\r\n    if (isAsync) {\r\n      return this.asyncData.get(key);\r\n    } else {\r\n      return this.data.get(key);\r\n    }\r\n  }\r\n\r\n  public set(key: any, data: any, isAsync: boolean = true) { \r\n    if (isAsync) { \r\n      if (!this.asyncData.has(key)) { \r\n        this.asyncData.set(key, null); \r\n      } \r\n      this.asyncData.get(key).next(data); \r\n    } else {\r\n     this.data.set(key, data); \r\n    } \r\n  }\r\n\r\n  public has(key: any, isAsync: boolean = true) { \r\n    if (isAsync) { \r\n      return this.asyncData.has(key); \r\n    } else { \r\n      return this.data.has(key); \r\n    } \r\n  }\r\n}\r\n\r\nexport enum DataKey {\r\n  error,\r\n  authKey,\r\n  loggedUser,\r\n  loggedInUser,\r\n  createdUser,\r\n  uploadImage,\r\n  doctorScheduleData,\r\n  signUpResultObject,\r\n  availableAppointmentsForProfessional\r\n}\r\n\r\nexport enum SessionStorageKeys {\r\n  loggedInUser = 'loggedInUser',\r\n  userId = 'userId',\r\n  userName = 'userName'\r\n}\r\n","export enum Constants {\r\n    // endpoints\r\n    BASE_URL = 'http://localhost:8080',\r\n    AUTHENTICATION = 'test',\r\n    CREATE_NEW_USER = '/user/register',\r\n    UPLOAD_USER_IMAGE = '/user/upload/image',\r\n    PROFESSIONAL_SEARCH = '/doctor/doctorSearch/advanced/',\r\n    UPDATE_PROFESSIONAL_SPECIFIC_DATA = '/user/doctor/data/',\r\n    UPDATE_PROFESSIONAL_WORK_DATA = '/user/doctor/work-data/',\r\n    GET_USER_DATA = '/user/user-data/',\r\n    AVAILABLE_APPOINTMENTS_FOR_A_PROFESSIONAL = '/doctor/available-appointments/',\r\n    // UPDATE_PROFESSIONAL_WORK_DATA = '/user/test?username=dfg',\r\n\r\n    // modal types\r\n    MODAL_TYPE_SIGN_UP = 'SIGN_UP',\r\n    MODAL_TYPE_PROFILE = 'PROFILE',\r\n    EZMED_AUTH = 'EZMED_AUTH'\r\n}\r\n\r\nexport enum DoctorTitles {\r\n    DR = 'Dr',\r\n    MR = 'Mr',\r\n    MRS = 'Mrs',\r\n    MS = 'Ms',\r\n    PROF = 'Prof',\r\n}\r\n\r\nexport enum MODAL_TYPES {\r\n    LOADING = 'LOADING'\r\n}\r\n\r\nexport enum TRANSITION_PAGE_TYPE {\r\n    LOGIN_REDIRECT = 'LOGIN_REDIRECT'\r\n}\r\n\r\nexport enum currencyCodes {\r\n    LKR = 'LKR',\r\n    USD = 'USD',\r\n    GBP = 'GBP',\r\n    JPY = 'JPY',\r\n    EUR = 'EUR',\r\n}\r\n\r\nexport enum DoctorType {\r\n    CON = 'Consultant',\r\n    COUN = 'Counselor',\r\n    GEN = 'General Practitioner',\r\n    OTH = 'Other Medical Practitioner'\r\n}\r\n\r\nexport const specializations = [\r\n    'Any',\r\n    'Immunologist',\r\n    'Cardiologist',\r\n    'Pulmonologist',\r\n    'Radiologist',\r\n    'Dermatologist',\r\n    'ClinicalNutritionist',\r\n    'Endocrinologist'\r\n    ];\r\n","// This file can be replaced during build by using the `fileReplacements` array.\r\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\r\n// The list of file replacements can be found in `angular.json`.\r\n\r\nexport const environment = {\r\n  production: false\r\n};\r\n\r\n/*\r\n * For easier debugging in development mode, you can import the following file\r\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\r\n *\r\n * This import should be commented out in production mode because it will have a negative impact\r\n * on performance if an error is thrown.\r\n */\r\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\r\n","import 'hammerjs';\r\nimport { enableProdMode } from '@angular/core';\r\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\n\r\nimport { AppModule } from './app/app.module';\r\nimport { environment } from './environments/environment';\r\n\r\nif (environment.production) {\r\n  enableProdMode();\r\n}\r\n\r\nplatformBrowserDynamic().bootstrapModule(AppModule)\r\n  .catch(err => console.error(err));\r\n"],"sourceRoot":"webpack:///","file":"main-es5.js"}